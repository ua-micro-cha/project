{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Fruit Surface and Soil Microbiome Project","text":""},{"location":"#overview","title":"Overview","text":"<p>Welcome to the live journal, a.k.a. raw notes dump, for the Fruit Surface and Soil Microbiome Project. This page is a hub for documenting our research and learning opportunities.</p>"},{"location":"#objective","title":"Objective","text":"<p>The goal of this page is to maintain an organized, chronological archive of raw notes and observations that arise during this project. It will assist in tracking the development of our methodologies and the evolution of our data analysis strategies, ensuring reproducibility and continuous improvement in our research practices.</p>"},{"location":"#structure","title":"Structure","text":"<p>Journal entries include, but are not limited to:</p> <ul> <li>Bioinformatics Workflow: Drafts of code, error logs, successful scripts, and version updates</li> <li>Educational Activities: Insights and key takeaways from Project-related seminars, workshops, and training sessions</li> <li>Literature Insights: Recent studies, relevant scientific literature, and metagenomic tools that may inform and drive our research forward</li> </ul>"},{"location":"#navigation","title":"Navigation","text":"<p>Notes are categorized by date and are searchable. Each entry is written to provide quick insights into the challenges and solutions employed, offering a transparent view of the bioinformatics analysis happenings.</p> <p>Please share any suggestions or ideas to enhance the clarity and effectiveness of this page.</p>"},{"location":"240426/","title":"26 April 2024","text":""},{"location":"240426/#tree-fruit-kraken-2-scripts","title":"Tree Fruit Kraken 2 Scripts","text":"<ul> <li>kraken2</li> <li> <p>Submitting Batch Jobs</p> </li> <li> <p>Open the slurm script directory in the terminal.</p> </li> <li> <p>Enter code using the <code>sbatch</code> command: <pre><code>sbatch kr_orange_reads.slurm\n</code></pre></p> </li> </ul>"},{"location":"240426/#kr_apple_readsslurm","title":"kr_apple_reads.slurm","text":"<pre><code>#!/bin/bash\n#SBATCH --job-name=kr_apple_reads\n#SBATCH --account=kcooper\n#SBATCH --partition=standard\n#SBATCH --nodes=1\n#SBATCH --ntasks=64\n#SBATCH --time=48:00:00\n#SBATCH --mem-per-cpu=12gb                   \n#SBATCH --mail-type=ALL\n\nmodule load anaconda/2020\nsource ~/.bashrc\nconda activate kraken2-env\ncd /xdisk/kcooper/caparicio/tree-fruit\n\nfor file in 01c_fastp_reads/*_1.trimmed.fastq\ndo\n    # Extract the base name of the file (without _1.trimmed.fastq)\n    base=$(basename $file _1.trimmed.fastq)\n\n    # Process only files with \"apples\" in the base name\n    if [[ $base != *\"apples\"* ]]; then\n        continue\n    fi\n\n    # Define input files\n    file1=\"01c_fastp_reads/${base}_1.trimmed.fastq\"\n    file2=\"01c_fastp_reads/${base}_2.trimmed.fastq\"\n\n    # Define output files and temporary files\n    output=\"04a_reads_kraken2/${base}_output.txt\"\n    temp_output=\"04a_reads_kraken2/${base}_output.tmp\"\n    report=\"04a_reads_kraken2/${base}_report.txt\"\n    temp_report=\"04a_reads_kraken2/${base}_report.tmp\"\n\n    # Check if output files from previous run exist and are incomplete, then remove them\n    if [ -f \"$output\" ] || [ -f \"$report\" ]; then\n        echo \"Incomplete or previous output files found for $base. Removing...\"\n        rm -f \"$output\" \"$report\"\n    fi\n\n    # Run Kraken2 with temporary output files\n    kraken2 --db /xdisk/kcooper/kcooper/database/Kraken_Special_DB \\\n            --confidence 0.1 \\\n            --report-minimizer-data \\\n            --output $temp_output \\\n            --paired \\\n            --report $temp_report \\\n            --memory-mapping \\\n            --use-names \\\n            $file1 \\\n            $file2\n\n    # Check if Kraken2 ran successfully and rename temporary files\n    if [ $? -eq 0 ]; then\n        mv \"$temp_output\" \"$output\"\n        mv \"$temp_report\" \"$report\"\n    else\n        echo \"Kraken2 failed for $base. Temporary files not renamed.\"\n    fi\ndone\n</code></pre>"},{"location":"240426/#kr_orange_readsslurm","title":"kr_orange_reads.slurm","text":"<pre><code>#!/bin/bash\n#SBATCH --job-name=kr_orange_reads\n#SBATCH --account=kcooper\n#SBATCH --partition=standard\n#SBATCH --nodes=1\n#SBATCH --ntasks=64\n#SBATCH --time=24:00:00\n#SBATCH --mem-per-cpu=20gb\n#SBATCH --mail-type=ALL\n\nmodule load anaconda/2020\nsource ~/.bashrc\nconda activate kraken2-env\n\nDB_PATH=\"/xdisk/kcooper/kcooper/database/Kraken_Special_DB\"\ncd /xdisk/kcooper/caparicio/tree-fruit\nOUTPUT_DIR=\"04a_reads_kraken2\"\nINPUT_DIR=\"01c_fastp_reads\"\nTHREADS=46\nCONFIDENCE=0.1\nREPORT_FILE=\"${OUTPUT_DIR}/kraken2_report.txt\"\nCHECKPOINT_FILE=\"${OUTPUT_DIR}/checkpoint.txt\"\n\n# Automated cleanup to ensure a clean slate before starting processing\necho \"Cleaning up incomplete files...\"\nfind ${OUTPUT_DIR} -name '*.tmp' -delete\n\n# Loop through files, skipping those already processed\nfor file in ${INPUT_DIR}/*oranges*1.trimmed.fastq; do\n    file_base=$(basename $file _1.trimmed.fastq)\n\n    # Skip files processed in previous runs\n    if [[ \"$LAST_PROCESSED\" &gt; \"$file_base\" ]]; then\n        continue\n    fi\n\n    paired_file=\"${INPUT_DIR}/${file_base}_2.trimmed.fastq\"\n    temp_output_file=\"${OUTPUT_DIR}/k2_${file_base}_output.txt.tmp\"\n    temp_report_file=\"${OUTPUT_DIR}/k2_${file_base}_report.txt.tmp\"\n    final_output_file=\"${OUTPUT_DIR}/k2_${file_base}_output.txt\"\n    final_report_file=\"${OUTPUT_DIR}/k2_${file_base}_report.txt\"\n\n    # Run Kraken2, directing output to temporary files, including minimizer data in the report\n    kraken2 --db $DB_PATH \\\n            --paired $file $paired_file \\\n            --output $temp_output_file \\\n            --report $temp_report_file \\\n            --report-minimizer-data \\\n            --memory-mapping \\\n            --use-names \\\n            --threads $THREADS \\\n            --confidence $CONFIDENCE &amp;&amp; {\n        mv $temp_output_file $final_output_file\n        mv $temp_report_file $final_report_file\n        echo $file_base &gt;&gt; $CHECKPOINT_FILE\n    } || {\n        echo \"Kraken 2 processing failed for $file_base. Cleaning up...\"\n        rm -f $temp_output_file $temp_report_file\n    }\ndone\n\n# Concatenate all individual reports into a comprehensive report\ncat ${OUTPUT_DIR}/*_report.txt.tmp &gt; $REPORT_FILE\n\n# Cleanup checkpoint file and temporary reports after successful run\nrm -f $CHECKPOINT_FILE\nrm -f ${OUTPUT_DIR}/*_report.txt.tmp\n</code></pre>"},{"location":"240426/#kr_peach_readsslurm","title":"kr_peach_reads.slurm","text":"<pre><code>#!/bin/bash\n#SBATCH --job-name=kr_peach_reads\n#SBATCH --account=kcooper\n#SBATCH --partition=standard\n#SBATCH --nodes=1\n#SBATCH --ntasks=60\n#SBATCH --time=24:00:00\n#SBATCH --mem-per-cpu=20gb\n#SBATCH --mail-type=ALL\n\nmodule load anaconda/2020\nsource ~/.bashrc\nconda activate kraken2-env\n\nDB_PATH=\"/xdisk/kcooper/kcooper/database/Kraken_Special_DB\"\ncd /xdisk/kcooper/caparicio/tree-fruit\nOUTPUT_DIR=\"04a_reads_kraken2\"\nINPUT_DIR=\"01c_fastp_reads\"\nTHREADS=46\nCONFIDENCE=0.1\nREPORT_FILE=\"${OUTPUT_DIR}/kraken2_report.txt\"\nCHECKPOINT_FILE=\"${OUTPUT_DIR}/checkpoint.txt\"\n\n# Automated cleanup to ensure a clean slate before starting processing\necho \"Cleaning up incomplete files...\"\nfind ${OUTPUT_DIR} -name '*.tmp' -delete\n\n# Loop through files, skipping those already processed\nfor file in ${INPUT_DIR}/*peaches*1.trimmed.fastq; do\n    file_base=$(basename $file _1.trimmed.fastq)\n\n    # Skip files processed in previous runs\n    if [[ \"$LAST_PROCESSED\" &gt; \"$file_base\" ]]; then\n        continue\n    fi\n\n    paired_file=\"${INPUT_DIR}/${file_base}_2.trimmed.fastq\"\n    temp_output_file=\"${OUTPUT_DIR}/k2_${file_base}_output.txt.tmp\"\n    temp_report_file=\"${OUTPUT_DIR}/k2_${file_base}_report.txt.tmp\"\n    final_output_file=\"${OUTPUT_DIR}/k2_${file_base}_output.txt\"\n    final_report_file=\"${OUTPUT_DIR}/k2_${file_base}_report.txt\"\n\n    # Run Kraken2, directing output to temporary files, including minimizer data in the report\n    kraken2 --db $DB_PATH \\\n            --paired $file $paired_file \\\n            --output $temp_output_file \\\n            --report $temp_report_file \\\n            --report-minimizer-data \\\n            --memory-mapping \\\n            --use-names \\\n            --threads $THREADS \\\n            --confidence $CONFIDENCE &amp;&amp; {\n        mv $temp_output_file $final_output_file\n        mv $temp_report_file $final_report_file\n        echo $file_base &gt;&gt; $CHECKPOINT_FILE\n    } || {\n        echo \"Kraken 2 processing failed for $file_base. Cleaning up...\"\n        rm -f $temp_output_file $temp_report_file\n    }\ndone\n\n# Concatenate all individual reports into a comprehensive report\ncat ${OUTPUT_DIR}/*_report.txt.tmp &gt; $REPORT_FILE\n\n# Cleanup checkpoint file and temporary reports after successful run\nrm -f $CHECKPOINT_FILE\nrm -f ${OUTPUT_DIR}/*_report.txt.tmp\n</code></pre>"},{"location":"240426/#using-mambaconda-in-jupyter","title":"Using Mamba/Conda in Jupyter","text":"<p>HPC GUI Jobs</p> <p>Configure a Jupyter Notebook to use an already-existing Conda kraken 2 environment: 1. Launch Interactive Desktop\\ Run Time = 24 ; Core count on a single node = 60 ; Memory per core = 20</p> <p></p> <ol> <li>Load Anaconda Module In the interactive terminal, load the Anaconda module to access <code>conda</code>: <pre><code>module load anaconda/2020\n</code></pre></li> <li>Activate the Kraken 2 Conda Environment <pre><code>conda activate kraken2-env\n</code></pre></li> <li>Install IPython Kernel in <code>kraken2-env</code> to make it available in Jupyter <pre><code>conda install ipykernel\n</code></pre></li> <li>Add the iPython Kernel to the  Kraken 2 Jupyter Environment <pre><code>python -m ipykernel install --user --name kraken2-env --display-name \"Python (kraken2-env)\"\n</code></pre></li> <li> <p>After adding the kernel, the interactive terminal session can be closed. </p> </li> <li> <p>Restart the Jupyter Session Log out and start a new Jupyter session to refresh the kernel list.</p> </li> <li> <p>Select the New Kernel from the 'Kernel' menu &gt; 'Change kernel' When starting a new notebook, select the \"Python (kraken2-env)\" kernel to use in the custom environment.</p> </li> </ol> <p>These steps ensure that the <code>kraken2-env</code> is available as a kernel in Jupyter notebooks, allowing the Python version management and Kraken 2 access.</p> <p>Once the IPython kernel has been created for <code>kraken2-env</code>, the new kernel becomes a permanent option in the Jupyter Notebook interface.</p>"},{"location":"240426/#how-it-works","title":"How It Works","text":"<p>By running <code>ipykernel install --user --name kraken2-env --display-name \"Python (kraken2-env)\"</code>, a JSON file for this kernel is created in the Jupyter kernels directory (typically <code>.local/share/jupyter/kernels/kraken2-env/</code> on Unix-like systems). This JSON file contains the metadata necessary for Jupyter to identify and launch the kernel, including the path to the Python executable within the activated conda environment.</p>"},{"location":"240426/#ensuring-the-kernel-appears-in-subsequent-sessions","title":"Ensuring the Kernel Appears in Subsequent Sessions","text":"<ul> <li>Permanent User Option: As long as the kernel's JSON configuration file remains in its directory and points to a valid Python executable within an accessible conda environment, it will appear as an option every time the Jupyter Notebook server starts from any location on the same system/user account.</li> <li>Recalling the Kernel: When creating a new notebook (or opening an existing one), select the \u201cPython (kraken2-env)\u201d kernel from the dropdown Kernel menu to start a notebook in that environment.</li> </ul>"},{"location":"240426/#if-the-kernel-doesnt-appear","title":"If the Kernel Doesn't Appear","text":"<ul> <li>Environment Changes: If the kernel doesn't appear, ensure the <code>kraken2-env</code> environment and its IPython kernel installation haven't been altered or deleted.</li> <li>Jupyter Configuration: Check the Jupyter configuration to ensure it's scanning the correct directories for kernel specifications by running <code>jupyter kernelspec list</code> in the terminal. The output will display paths to the kernels available.</li> </ul>"},{"location":"240426/#execute-shell-commands-in-jupyter","title":"Execute Shell Commands in Jupyter","text":"<ul> <li>Dr. Liz\u00e1rraga's Command Line Interface Shell</li> <li>The Jupyter Notebook</li> <li>Data Lab's Jupyter Notebooks</li> <li>Data Lab's [2024 Spring] Data Science Essentials Series - Introduction to Jupyter Notebooks YouTube</li> <li>Install Jupyter Book via CyVerse Foundational Open Science Skills 2024   Documentation &amp; Communication</li> <li>HPC: Jupyter in Singularity YouTube</li> <li>AnacondaTFJupyter YouTube</li> <li>CyVerse Webinar: Writing and Sharing Computational Analyses in Jupyter Notebooks YouTube</li> </ul> <p>ERROR: Indicates an attempt to execute shell commands in a Python environment within a Jupyter notebook. Python requires specific formatting to understand bash/shell syntax for executing shell commands. Two options to resolve issues in Jupyter notebook cell:</p>"},{"location":"240426/#option-1-use-ipython-magic-command-for-shell-execution","title":"Option 1: Use IPython Magic Command for Shell Execution","text":"<p>IPython, upon which Jupyter notebooks are based, provides magic commands that extend the normal Python syntax. For running shell commands, use the <code>!</code> prefix or the <code>%%bash</code> cell magic for multi-line shell scripts.</p>"},{"location":"240426/#applying-for-single-line-commands","title":"Applying <code>!</code> for Single Line Commands:","text":"<p>To execute single-line shell commands, start the command with <code>!</code>: <pre><code>!echo \"Cleaning up incomplete files...\"\n</code></pre></p>"},{"location":"240426/#using-bash-for-multi-line-scripts","title":"Using <code>%%bash</code> for Multi-line Scripts:","text":"<p>For multi-line scripts, use the <code>%%bash</code> magic at the beginning of the cell. This tells Jupyter that the entire cell contains bash commands: <pre><code>%%bash\n# Define directories\nOUTPUT_DIR=\"your/output/dir\"\n\n# Function to clean up incomplete or corrupted files\ncleanup() {\n    echo \"Cleaning up incomplete files...\"\n    find ${OUTPUT_DIR} -name '*.tmp' -delete\n}\n\n# Automated cleanup at start to ensure a clean slate\ncleanup\n</code></pre></p>"},{"location":"240426/#option-2-use-python-to-perform-the-same-task","title":"Option 2: Use Python to Perform the Same Task","text":"<p>Alternatively, translate bash functions into Python to accomplish same, leveraging Python's <code>os</code> and <code>glob</code> modules for directory and file operations: <pre><code>import os\nimport glob\n\n# Define directories\nOUTPUT_DIR = \"your/output/dir\"\n\ndef cleanup():\n    print(\"Cleaning up incomplete files...\")\n    for tmp_file in glob.glob(os.path.join(OUTPUT_DIR, '*.tmp')):\n        os.remove(tmp_file)\n\n# Automated cleanup at start to ensure a clean slate\ncleanup()\n</code></pre> This Python version accomplishes as the bash script above, but in Jupyter notebook's native Python environment.</p>"},{"location":"240426/#sample-tracker","title":"Sample Tracker","text":"sample(s) stage program status queue time cluster run time hrs:min Job # ntaskts (CPU -t) Mem -m file location script script location queue 4/24/2024 puma 24 9673002-missed 62 20 1240 jupyter apples313 alignment blast queue 4/23/2024 puma 24 9670368-missed 62 20 1240 /kcooper/caparicio/tree-fruit/07a_reads_blast apple_blast.ipynb /kcooper/caparicio/tree-fruit/07batch tree fruit reads biom file kraken-biom queue 4/23/2024 puma 12 9666325-missed 42 20 840 /kcooper/caparicio/tree-fruit/05_kraken-biom interactive /kcooper/caparicio/tree-fruit/05batch apples313 arg deeparg queue 4/22/2024 puma 24 9661323-missed 62 20 1240 /kcooper/caparicio/tree-fruit/09_deeparg apple_deeparg.ipynb /kcooper/caparicio/tree-fruit/09batch apples313 arg deeparg in progress 1-22:16:37 puma 24 9607499 62 20 1240 /kcooper/caparicio/tree-fruit/09_deeparg apple_deeparg.ipynb /kcooper/caparicio/tree-fruit/09batch apples313 arg deeparg in progress 1-22:16:37 puma 24 9607499 62 20 1240 /kcooper/caparicio/tree-fruit/09_deeparg apple_deeparg.ipynb /kcooper/caparicio/tree-fruit/09batch apples313 alignment blast in progress 2-13:54:46 puma 24 9544144 62 20 1240 /kcooper/caparicio/tree-fruit/07a_reads_blast apple_blast.ipynb /kcooper/caparicio/tree-fruit/07batch apples313 alignment blast in progress 2-18:24:00 puma 24 9532276 62 20 1240 /kcooper/caparicio/tree-fruit/07a_reads_blast apple_blast.ipynb /kcooper/caparicio/tree-fruit/07batch apples313 alignment blast in progress 0:02:11 puma 24 9514722 62 20 1240 /kcooper/caparicio/tree-fruit/07a_reads_blast apple_blast.ipynb /kcooper/caparicio/tree-fruit/07batch apple assembly metaSPAdes (SPAdes) queue puma 48 9678741 64 25 1600 cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch apple_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch peach assembly metaSPAdes (SPAdes) queue puma 48 9659598 62 20 1240 cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch peach_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch orange assembly metaSPAdes (SPAdes) queue puma 48 9656556 62 20 1240 cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch orange_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch apple assembly metaSPAdes (SPAdes) in progress 1-09:33:21 puma 48 9656539 62 20 1240 cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch apple_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch peach assembly metaSPAdes (SPAdes) in progress 1-13:59:27 puma 48 9659598 62 20 1240 cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch peach_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch apple assembly metaSPAdes (SPAdes) in progress 1-01:53:22 puma 48 9626829 62 20 1240 cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch apple_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch orange assembly metaSPAdes (SPAdes) in progress 1-20:23:44 puma 48 9607486 62 20 1240 cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch orange_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch peach assembly metaSPAdes (SPAdes) in progress 2-07:44:37 puma 0:00 9569668 62 20 1240 cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch peach_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch apple assembly metaSPAdes (SPAdes) in progress 2-01:55:18 puma 48 9569667 62 20 1240 cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch apple_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch peach assembly metaSPAdes (SPAdes) in progress 8-12:40:52 puma 48 9481898 64 20 1280 cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch peach_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch orange assembly metaSPAdes (SPAdes) in progress 1-22:23:40 puma 48 9544142 62 20 1240 cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch orange_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch apple assembly metaSPAdes (SPAdes) in progress 5-01:30:51 puma 48 9510852 60 20 1200 cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch apple_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch orange assembly metaSPAdes (SPAdes) in progress 8-07:36:36 puma 48 9455659 64 20 1280 cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch orange_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch apple assembly metaSPAdes (SPAdes) in progress 9-19:56:59 puma 0:00 9475436 64 20 1280 cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch apple_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch apple assembly metaSPAdes (SPAdes) in progress 9-10:02:53 puma 48 9452625 64 20 1280 cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch apple_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch apple assembly metaSPAdes (SPAdes) in progress 9-20:30:02 puma 48 9448076 62 20 1240 cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch apple_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch orange taxonomic class kraken 2 complete 9-06:30:40 puma 24 9444742 64 20 1280 cd /xdisk/kcooper/caparicio/tree-fruit/03a_reads_kraken2 kr_orange_reads.ipynb cd /xdisk/kcooper/caparicio/tree-fruit/03batch peach taxonomic class kraken 2 complete 10-03:45:32 puma 24 9444741 64 20 1280 cd /xdisk/kcooper/caparicio/tree-fruit/03a_reads_kraken2 sbatch kr_peach_reads.slurm cd /xdisk/kcooper/caparicio/tree-fruit/03batch orange taxonomic class kraken 2 in progress puma 24 9431841 64 20 1280 cd /xdisk/kcooper/caparicio/tree-fruit/03a_reads_kraken2 sbatch kr_orange_reads.slurm cd /xdisk/kcooper/caparicio/tree-fruit/03batch apple assembly metaSPAdes (SPAdes) in progress puma 0:00 9448076 64 20 1280 cd /xdisk/kcooper/caparicio/tree-fruit/02assembly apple_read_assembly.ipynb cd /xdisk/kcooper/caparicio/tree-fruit/02batch apple assembly metaSPAdes (SPAdes) REDOcompleteBUT NO FASTA puma 48 9004247 64 var var cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch apples_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch YumaHarvC10-YumaSoil633 poly-g removal fastp debug puma 0:00 9398738 64 20 1280 cd /xdisk/kcooper/caparicio/MELONS/01c_fastp_reads2 melon_fastp.ipynb melon_soil_fastp.ipynb cd /xdisk/kcooper/caparicio/MELONS/ orange taxonomic class kraken 2 puma 24 9245197 64 32 2048 cd /xdisk/kcooper/caparicio/tree-fruit/03a_reads_kraken2 sbatch kr_orange_reads.slurm cd /xdisk/kcooper/caparicio/tree-fruit/03batch peach taxonomic class kraken 2 debug puma 24 9245195 64 32 2048 cd /xdisk/kcooper/caparicio/tree-fruit/03a_reads_kraken2 sbatch kr_peach_reads.slurm cd /xdisk/kcooper/caparicio/tree-fruit/03batch melon poly-g removal fastp debug puma 24 9247470 48 4 192 cd /xdisk/kcooper/caparicio/MELONS/01c_fastp_reads sbatch melon_fastp.slurm cd /xdisk/kcooper/caparicio/MELONS/ melon soil poly-g removal fastp in progress puma 24 9247471 48 4 192 cd /xdisk/kcooper/caparicio/tree-fruit/03a_reads_kraken2 sbatch melon_soil_fastp.slurm cd /xdisk/kcooper/caparicio/MELONS/ tree-fruit poly-g removal fastp complete puma 0:55 8662642 48 4 192 cd /xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads sbatch fruit_01c_fastp.slurm cd /xdisk/kcooper/caparicio/tree-fruit melon/soil poly-g removal fastp debug puma 528 9132669 48 4 192 cd /xdisk/kcooper/caparicio/MELONS/01c_fastp_reads sbatch melon_fastp.slurm cd /xdisk/kcooper/caparicio/MELONS apple assembly metaSPAdes (SPAdes) REDOcompleteBUT NO FASTA puma 48 9004247 64 var var cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch apples_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch peach assembly metaSPAdes (SPAdes) killed ocelote 972 2757752 28 var var cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch peach_assem.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch orange assembly metaSPAdes (SPAdes) killed elgato 144 1777319 16 var var cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch oranges_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch orange assembly metaSPAdes (SPAdes) killed elgato 144 1777319 16 var var cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch oranges_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch apple taxonomic class kraken 2 complete puma 48 9016680 64 12 768 cd /xdisk/kcooper/caparicio/tree-fruit/03a_reads_kraken2 sbatch kr_apple_reads.slurm cd /xdisk/kcooper/caparicio/tree-fruit/03batch tree fruit fastq to fasta seqtk complete elgato 0:35 1803380 8 4 32 cd /xdisk/kcooper/caparicio/tree-fruit/01d_fasta sbatch tree-fruit_fasta.slurm cd /xdisk/kcooper/caparicio/tree-fruit/01d_fasta"},{"location":"240426/#bioinformatics-workflow-snapshot","title":"Bioinformatics Workflow Snapshot","text":""},{"location":"240510/","title":"10 May 2024","text":""},{"location":"240510/#tree-fruit-metaspades-assembly-scripts","title":"Tree Fruit metaSPAdes Assembly Scripts","text":""},{"location":"240510/#apple_assemblyslurm","title":"apple_assembly.slurm","text":"<pre><code>#!/bin/bash\n#SBATCH --job-name=apple_assembly\n#SBATCH --account=kcooper\n#SBATCH --partition=standard\n#SBATCH --nodes=1\n#SBATCH --ntasks=64\n#SBATCH --cpus-per-task=1\n#SBATCH --time=48:00:00\n#SBATCH --mem-per-cpu=25gb    \n#SBATCH --mail-type=ALL\n\nmodule load spades\ncd /xdisk/kcooper/caparicio/tree-fruit/\n\nfiles1=(01c_fastp_reads/*apples*_1.trimmed.fastq)\n\nfor f1 in \"${files1[@]}\"; do\n    f2=\"${f1/_1.trimmed.fastq/_2.trimmed.fastq}\"\n    sample_name=$(basename \"$f1\" \"_1.trimmed.fastq\")\n    output_dir=\"02_assembly/${sample_name}\"\n\n    # Ensure a clean start by cleaning any previous run data\n    rm -rf ${output_dir:?}/*  # Clear directory properly\n\n    mkdir -p \"$output_dir\"\n    temp_dir=\"$output_dir/tmp\" \n    mkdir -p \"$temp_dir\"\n\n    # Properly resolve wildcards before running SPAdes\n    if [ -f \"${output_dir}/spades.log\" ]; then\n        echo \"Resuming SPAdes assembly for $sample_name\"\n        cmd=\"spades.py --meta -o $output_dir --tmp-dir $temp_dir --continue\"\n    else\n        echo \"Starting new SPAdes assembly for $sample_name\"\n        cmd=\"spades.py --meta -k 21,33,55,77 -o $output_dir --tmp-dir $temp_dir -1 $f1 -2 $f2 --threads 62\"\n    fi\n\n    echo \"Running command: $cmd\"\n    eval $cmd\n\n    # Post-assembly cleanup\n    if [ -f \"${output_dir}/contigs.fasta\" ]; then\n        echo \"Assembly completed successfully for $sample_name. Removing temporary files.\"\n        rm -rf \"$temp_dir\"\n    else\n        echo \"Assembly incomplete or failed for $sample_name. Retaining files for troubleshooting.\"\n    fi\ndone\n</code></pre>"},{"location":"240510/#orange_assemblyslurm","title":"orange_assembly.slurm","text":"<pre><code>#!/bin/bash\n#SBATCH --job-name=orange_assembly\n#SBATCH --account=kcooper\n#SBATCH --partition=standard\n#SBATCH --nodes=1\n#SBATCH --ntasks=62\n#SBATCH --cpus-per-task=1\n#SBATCH --time=48:00:00\n#SBATCH --mem-per-cpu=20gb    \n#SBATCH --mail-type=ALL\n\nmodule load spades\ncd /xdisk/kcooper/caparicio/tree-fruit/\n\nfiles1=(01c_fastp_reads/*oranges*_1.trimmed.fastq)\n\nfor f1 in \"${files1[@]}\"; do\n    f2=\"${f1/_1.trimmed.fastq/_2.trimmed.fastq}\"\n    sample_name=$(basename \"$f1\" \"_1.trimmed.fastq\")\n    output_dir=\"02_assembly/${sample_name}\"\n\n    # Ensure a clean start by cleaning any previous run data\n    rm -rf ${output_dir:?}/*  # Clear directory properly\n\n    mkdir -p \"$output_dir\"\n    temp_dir=\"$output_dir/tmp\" \n    mkdir -p \"$temp_dir\"\n\n    # Properly resolve wildcards before running SPAdes\n    if [ -f \"${output_dir}/spades.log\" ]; then\n        echo \"Resuming SPAdes assembly for $sample_name\"\n        cmd=\"spades.py --meta -o $output_dir --tmp-dir $temp_dir --continue\"\n    else\n        echo \"Starting new SPAdes assembly for $sample_name\"\n        cmd=\"spades.py --meta -k 21,33,55,77 -o $output_dir --tmp-dir $temp_dir -1 $f1 -2 $f2 --threads 62\"\n    fi\n\n    echo \"Running command: $cmd\"\n    eval $cmd\n\n    # Post-assembly cleanup\n    if [ -f \"${output_dir}/contigs.fasta\" ]; then\n        echo \"Assembly completed successfully for $sample_name. Removing temporary files.\"\n        rm -rf \"$temp_dir\"\n    else\n        echo \"Assembly incomplete or failed for $sample_name. Retaining files for troubleshooting.\"\n    fi\ndone\n</code></pre>"},{"location":"240510/#peach_assemblyslurm","title":"peach_assembly.slurm","text":"<pre><code>#!/bin/bash\n#SBATCH --job-name=peach_assembly\n#SBATCH --account=kcooper\n#SBATCH --partition=standard\n#SBATCH --nodes=1\n#SBATCH --ntasks=62\n#SBATCH --cpus-per-task=1\n#SBATCH --time=48:00:00\n#SBATCH --mem-per-cpu=20gb    \n#SBATCH --mail-type=ALL\n\nmodule load spades\ncd /xdisk/kcooper/caparicio/tree-fruit/\n\nfiles1=(01c_fastp_reads/*peaches*_1.trimmed.fastq)\n\nfor f1 in \"${files1[@]}\"; do\n    f2=\"${f1/_1.trimmed.fastq/_2.trimmed.fastq}\"\n    sample_name=$(basename \"$f1\" \"_1.trimmed.fastq\")\n    output_dir=\"02_assembly/${sample_name}\"\n\n    # Ensure a clean start by cleaning any previous run data\n    rm -rf ${output_dir:?}/*  # Clear directory properly\n\n    mkdir -p \"$output_dir\"\n    temp_dir=\"$output_dir/tmp\" \n    mkdir -p \"$temp_dir\"\n\n    # Properly resolve wildcards before running SPAdes\n    if [ -f \"${output_dir}/spades.log\" ]; then\n        echo \"Resuming SPAdes assembly for $sample_name\"\n        cmd=\"spades.py --meta -o $output_dir --tmp-dir $temp_dir --continue\"\n    else\n        echo \"Starting new SPAdes assembly for $sample_name\"\n        cmd=\"spades.py --meta -k 21,33,55,77 -o $output_dir --tmp-dir $temp_dir -1 $f1 -2 $f2 --threads 62\"\n    fi\n\n    echo \"Running command: $cmd\"\n    eval $cmd\n\n    # Post-assembly cleanup\n    if [ -f \"${output_dir}/contigs.fasta\" ]; then\n        echo \"Assembly completed successfully for $sample_name. Removing temporary files.\"\n        rm -rf \"$temp_dir\"\n    else\n        echo \"Assembly incomplete or failed for $sample_name. Retaining files for troubleshooting.\"\n    fi\ndone\n</code></pre>"},{"location":"240510/#github-pages","title":"GitHub Pages","text":"<ul> <li> <p>FOSS CyVerse's Hands-on: Building a GitHub Pages Website using MkDocs</p> </li> <li> <p>Material for MkDocs</p> </li> <li>Mr. Oliver's Git and GitHub in RStudio</li> <li>UA Data Lab's GitHub and Git</li> <li>Dr. Liz\u00e1rraga's Introduction to Github</li> <li>Dr. Liz\u00e1rraga's Github Wikis and Github Pages</li> <li>GitHub Pages documentation</li> <li>git 3.1 Git Branching - Branches in a Nutshell</li> <li>Cyverse'e Git for Mere Mortals YouTube</li> <li>UA Data Lab's Data Tapas: Introduction to Markdown</li> <li>Visual Studio Code Docs</li> <li>GitHub Copilot documentation</li> <li>draw.io Diagrams YouTube Videos</li> <li>Pygments Available lexers</li> </ul>"},{"location":"240510/#sample-tracker","title":"Sample Tracker","text":"sample(s) stage program status queue time cluster run time hrs:min Job # ntaskts (CPU -t) Mem -m file location script script location apples313 alignment blast queue 5/9/2024 puma 24 9768111 62 20 1240 /kcooper/caparicio/tree-fruit/0?a_reads_blast apple_blast.ipynb /kcooper/caparicio/tree-fruit/07batch apples313 arg deeparg queue 5/9/2024 puma 24 9758117 62 20 1240 /kcooper/caparicio/tree-fruit/0?_deeparg apple_deeparg.ipynb /kcooper/caparicio/tree-fruit/0?batch tree fruit eploratory data analysis phyloseq queue 5/7/2024 puma 24 9755025 62 20 1240 /kcooper/caparicio/tree-fruit/0?_kraken-biom tree_fruit_phyloseq.ipynb /kcooper/caparicio/tree-fruit/05batch orange assembly metaSPAdes (SPAdes) in progress 2-08:53:52 puma 48 9750125 64 20 1280 cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch orange_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch apple assembly metaSPAdes (SPAdes) queue puma 48 9754886 64 25 1600 cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch apple_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch peach assembly metaSPAdes (SPAdes) queue puma 48 9750126 64 20 1280 cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch peach_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch tree fruit biom file kraken-biom complete 8-18:59:10 puma 24 9690712 62 20 1240 /kcooper/caparicio/tree-fruit/05_kraken-biom tree_fruit_kr_biom.ipynb /kcooper/caparicio/tree-fruit/05batch tree fruit biom file kraken-biom in progress 9-04:56:55 puma 24 9685213 62 20 1240 /kcooper/caparicio/tree-fruit/05_kraken-biom tree_fruit_kr_biom.ipynb /kcooper/caparicio/tree-fruit/05batch tree fruit biom file kraken-biom in progress 9-09:55:09 puma 24 9681142 62 20 1240 /kcooper/caparicio/tree-fruit/05_kraken-biom tree_fruit_kr_biom.ipynb /kcooper/caparicio/tree-fruit/05batch orange assembly metaSPAdes (SPAdes) in progress 2-08:53:52 puma 48 9750125 64 20 1280 cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch orange_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch apples313 alignment blast queue 45405 puma 24 9670368 62 20 1240 /kcooper/caparicio/tree-fruit/07a_reads_blast apple_blast.ipynb /kcooper/caparicio/tree-fruit/07batch tree fruit biom file kraken-biom queue 45405 puma 12 9666325 42 20 840 /kcooper/caparicio/tree-fruit/05_kraken-biom interactive /kcooper/caparicio/tree-fruit/05batch apples313 arg deeparg queue 45404 puma 24 9661323 62 20 1240 /kcooper/caparicio/tree-fruit/09_deeparg apple_deeparg.ipynb /kcooper/caparicio/tree-fruit/09batch apples313 arg deeparg in progress 1-22:16:37 puma 24 9607499 62 20 1240 /kcooper/caparicio/tree-fruit/09_deeparg apple_deeparg.ipynb /kcooper/caparicio/tree-fruit/09batch apples313 arg deeparg in progress 1-22:16:37 puma 24 9607499 62 20 1240 /kcooper/caparicio/tree-fruit/09_deeparg apple_deeparg.ipynb /kcooper/caparicio/tree-fruit/09batch apples313 alignment blast in progress 2-13:54:46 puma 24 9544144 62 20 1240 /kcooper/caparicio/tree-fruit/07a_reads_blast apple_blast.ipynb /kcooper/caparicio/tree-fruit/07batch apples313 alignment blast in progress 2-18:24:00 puma 24 9532276 62 20 1240 /kcooper/caparicio/tree-fruit/07a_reads_blast apple_blast.ipynb /kcooper/caparicio/tree-fruit/07batch apples313 alignment blast in progress 0.001516204 puma 24 9514722 62 20 1240 /kcooper/caparicio/tree-fruit/07a_reads_blast apple_blast.ipynb /kcooper/caparicio/tree-fruit/07batch apple assembly metaSPAdes (SPAdes) queue 9-14:59:38 puma 48 9678741 64 25 1600 cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch apple_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch peach assembly metaSPAdes (SPAdes) queue 9-12:54:17 puma 48 9659598 62 20 1240 cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch peach_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch orange assembly metaSPAdes (SPAdes) queue 9-13:35:18 puma 48 9656556 62 20 1240 cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch orange_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch apple assembly metaSPAdes (SPAdes) in progress 1-09:33:21 puma 48 9656539 62 20 1240 cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch apple_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch peach assembly metaSPAdes (SPAdes) in progress 1-13:59:27 puma 48 9659598 62 20 1240 cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch peach_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch apple assembly metaSPAdes (SPAdes) in progress 1-01:53:22 puma 48 9626829 62 20 1240 cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch apple_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch orange assembly metaSPAdes (SPAdes) in progress 1-20:23:44 puma 48 9607486 62 20 1240 cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch orange_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch peach assembly metaSPAdes (SPAdes) in progress 2-07:44:37 puma 0:00 9569668 62 20 1240 cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch peach_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch apple assembly metaSPAdes (SPAdes) in progress 2-01:55:18 puma 48 9569667 62 20 1240 cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch apple_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch peach assembly metaSPAdes (SPAdes) in progress 8-12:40:52 puma 48 9481898 64 20 1280 cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch peach_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch orange assembly metaSPAdes (SPAdes) in progress 1-22:23:40 puma 48 9544142 62 20 1240 cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch orange_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch apple assembly metaSPAdes (SPAdes) in progress 5-01:30:51 puma 48 9510852 60 20 1200 cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch apple_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch orange assembly metaSPAdes (SPAdes) in progress 8-07:36:36 puma 48 9455659 64 20 1280 cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch orange_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch apple assembly metaSPAdes (SPAdes) in progress 9-19:56:59 puma 0:00 9475436 64 20 1280 cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch apple_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch apple assembly metaSPAdes (SPAdes) in progress 9-10:02:53 puma 48 9452625 64 20 1280 cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch apple_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch apple assembly metaSPAdes (SPAdes) in progress 9-20:30:02 puma 48 9448076 62 20 1240 cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch apple_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch orange taxonomic class kraken 2 complete 9-06:30:40 puma 24 9444742 64 20 1280 cd /xdisk/kcooper/caparicio/tree-fruit/03a_reads_kraken2 kr_orange_reads.ipynb cd /xdisk/kcooper/caparicio/tree-fruit/03batch peach taxonomic class kraken 2 complete 10-03:45:32 puma 24 9444741 64 20 1280 cd /xdisk/kcooper/caparicio/tree-fruit/03a_reads_kraken2 sbatch kr_peach_reads.slurm cd /xdisk/kcooper/caparicio/tree-fruit/03batch orange taxonomic class kraken 2 in progress puma 24 9431841 64 20 1280 cd /xdisk/kcooper/caparicio/tree-fruit/03a_reads_kraken2 sbatch kr_orange_reads.slurm cd /xdisk/kcooper/caparicio/tree-fruit/03batch apple assembly metaSPAdes (SPAdes) in progress puma 0:00 9448076 64 20 1280 cd /xdisk/kcooper/caparicio/tree-fruit/02assembly apple_read_assembly.ipynb cd /xdisk/kcooper/caparicio/tree-fruit/02batch apple assembly metaSPAdes (SPAdes) REDOcompleteBUT NO FASTA puma 48 9004247 64 var var cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch apples_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch YumaHarvC10-YumaSoil633 poly-g removal fastp debug puma 0:00 9398738 64 20 1280 cd /xdisk/kcooper/caparicio/MELONS/01c_fastp_reads2 melon_fastp.ipynb melon_soil_fastp.ipynb cd /xdisk/kcooper/caparicio/MELONS/ orange taxonomic class kraken 2 puma 24 9245197 64 32 2048 cd /xdisk/kcooper/caparicio/tree-fruit/03a_reads_kraken2 sbatch kr_orange_reads.slurm cd /xdisk/kcooper/caparicio/tree-fruit/03batch peach taxonomic class kraken 2 debug puma 24 9245195 64 32 2048 cd /xdisk/kcooper/caparicio/tree-fruit/03a_reads_kraken2 sbatch kr_peach_reads.slurm cd /xdisk/kcooper/caparicio/tree-fruit/03batch melon poly-g removal fastp debug puma 24 9247470 48 4 192 cd /xdisk/kcooper/caparicio/MELONS/01c_fastp_reads sbatch melon_fastp.slurm cd /xdisk/kcooper/caparicio/MELONS/ melon soil poly-g removal fastp in progress puma 24 9247471 48 4 192 cd /xdisk/kcooper/caparicio/tree-fruit/03a_reads_kraken2 sbatch melon_soil_fastp.slurm cd /xdisk/kcooper/caparicio/MELONS/ tree-fruit poly-g removal fastp complete puma 0:55 8662642 48 4 192 cd /xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads sbatch fruit_01c_fastp.slurm cd /xdisk/kcooper/caparicio/tree-fruit melon/soil poly-g removal fastp debug puma 528 9132669 48 4 192 cd /xdisk/kcooper/caparicio/MELONS/01c_fastp_reads sbatch melon_fastp.slurm cd /xdisk/kcooper/caparicio/MELONS apple assembly metaSPAdes (SPAdes) REDOcompleteBUT NO FASTA puma 48 9004247 64 var var cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch apples_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch peach assembly metaSPAdes (SPAdes) killed ocelote 972 2757752 28 var var cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch peach_assem.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch orange assembly metaSPAdes (SPAdes) killed elgato 144 1777319 16 var var cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch oranges_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch orange assembly metaSPAdes (SPAdes) killed elgato 144 1777319 16 var var cd /xdisk/kcooper/caparicio/tree-fruit/02assembly sbatch oranges_assembly.slurm cd /xdisk/kcooper/caparicio/tree-fruit/02batch apple taxonomic class kraken 2 complete puma 48 9016680 64 12 768 cd /xdisk/kcooper/caparicio/tree-fruit/03a_reads_kraken2 sbatch kr_apple_reads.slurm cd /xdisk/kcooper/caparicio/tree-fruit/03batch tree fruit fastq to fasta seqtk complete elgato 0:35 1803380 8 4 32 cd /xdisk/kcooper/caparicio/tree-fruit/01d_fasta sbatch tree-fruit_fasta.slurm cd /xdisk/kcooper/caparicio/tree-fruit/01d_fasta"},{"location":"240628/","title":"28 June 2024","text":""},{"location":"240628/#kraken-biom-attempt-vector-length-error","title":"kraken-biom attempt - vector length error","text":"<p><pre><code># create biom from kraken2 reports\n\ncd /xdisk/kcooper/caparicio/tree-fruit/05kraken-biom_b\n\nmodule load anaconda/2020\n\nsource ~/.bashrc\n\napptainer run https://depot.galaxyproject.org/singularity/kraken-biom:1.2.0--pyh5e36f6f_0\n\nkraken-biom s01.report s02.report s03.report s04.report s05.report s06.report s07.report s08.report s09.report s10.report s11.report s12.report s13.report s14.report s15.report s16.report s17.report s18.report s19.report s20.report s21.report s22.report s23.report s24.report s25.report s26.report s27.report s28.report s29.report s30.report s31.report s32.report s33.report s34.report s35.report s36.report s37.report s38.report s39.report s40.report s41.report s42.report s43.report s44.report s45.report s46.report s47.report s48.report s49.report s50.report s51.report s52.report s53.report s54.report s55.report s56.report s57.report s58.report s59.report s60.report s61.report s62.report s63.report s64.report s65.report s66.report s67.report s68.report s69.report s70.report s71.report s72.report s73.report s74.report s75.report -m metadata.tsv --fmt json -o tree_fruit.biom\n</code></pre> Error in h(simpleError(msg, call)) :    error in evaluating the argument 'object' in selecting a method for function 'otu_table': 'names' attribute [3] must be the same length as the vector [0]</p>"},{"location":"240628/#kraken-biom-attempt-validation-error","title":"kraken-biom attempt - validation error","text":"<p><pre><code>cd /xdisk/kcooper/caparicio/tree-fruit/05kraken-biom_b\n\nmodule load python\n\nsource ~/virtual/biom-format_env/bin/activate\n\nbiom validate-table -i tree_fruit.biom\n\nThe input file is a valid BIOM-formatted file.\n\nbiom convert -i tree_fruit.biom -o tree_fruit.txt --to-tsv --header-key taxonomy --output-metadata-id \"Consensus Lineage\"\n\nbiom convert -i tree_fruit.biom -o tree_fruit.txt --to-tsv\n\nbiom convert -i tree_fruit.biom -o tree_fruit.json --to-json\n</code></pre> json output: <pre><code>{\"id\":\"None\",\"format\":\"Biological Observation Matrix 1.0.0\",\"format_url\":\"http://biom-format.org\",\"matrix_type\":\"sparse\",\"generated_by\":\"BIOM-Format 2.1.16\",\"date\":\"2024-07-04T06:08:56.474833\",\"type\":\"OTU table\",\"matrix_element_type\":\"int\",\"shape\":[0,0],\"data\":[],\"rows\":[],\"columns\":[]}\n</code></pre></p>"},{"location":"240628/#code-that-will-work-with-the-actual-taxonomy-file-named-taxonomy_filetxt","title":"Code that will work with the actual taxonomy file named 'taxonomy_file.txt'","text":"<pre><code># Load taxonomy table from a TXT file, treating it as a TSV\ntaxonomy_table_path = \"taxonomy_file.txt\"\ntaxonomy_table = pd.read_csv(taxonomy_table_path, sep='\\t', index_col=0)\n\n# Ensure taxa names match between OTU table and taxonomy table\ncommon_taxa = otu_table.index.intersection(taxonomy_table.index)\notu_table = otu_table.loc[common_taxa]\ntaxonomy_table = taxonomy_table.loc[common_taxa]\n\n# Save the combined OTU table to a TSV file\notu_table_path = \"combined_otu_table.tsv\"\notu_table.to_csv(otu_table_path, sep='\\t')\n\n# Save the combined OTU table to a TXT file\notu_table_path_txt = \"combined_otu_table.txt\"\notu_table.to_csv(otu_table_path_txt, sep='\\t')\n\n# Save the updated taxonomy table to ensure it matches the OTU table\ntaxonomy_table_path_updated = \"updated_taxonomy_table.tsv\"\ntaxonomy_table.to_csv(taxonomy_table_path_updated, sep='\\t')\n\nprint(f\"Combined OTU table saved to {otu_table_path}\")\nprint(f\"Combined OTU table saved to {otu_table_path_txt}\")\nprint(f\"Updated taxonomy table saved to {taxonomy_table_path_updated}\")\n</code></pre>"},{"location":"240628/#visualization-r-script","title":"visualization r script","text":"<pre><code># Install and load necessary libraries\nif (!requireNamespace(\"BiocManager\", quietly = TRUE))\n  install.packages(\"BiocManager\")\nBiocManager::install(\"phyloseq\")\ninstall.packages(\"ggplot2\")\ninstall.packages(\"dplyr\")\ninstall.packages(\"RColorBrewer\")\ninstall.packages(\"vegan\")\n\nlibrary(phyloseq)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(RColorBrewer)\nlibrary(vegan)\n\notu_table &lt;- readr::read_tsv(\"combined_otu_table.tsv\")\nhead(taxpasta_data)\nmetadata &lt;- readr::read_tsv(\"metadata.tsv\")\nhead(metadata)\n\n# Save the otu_file as an Rda file\nsave(otu_table, file = \"otu_table.rda\")\n\n# Set working directory (modify this path as needed)\nsetwd(\"path/to/your/working/directory\")\n\n# Load the necessary components\nload(\"otu_table.rda\")\nload(\"taxonomy_table.rda\")\nload(\"metadata.rda\")\n\n# Check if all necessary objects are loaded\nif (!exists(\"otu_table\")) {\n  stop(\"The otu_table object was not found in the loaded file.\")\n}\nif (!exists(\"taxonomy_table\")) {\n  stop(\"The taxonomy_table object was not found in the loaded file.\")\n}\nif (!exists(\"metadata\")) {\n  stop(\"The metadata object was not found in the loaded file.\")\n}\n\n# Ensure metadata has non-zero dimensions\nif (nrow(metadata) == 0 || ncol(metadata) == 0) {\n  stop(\"Metadata must have non-zero dimensions.\")\n}\n\n# Create the OTU table\notu_table &lt;- otu_table(otu_table, taxa_are_rows = TRUE)\n\n# Create the taxonomy table\ntaxonomy_table &lt;- tax_table(taxonomy_table)\n\n# Convert metadata to sample_data format\nsample_data &lt;- sample_data(metadata)\n\n# Ensure taxa names are consistent across all components\ntaxa_names(otu_table) &lt;- rownames(taxonomy_table) &lt;- rownames(otu_table)\nsample_names(sample_data) &lt;- colnames(otu_table)\n\n# Create the phyloseq object\nphyseq &lt;- phyloseq(otu_table, taxonomy_table, sample_data)\n\nprint(physeq)\n\nhead(tax_table)\n# Check if the phyloseq object has been created properly\nif (!exists(\"physeq\")) {\n  stop(\"The physeq object was not created successfully.\")\n}\n\n# Subset the phyloseq object to keep the most abundant taxa\ntop_taxa &lt;- names(sort(taxa_sums(physeq), decreasing = TRUE)[1:50])\nphyseq_top &lt;- prune_taxa(top_taxa, physeq)\n\n# Prepare data for vegan's rda function\notu_matrix &lt;- as(otu_table(physeq_top), \"matrix\")\nmetadata &lt;- data.frame(sample_data(physeq_top))\n\n# Ensure the row names of metadata match the OTU matrix\nmetadata &lt;- metadata[rownames(otu_matrix), ]\n\n# Convert all relevant columns to factors and remove those with fewer than 2 levels\nfor (col in names(metadata)) {\n  if (is.character(metadata[[col]])) {\n    metadata[[col]] &lt;- as.factor(metadata[[col]])\n  }\n  if (is.factor(metadata[[col]]) &amp;&amp; length(levels(metadata[[col]])) &lt; 2) {\n    metadata[[col]] &lt;- NULL\n  }\n}\n\n# Ensure there are no columns with fewer than 2 levels\nmetadata &lt;- metadata[, unlist(lapply(metadata, function(x) length(unique(x)) &gt; 1))]\n\n# Explicitly list the variables in the formula\nvariables &lt;- paste(names(metadata), collapse = \" + \")\nformula &lt;- as.formula(paste(\"otu_matrix ~\", variables))\n\nload(metadata.rda)\n# Perform RDA ordination\nordination &lt;- vegan::rda(formula, data = metadata)\n\n# Extract scores for plotting\nordination_scores &lt;- scores(ordination, display = \"sites\")\nordination_scores &lt;- as.data.frame(ordination_scores)\nordination_scores$Sample &lt;- rownames(ordination_scores)\n\n# Merge with metadata for plotting\nordination_scores &lt;- merge(ordination_scores, metadata, by.x = \"Sample\", by.y = \"row.names\")\n\n# Generate a color palette using RColorBrewer\npalette &lt;- brewer.pal(n = length(unique(ordination_scores$fruit)), name = \"Set3\")\n\n# Create tabasco plot using ggplot2\ntabasco_plot &lt;- ggplot(ordination_scores, aes(x = RDA1, y = RDA2, color = fruit, shape = Site)) +\n  geom_point(size = 3) +\n  theme_minimal() +\n  ggtitle(\"Ordination of Most Abundant Taxa on Fruit\") +\n  scale_color_manual(values = palette) +\n  theme(\n    axis.title.x = element_text(size = 15),  # Customize x-axis title font size\n    axis.title.y = element_text(size = 15),  # Customize y-axis title font size\n    axis.text.x = element_text(size = 14),   # Customize x-axis label font size\n    axis.text.y = element_text(size = 14),   # Customize y-axis label font size\n    plot.title = element_text(hjust = 0.5, size = 18),  # Center and customize title font size\n    legend.title = element_text(size = 15),  # Customize legend title font size\n    legend.text = element_text(size = 15)    # Customize legend text font size\n  )\n\n# Print tabasco plot\nprint(tabasco_plot)\n\n# Save tabasco plot\nggsave(\"ordination_plot.png\", plot = tabasco_plot, width = 10, height = 6)\n</code></pre>"},{"location":"240628/#pseudocount-r-script","title":"pseudocount r script","text":"<pre><code># Verify the working directory\nprint(getwd())\n\n# List files in the working directory\nfiles &lt;- list.files(getwd())\nprint(files)\n\n# Load your phyloseq object\nload(\"phyloseq.Rda\")\n\n# Apply log transformation with a pseudocount\nlog_transformed_physeq &lt;- transform_sample_counts(physeq, function(x) log10((x / sum(x)) * 100000 + 1))\n\n# Save the transformed phyloseq object in the new project directory\nsave(log_transformed_physeq, file = \"log_transformed_physeq.Rda\")\n\n# Verify the transformation\nprint(log_transformed_physeq)\n\n\n# Filter out low-abundance taxa\n# filtered_physeq &lt;- filter_taxa(log_transformed_physeq, function(x) mean(x) &gt; 1e-5, TRUE)\n# Warning message:\n#  In estimate_richness(filtered_physeq, measures = c(\"Shannon\", \"Simpson\")) :\n#  The data you have provided does not have\n# any singletons. This is highly suspicious. Results of richness\n# estimates (for example) are probably unreliable, or wrong, if you have  already\n# trimmed low-abundance taxa from the data.\n\n# We recommended that you find the un-trimmed data and retry.\n\n# &gt; print(filtered_physeq)\n# phyloseq-class experiment-level object\n# otu_table()   OTU Table:         [ 38490 taxa and 75 samples ]\n# sample_data() Sample Data:       [ 75 samples by 9 sample variables ]\n\n\n\n# Filter out low-abundance taxa with a less stringent threshold\nfiltered_physeq &lt;- filter_taxa(log_transformed_physeq, function(x) mean(x) &gt; 1e-6, TRUE)\n\n# Check the filtered data\nprint(filtered_physeq)\n\n# phyloseq-class experiment-level object\n# otu_table()   OTU Table:         [ 39985 taxa and 75 samples ]\n# sample_data() Sample Data:       [ 75 samples by 9 sample variables ]\n\n# Perform alpha diversity analysis on the untrimmed data\nalpha_div_untrimmed &lt;- estimate_richness(physeq, measures = c(\"Shannon\", \"Simpson\"))\nprint(alpha_div_untrimmed)\n\n# Save alpha diversity results\nwrite.csv(alpha_div_untrimmed, file = \"alpha_diversity_untrimmed_results.csv\")\n\n\n# Beta Diversity Analysis with filtered data\nord &lt;- ordinate(filtered_physeq, method = \"PCoA\", distance = \"bray\")\nplot_ordination(filtered_physeq, ord, color = \"SampleType\") +\n  geom_point(size = 3) +\n  ggtitle(\"Beta Diversity (PCoA) based on Bray-Curtis distance\")\n\n# Save beta diversity plot\nggsave(\"beta_diversity_filtered_plot.png\")\n</code></pre>"},{"location":"240628/#alpha-apple-r-script","title":"alpha apple r script","text":"<pre><code># Install and load necessary libraries\ninstall.packages(\"RColorBrewer\")\nlibrary(phyloseq)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(RColorBrewer)\n\n# Set working directory\n\n# Load the untrimmed phyloseq object\nload(\"physeq.Rda\")\n\n# Calculate Shannon diversity\nshannon_div &lt;- estimate_richness(physeq, measures = \"Shannon\")\n\n# Merge with metadata\nmetadata &lt;- data.frame(sample_data(physeq))\nshannon_div &lt;- cbind(metadata, shannon_div)\n\n# Filter for apples\napples_data &lt;- shannon_div %&gt;% filter(fruit == \"apple\")\n\n# Generate a color palette using RColorBrewer\npalette &lt;- brewer.pal(n = length(unique(apples_data$site)), name = \"Set3\")\n\n# Create boxplot for apples by growing site\np &lt;- ggplot(apples_data, aes(x = site, y = Shannon, fill = site)) +\n  geom_boxplot(\n    color = \"black\",  # Set the box border color to black\n    size = 0.6,       # Border line width\n    outlier.shape = NA  # Remove outliers\n  ) +\n  theme_minimal() +\n  ggtitle(\"Shannon Diversity of Apples by Growing Site\") +\n  scale_fill_manual(values = palette) +\n  theme(\n    axis.title.x = element_text(size = 15),  # Customize x-axis title font size\n    axis.title.y = element_text(size = 15),  # Customize y-axis title font size\n    axis.text.x = element_text(size = 14),   # Customize x-axis label font size\n    axis.text.y = element_text(size = 14),   # Customize y-axis label font size\n    plot.title = element_text(hjust = 0.5, size = 18),  # Center and customize title font size\n    legend.title = element_text(size = 15),  # Customize legend title font size\n    legend.text = element_text(size = 15)    # Customize legend text font size\n  )\n\n# Print plot\nprint(p)\n\n# Save plot\nggsave(\"shannon_diversity_apples_by_site.png\", plot = p, width = 10, height = 6)\n\n\n# Perform ANOVA to test for significant differences in Shannon diversity between growing sites for apples\nanova_result &lt;- aov(Shannon ~ site, data = apples_data)\nanova_summary &lt;- summary(anova_result)\nprint(anova_summary)\n\n# Post-hoc test to identify which groups are significantly different\nposthoc_result &lt;- TukeyHSD(anova_result)\nprint(posthoc_result)\n\n# Extract p-values from the ANOVA summary\np_value &lt;- anova_summary[[1]][[\"Pr(&gt;F)\"]][1]\np_value_decimal &lt;- format(p_value, scientific = FALSE)\nprint(paste(\"p-value: \", p_value_decimal))\n\n# Fit a linear model to calculate R-squared\nlm_model &lt;- lm(Shannon ~ site, data = apples_data)\nlm_summary &lt;- summary(lm_model)\nprint(lm_summary)\n\n# Extract R-squared value\nr_squared &lt;- lm_summary$r.squared\nr_squared_decimal &lt;- format(r_squared, scientific = FALSE)\nprint(paste(\"R-squared: \", r_squared_decimal))\n</code></pre>"},{"location":"240628/#phyloseq-r-script","title":"phyloseq r script","text":"<pre><code># Load the OTU table\notu_table &lt;- read.csv(\"combined_otu_table.tsv\", sep='\\t', row.names=1)\n\n# Load the taxonomy table\ntaxonomy_table &lt;- read.csv(\"updated_taxonomy_table.tsv\", sep='\\t', row.names=1)\n\n# Load the sample data (metadata)\nmetadata &lt;- read.csv(\"metadata.tsv\", sep='\\t', row.names=1)\n\n# Create phyloseq components\notu_table_phy &lt;- otu_table(as.matrix(otu_table), taxa_are_rows = TRUE)\n\ntaxonomy_table_phy &lt;- tax_table(as.matrix(taxonomy_table))\n\nsample_data_phy &lt;- sample_data(metadata)\n\n# Create the phyloseq object\nphyseq &lt;- phyloseq(otu_table_phy, taxonomy_table_phy, sample_data_phy)\n\n# Verify the phyloseq object\nprint(physeq)\n\nsave.image(\"phyloseq_workspace01.RData\")\n</code></pre>"},{"location":"240712/","title":"12 July 2024","text":""},{"location":"240712/#abricate-databases","title":"abricate databases","text":"<p>abricate</p>"},{"location":"240712/#1-ncbi-national-center-for-biotechnology-information","title":"1. NCBI (National Center for Biotechnology Information)","text":"<ul> <li>Scope: Broad</li> <li>Database: Includes a comprehensive collection of sequences and annotations for a wide range of organisms, including bacteria, viruses, fungi, archaea, and some protists.</li> <li>Screening Capability: Can screen genes from protists, archaea, fungi, bacteria, and viruses.</li> <li>Provides access to various specialized databases, such as GenBank for sequences and the Pathogen Detection database for antimicrobial resistance.</li> </ul>"},{"location":"240712/#2-card-comprehensive-antibiotic-resistance-database","title":"2. CARD (Comprehensive Antibiotic Resistance Database)","text":"<ul> <li>Scope: Focused on antimicrobial resistance (AMR) genes</li> <li>Database: Primarily includes AMR genes from bacteria.</li> <li>Screening Capability: Mainly bacteria.</li> <li>Offers a curated collection of AMR genes and associated metadata but does not fully cover AMR genes in archaea, fungi, protists, or viruses.</li> </ul>"},{"location":"240712/#3-arg-annot-antibiotic-resistance-gene-annotation","title":"3. ARG-ANNOT (Antibiotic Resistance Gene-ANNOTation)","text":"<ul> <li>Scope: Focused on antibiotic resistance genes</li> <li>Database: Includes AMR genes from bacteria.</li> <li>Screening Capability: Mainly bacteria.</li> <li>Provides a specialized resource for identifying antibiotic resistance genes in bacterial genomes.</li> </ul>"},{"location":"240712/#4-resfinder","title":"4. Resfinder","text":"<ul> <li>Scope: Focused on identifying resistance genes in bacteria</li> <li>Database: Includes resistance genes from bacteria.</li> <li>Screening Capability: Mainly bacteria.</li> <li>Used to detect resistance genes in bacterial genomes and plasmids, relying on an extensive database of known bacterial resistance genes.</li> </ul>"},{"location":"240712/#5-megares-metagenome-analysis-resource-for-antimicrobial-resistance","title":"5. MEGARES (MEtaGenome Analysis Resource for Antimicrobial Resistance)","text":"<ul> <li>Scope: Focused on antimicrobial resistance genes</li> <li>Database: Includes AMR genes from bacteria and some from archaea.</li> <li>Screening Capability: Mainly bacteria, with some coverage of archaea.</li> <li>Provides a resource for AMR gene annotation in metagenomic datasets, focusing on bacterial resistance genes.</li> </ul>"},{"location":"240712/#summary-table","title":"Summary Table:","text":"Database Protists Archaea Fungi Bacteria Viruses NCBI Yes Yes Yes Yes Yes CARD No No No Yes No ARG-ANNOT No No No Yes No Resfinder No No No Yes No MEGARES No Yes No Yes No EcOH No No No Yes (E. coli only) No <ul> <li>NCBI comprehensive search across multiple organism types.</li> <li>CARD, ARG-ANNOT, and Resfinder are most effective for bacterial AMR gene screening.</li> <li>MEGARES offers broader AMR gene coverage including some archaea but is still predominantly bacterial.</li> </ul>"},{"location":"240712/#create-abricate-container-details-in-abricate-install-jupyter-notebook","title":"create abricate container (details in 'abricate install jupyter notebook)","text":"<ul> <li>Copy/paste the following to create 'abricate.def' recipe file <pre><code>Bootstrap: docker\nFrom: quay.io/biocontainers/abricate:1.0.1--ha8f3691_2\n\n%post\n    # Set the installation directory\n    export INSTALL_DIR=/xdisk/kcooper/caparici/tree-fruit/08abricate\n\n    # Update the package lists and install necessary packages\n    apt-get update &amp;&amp; apt-get install -y \\\n        bioperl \\\n        gzip \\\n        libjson-perl \\\n        liblwp-protocol-https-perl \\\n        libpath-tiny-perl \\\n        libtext-csv-perl \\\n        libwww-perl \\\n        ncbi-blast+ \\\n        unzip \\\n        wget \\\n        git &amp;&amp; \\\n    apt-get clean &amp;&amp; \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n    # Clone abricate repository and set up the database\n    git clone https://github.com/tseemann/abricate.git $INSTALL_DIR/abricate &amp;&amp; \\\n    cd $INSTALL_DIR/abricate &amp;&amp; \\\n    ./bin/abricate --setupdb\n\n%runscript\n    # Run abricate with passed arguments\n    $INSTALL_DIR/abricate/bin/abricate \"$@\"\n</code></pre></li> </ul>"},{"location":"240720/","title":"20 July 2024","text":""},{"location":"240720/#humann-container-build-attempt","title":"humann container build attempt","text":"<ul> <li> <p>Support for Docker and OCI Containers</p> </li> <li> <p>biobakery/humann</p> </li> <li> <p>Intro to Containers on HPC</p> </li> </ul>"},{"location":"240720/#definitionrecipe-file-draft","title":"definition/recipe file draft","text":"<pre><code>Bootstrap: docker\nFrom: ubuntu:18.04\n\n%post\n    # Update and install necessary packages\n    apt-get update &amp;&amp; apt-get install -y \\\n    python3 \\\n    python3-pip \\\n    bowtie2 \\\n    diamond \\\n    wget\n\n    # Set installation directory\n    export INSTALL_DIR=/xdisk/pi/member/tree-fruit/09humann\n\n    # Install HUMAnN\n    pip3 install humann\n\n    # Download HUMAnN databases\n    mkdir -p $INSTALL_DIR/databases\n    humann_databases --download chocophlan full $INSTALL_DIR/databases\n    humann_databases --download uniref uniref90_diamond $INSTALL_DIR/databases\n\n    # Configure HUMAnN to use downloaded databases\n    humann_config --update database_folders nucleotide $INSTALL_DIR/databases/chocophlan\n    humann_config --update database_folders protein $INSTALL_DIR/databases/uniref\n\n    # Clean up temporary files without attempting to remove system-protected directories\n    apt-get clean\n    rm -rf /var/lib/apt/lists/* /tmp/* || true\n    rm -rf /var/tmp/* || true\n\n%runscript\n    # Default command to run HUMAnN\n    echo \"HUMAnN container is set up. Please provide input and output directories to run.\"\n\n%environment\n    # Set environment variables\n    export INSTALL_DIR=/xdisk/pi/member/tree-fruit/09humann\n    export PATH=$INSTALL_DIR/bin:$PATH\n\n%labels\n    MAINTAINER Name &lt;email@example.com&gt;\n    DESCRIPTION \"Container for HUMAnN bioinformatics tool\"\n\n%test\n    # Run tests to ensure the installation works\n    humann_test\n</code></pre>"},{"location":"240720/#could-not-resolve-permission-errors","title":"could not resolve permission errors","text":"<pre><code>rm: cannot remove '/tmp/worker-63272-93100/trash': Permission denied\nrm: cannot remove '/tmp/worker-63272-93118/trash': Permission denied\nrm: cannot remove '/var/tmp/systemd-private-32e7500eecef4f8e982467c1423d89a9-chronyd.service-kP5gSi': Operation not permitted\nrm: cannot remove '/var/tmp/systemd-private-32e7500eecef4f8e982467c1423d89a9-rtkit-daemon.service-oIeghW': Operation not permitted\nFATAL:   While performing build: while running engine: exit status 1\n</code></pre>"},{"location":"240720/#hpc-workshops-and-training-materials","title":"HPC Workshops and Training Materials","text":"<p>https://hpcdocs.hpc.arizona.edu/events/workshop_materials/</p>"},{"location":"240720/#optimizing-lightweight-file-processing-for-high-performance-computing","title":"Optimizing Lightweight File Processing for High-Performance Computing","text":"<p>Objective: Process files expeditiously in a lightweight environment while fully maintaining data integrity.</p> <p>Keywords: Optimization, Efficiency, Memory</p> <p>Possible Code Techniques: - List Comprehensions - Generator Expressions - Tuple Unpacking - Merge Dictionaries using Dictionary Unpacking - <code>__slots__</code> - <code>__str__</code> and <code>__repr__</code> - <code>functools.lru_cache</code> - <code>zip</code> - <code>collections.ChainMap</code> - <code>sys.exit()</code> - <code>deque</code> - <code>mmap</code> - <code>array</code> - f-Strings - <code>if x in list</code> - <code>str.join()</code> - <code>str.split()</code> - <code>set()</code> - Walrus Operator (<code>:=</code>) - Transforming Lists into a Dictionary - List Slicing - Garbage Collection Tuning - Leverage Local Variable Scope - Share Large Objects - Cache and Reuse Objects - <code>itertools</code></p>"},{"location":"240720/#merge-forward-and-reverse-reads-for-humann-entry-with-fastp","title":"merge forward and reverse reads for humann entry with fastp","text":"<p>fastp</p> <ul> <li> <p>Open the directory containing slurm and .py scripts in the terminal.</p> </li> <li> <p>Rid hidden and unexpected characters from files:</p> </li> </ul> <p>'sed -i 's/\\r$//' fastp_merge.slurm'</p> <p>'sed -i 's/\\r$//' fastp_memory.py'</p> <ul> <li>Submit the script using the <code>sbatch</code> command: 'sbatch fastp_merge.slurm'</li> </ul>"},{"location":"240720/#fastp_mergeslurm-script","title":"fastp_merge.slurm script","text":"<pre><code>#!/bin/bash\n#SBATCH --job-name=fastp_merge\n#SBATCH --account=kcooper\n#SBATCH --partition=standard\n#SBATCH --nodes=1\n#SBATCH --ntasks=1\n#SBATCH --cpus-per-task=35\n#SBATCH --time=18:00:00\n#SBATCH --mem-per-cpu=5gb\n#SBATCH --mail-type=ALL\n\n# Load the Python module\necho \"Loading Python module\"\nmodule load python/3.8\n\n# Directory containing the files\ndirectory='/xdisk/kcooper/caparicio/tree-fruit/01d_fastp_reads_all'\noutput_dir=\"${directory}/output\"\nmkdir -p \"${output_dir}\"\n\n# Run Python script with the necessary module\npython3 fastp_memory.py \"${directory}\" \"${output_dir}\"\n</code></pre>"},{"location":"240720/#fastp_memorypy-script","title":"fastp_memory.py script","text":"<ul> <li>make .py script executable</li> </ul> <p>'dir=\"/xdisk/kcooper/caparicio/tree-fruit/01d_fastp_reads_all/\"'</p> <p>'chmod +x \"$dir\"/*.py'</p> <pre><code>import glob\nimport os\nimport subprocess\nimport concurrent.futures\nimport sys\n\n# Generator to yield pairs of files\ndef generate_file_pairs(directory):\n    files_1 = sorted(glob.glob(os.path.join(directory, \"*_1.trimmed.fastq\")))\n    files_2 = sorted(glob.glob(os.path.join(directory, \"*_2.trimmed.fastq\")))\n    for file_1, file_2 in zip(files_1, files_2):\n        yield (file_1, file_2)\n\n# Function to merge two files using fastp\ndef merge_files(file_pair, output_dir):\n    file_1, file_2 = file_pair\n    output_file = os.path.join(output_dir, os.path.basename(file_1).replace(\"_1.trimmed.fastq\", \".merged.fastq\"))\n    log_file = output_file.replace(\".merged.fastq\", \".log\")\n    command = [\n        \"apptainer\", \"exec\", \"https://depot.galaxyproject.org/singularity/fastp:0.23.3--h5f740d0_0\",\n        \"fastp\", \"-i\", file_1, \"-I\", file_2, \"-o\", output_file, \"-m\"\n    ]\n    with open(log_file, 'w') as log:\n        subprocess.run(command, stdout=log, stderr=log)\n\ndef main(directory, output_dir):\n    file_pairs = generate_file_pairs(directory)\n    with concurrent.futures.ThreadPoolExecutor(max_workers=10) as executor:\n        futures = [executor.submit(merge_files, pair, output_dir) for pair in file_pairs]\n        for future in concurrent.futures.as_completed(futures):\n            try:\n                future.result()\n            except Exception as e:\n                print(f\"Error merging files: {e}\")\n\nif __name__ == \"__main__\":\n    if len(sys.argv) != 3:\n        print(\"Usage: python3 fastp_memory.py &lt;input_directory&gt; &lt;output_directory&gt;\")\n        sys.exit(1)\n    input_directory = sys.argv[1]\n    output_directory = sys.argv[2]\n    main(input_directory, output_directory)\n</code></pre>"},{"location":"240720/#optimized-metaspades-by-each-sample","title":"optimized metaspades - by each sample","text":"<ul> <li> <p>Open the directory containing slurm and .py scripts in the terminal.</p> </li> <li> <p>Rid hidden and unexpected characters from files:</p> </li> </ul> <p>'sed -i 's/\\r$//' apple315_spade.slurm'</p> <p>'sed -i 's/\\r$//' apple315_spade.py'</p> <ul> <li>Submit the script using the <code>sbatch</code> command: 'sbatch apple315_spade.slurm'</li> </ul>"},{"location":"240720/#apple315_spadeslurm-script","title":"apple315_spade.slurm script","text":"<pre><code>#!/bin/bash\n#SBATCH --job-name=apple315_assembly\n#SBATCH --account=kcooper\n#SBATCH --partition=standard\n#SBATCH --nodes=1\n#SBATCH --ntasks=1\n#SBATCH --cpus-per-task=38\n#SBATCH --time=48:00:00\n#SBATCH --mem-per-cpu=5gb    \n#SBATCH --mail-type=ALL\n\nmodule load spades\nmodule load python/3.8\n\necho \"Loading Python module\"\ncd /xdisk/kcooper/caparicio/tree-fruit/\n\n# Run Python script with the necessary module\npython3 /xdisk/kcooper/caparicio/tree-fruit/02batch/apple315_spade.py\n\nNUM_THREADS=38\nexport OMP_NUM_THREADS=$NUM_THREADS\n\n# Specify the files directly for apples315\nf1=\"01c_fastp_reads/apples315_1.trimmed.fastq\"\nf2=\"01c_fastp_reads/apples315_2.trimmed.fastq\"\nsample_name=\"apples315\"\noutput_dir=\"02_assembly/${sample_name}\"\n\nmkdir -p \"$output_dir\"\ntemp_dir=\"$output_dir/tmp\" \nmkdir -p \"$temp_dir\"\n\nif [ -f \"${output_dir}/spades.log\" ]; then\n    echo \"Resuming SPAdes assembly for $sample_name\"\n    spades.py --continue -o \"$output_dir\"\nelse\n    echo \"Starting new SPAdes assembly for $sample_name\"\n    spades.py --meta -k 21,33,55,77 -o \"$output_dir\" --tmp-dir \"$temp_dir\" -1 \"$f1\" -2 \"$f2\" --threads $NUM_THREADS\nfi\n\nif [ $? -eq 0 ]; then\n    echo \"Assembly completed successfully for $sample_name. Removing temporary files.\"\n    rm -rf \"$temp_dir\"\nelse\n    echo \"Assembly incomplete or failed for $sample_name. Retaining files for troubleshooting.\"\nfi\n</code></pre>"},{"location":"240720/#apple315_spadepy-script","title":"apple315_spade.py script","text":"<ul> <li>make .py script executable</li> </ul> <p>'dir=\"/xdisk/kcooper/caparicio/tree-fruit/02batch/\"'</p> <p>'chmod +x \"$dir\"/*.py'</p> <pre><code>from functools import lru_cache\nimport mmap\n\n@lru_cache(maxsize=None)\ndef process_file(file_path):\n    with open(file_path, 'r') as f:\n        # Memory-map the file, size 0 means whole file\n        mmapped_file = mmap.mmap(f.fileno(), 0, access=mmap.ACCESS_READ)\n        for line in iter(mmapped_file.readline, b\"\"):\n            # Process each line\n            pass\n        mmapped_file.close()\n\ndef main():\n    files = [\"01c_fastp_reads/apples315_1.trimmed.fastq\", \"01c_fastp_reads/apples315_2.trimmed.fastq\"]\n    for file in files:\n        process_file(file)\n\nif __name__ == \"__main__\":\n    main()\n</code></pre>"},{"location":"240720/#humann-python-virtual-environment-install-attempt","title":"humann python virtual environment install attempt","text":"<ul> <li> <p>Installing Python Packages Using a Virtual Environment </p> </li> <li> <p>humann</p> </li> <li> <p>Using Virtual Environments Overview</p> </li> </ul>"},{"location":"240720/#install-log","title":"install log","text":"<pre><code>[caparicio@r4u13n1 ~]$ module load python/3.8\n[caparicio@r4u13n1 ~]$ python3.8 -m venv /xdisk/kcooper/caparicio/virtual/humann38\n[caparicio@r4u13n1 ~]$ source /xdisk/kcooper/caparicio/virtual/humann38/bin/activate\n(humann38) [caparicio@r4u13n1 ~]$ pip install --upgrade pip\nRequirement already satisfied: pip in /xdisk/kcooper/caparicio/virtual/humann38/lib/python3.8/site-packages (21.1.1)\nCollecting pip\n  Using cached pip-24.1.2-py3-none-any.whl (1.8 MB)\nInstalling collected packages: pip\n  Attempting uninstall: pip\n    Found existing installation: pip 21.1.1\n    Uninstalling pip-21.1.1:\n      Successfully uninstalled pip-21.1.1\nSuccessfully installed pip-24.1.2\n(humann38) [caparicio@r4u13n1 ~]$ pip install humann\nCollecting humann\n  Using cached humann-3.9.tar.gz (107.2 MB)\n  Installing build dependencies ... done\n  Getting requirements to build wheel ... done\n  Preparing metadata (pyproject.toml) ... done\nBuilding wheels for collected packages: humann\n  Building wheel for humann (pyproject.toml) ... done\n  Created wheel for humann: filename=humann-3.9-py3-none-any.whl size=105429071 sha256=083f25820038aa708de5ddbd588e67a8fb7692a7a21aaa9e3784976a6f24ec42\n  Stored in directory: /home/u19/caparicio/.cache/pip/wheels/ba/0a/92/77b6b96fe7eb06c2e6dff0906d93fdfa0a347f780066c8e714\nSuccessfully built humann\nInstalling collected packages: humann\nSuccessfully installed humann-3.9\n\n\n(humann) [caparicio@r4u13n1 ~]$ humann_databases --download chocophlan full /xdisk/kcooper/caparicio/tree-fruit/09humann\nCreating subdirectory to install database: /xdisk/kcooper/caparicio/tree-fruit/09humann/chocophlan\nDownload URL: http://huttenhower.sph.harvard.edu/humann_data/chocophlan/full_chocophlan.v201901_v31.tar.gz\n15.37 GB         \nExtracting: /xdisk/kcooper/caparicio/tree-fruit/09humann/full_chocophlan.v201901_v31.tar.gz\n\nDatabase installed: /xdisk/kcooper/caparicio/tree-fruit/09humann/chocophlan\n\nHUMAnN configuration file updated: database_folders : nucleotide = /xdisk/kcooper/caparicio/tree-fruit/09humann/chocophlan\n(humann) [caparicio@r4u13n1 ~]$ humann_databases --download uniref uniref90_diamond /xdisk/kcooper/caparicio/tree-fruit/09humann\nCreating subdirectory to install database: /xdisk/kcooper/caparicio/tree-fruit/09humann/uniref\nDownload URL: http://huttenhower.sph.harvard.edu/humann_data/uniprot/uniref_annotated/uniref90_annotated_v201901b_full.tar.gz\n19.17 GB         \nExtracting: /xdisk/kcooper/caparicio/tree-fruit/09humann/uniref90_annotated_v201901b_full.tar.gz\n\nDatabase installed: /xdisk/kcooper/caparicio/tree-fruit/09humann/uniref\n\nHUMAnN configuration file updated: database_folders : protein = /xdisk/kcooper/caparicio/tree-fruit/09humann/uniref\n(humann) [caparicio@r4u13n1 ~]$ humann_databases --download uniref uniref50_diamond /xdisk/kcooper/caparicio/tree-fruit/09humann\nDownload URL: http://huttenhower.sph.harvard.edu/humann_data/uniprot/uniref_annotated/uniref50_annotated_v201901b_full.tar.gz\n6.43 GB         \nExtracting: /xdisk/kcooper/caparicio/tree-fruit/09humann/uniref50_annotated_v201901b_full.tar.gz\n\nDatabase installed: /xdisk/kcooper/caparicio/tree-fruit/09humann/uniref\n\nHUMAnN configuration file updated: database_folders : protein = /xdisk/kcooper/caparicio/tree-fruit/09humann/uniref\n\n(humann38) [caparicio@r4u10n2 ~]$ git clone https://github.com/biobakery/MetaPhlAn2.git\nCloning into 'MetaPhlAn2'...\nremote: Enumerating objects: 135, done.\nremote: Counting objects: 100% (135/135), done.\nremote: Compressing objects: 100% (114/114), done.\nremote: Total 135 (delta 11), reused 127 (delta 7), pack-reused 0\nReceiving objects: 100% (135/135), 33.39 MiB | 30.16 MiB/s, done.\nResolving deltas: 100% (11/11), done.\n\n[caparicio@r4u10n2 ~]$ module load python/3.8\n[caparicio@r4u10n2 ~]$ source /xdisk/kcooper/caparicio/virtual/humann38/bin/activate\n(humann38) [caparicio@r4u10n2 ~]$ git clone https://github.com/biobakery/MetaPhlAn2.git\nCloning into 'MetaPhlAn2'...\nremote: Enumerating objects: 135, done.\nremote: Counting objects: 100% (135/135), done.\nremote: Compressing objects: 100% (114/114), done.\nremote: Total 135 (delta 11), reused 127 (delta 7), pack-reused 0\nReceiving objects: 100% (135/135), 33.39 MiB | 30.16 MiB/s, done.\nResolving deltas: 100% (11/11), done.\n(humann38) [caparicio@r4u10n2 ~]$ metaphlan2 --version\n-bash: metaphlan2: command not found\n(humann38) [caparicio@r4u10n2 ~]$ cd /xdisk/kcooper/caparicio/virtual/humann38/bin\n(humann38) [caparicio@r4u10n2 bin]$ pwd\n/xdisk/kcooper/caparicio/virtual/humann38/bin\n(humann38) [caparicio@r4u10n2 bin]$ git clone https://github.com/biobakery/MetaPhlAn2.git\nCloning into 'MetaPhlAn2'...\nremote: Enumerating objects: 135, done.\nremote: Counting objects: 100% (135/135), done.\nremote: Compressing objects: 100% (114/114), done.\nremote: Total 135 (delta 11), reused 127 (delta 7), pack-reused 0\nReceiving objects: 100% (135/135), 33.39 MiB | 32.26 MiB/s, done.\nResolving deltas: 100% (11/11), done.\n(humann38) [caparicio@r4u10n2 bin]$ cd MetaPhlAn2\n(humann38) [caparicio@r4u10n2 MetaPhlAn2]$ pip install .\nERROR: Directory '.' is not installable. Neither 'setup.py' nor 'pyproject.toml' found.\n(humann38) [caparicio@r4u10n2 MetaPhlAn2]$ python setup.py install\npython: can't open file 'setup.py': [Errno 2] No such file or directory\n(humann38) [caparicio@r4u10n2 MetaPhlAn2]$ cmd\n-bash: cmd: command not found\n(humann38) [caparicio@r4u10n2 MetaPhlAn2]$ pwd\n/xdisk/kcooper/caparicio/virtual/humann38/bin/MetaPhlAn2\n(humann38) [caparicio@r4u10n2 MetaPhlAn2]$ $ export PATH=`pwd`:$PATH\n-bash: $: command not found\n(humann38) [caparicio@r4u10n2 MetaPhlAn2]$ export PATH=`pwd`:$PATH\n(humann38) [caparicio@r4u10n2 MetaPhlAn2]$ export mpa_dir=`pwd`\n(humann38) [caparicio@r4u10n2 MetaPhlAn2]$ metaphlan2.py --version\nError! numpy python library not detected!!\n(humann38) [caparicio@r4u10n2 MetaPhlAn2]$ cd ..\n(humann38) [caparicio@r4u10n2 bin]$ pwd\n/xdisk/kcooper/caparicio/virtual/humann38/bin\n(humann38) [caparicio@r4u10n2 bin]$ pip install numpy\nCollecting numpy\n  Downloading numpy-1.24.4-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (5.6 kB)\nDownloading numpy-1.24.4-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (17.3 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 17.3/17.3 MB 40.1 MB/s eta 0:00:00\nInstalling collected packages: numpy\nSuccessfully installed numpy-1.24.4\n(humann38) [caparicio@r4u10n2 bin]$ metaphlan2.py --version\nWarning! Biom python library not detected!\n Exporting to biom format will not work!\nMetaPhlAn version 2.6.0 (19 August 2016)\n(humann38) [caparicio@r4u10n2 bin]$ ^C\n(humann38) [caparicio@r4u10n2 bin]$ pip install biom-format\nCollecting biom-format\n  Using cached biom_format-2.1.16-cp38-cp38-linux_x86_64.whl\nCollecting click (from biom-format)\n  Downloading click-8.1.7-py3-none-any.whl.metadata (3.0 kB)\nRequirement already satisfied: numpy&gt;=1.9.2 in /xdisk/kcooper/caparicio/virtual/humann38/lib/python3.8/site-packages (from biom-format) (1.24.4)\nCollecting scipy&gt;=1.3.1 (from biom-format)\n  Downloading scipy-1.10.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (58 kB)\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 58.9/58.9 kB 1.2 MB/s eta 0:00:00\nCollecting pandas&gt;=0.20.0 (from biom-format)\n  Downloading pandas-2.0.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (18 kB)\nCollecting h5py (from biom-format)\n  Downloading h5py-3.11.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.5 kB)\nCollecting python-dateutil&gt;=2.8.2 (from pandas&gt;=0.20.0-&gt;biom-format)\n  Using cached python_dateutil-2.9.0.post0-py2.py3-none-any.whl.metadata (8.4 kB)\nCollecting pytz&gt;=2020.1 (from pandas&gt;=0.20.0-&gt;biom-format)\n  Downloading pytz-2024.1-py2.py3-none-any.whl.metadata (22 kB)\nCollecting tzdata&gt;=2022.1 (from pandas&gt;=0.20.0-&gt;biom-format)\n  Downloading tzdata-2024.1-py2.py3-none-any.whl.metadata (1.4 kB)\nCollecting six&gt;=1.5 (from python-dateutil&gt;=2.8.2-&gt;pandas&gt;=0.20.0-&gt;biom-format)\n  Using cached six-1.16.0-py2.py3-none-any.whl.metadata (1.8 kB)\nDownloading pandas-2.0.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.4 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 12.4/12.4 MB 50.7 MB/s eta 0:00:00\nDownloading scipy-1.10.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (34.5 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 34.5/34.5 MB 59.3 MB/s eta 0:00:00\nDownloading click-8.1.7-py3-none-any.whl (97 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 97.9/97.9 kB 4.0 MB/s eta 0:00:00\nDownloading h5py-3.11.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (5.3 MB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 5.3/5.3 MB 18.7 MB/s eta 0:00:00\nUsing cached python_dateutil-2.9.0.post0-py2.py3-none-any.whl (229 kB)\nDownloading pytz-2024.1-py2.py3-none-any.whl (505 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 505.5/505.5 kB 18.1 MB/s eta 0:00:00\nDownloading tzdata-2024.1-py2.py3-none-any.whl (345 kB)\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 345.4/345.4 kB 15.4 MB/s eta 0:00:00\nUsing cached six-1.16.0-py2.py3-none-any.whl (11 kB)\nInstalling collected packages: pytz, tzdata, six, scipy, h5py, click, python-dateutil, pandas, biom-format\nSuccessfully installed biom-format-2.1.16 click-8.1.7 h5py-3.11.0 pandas-2.0.3 python-dateutil-2.9.0.post0 pytz-2024.1 scipy-1.10.1 six-1.16.0 tzdata-2024.1\n(humann38) [caparicio@r4u10n2 bin]$ metaphlan2.py --version\nMetaPhlAn version 2.6.0 (19 August 2016)\n(humann38) [caparicio@r4u10n2 bin]$ python -c \"import numpy; print(numpy.__version__)\"\n1.24.4\n(humann38) [caparicio@r4u10n2 bin]$ python -c \"import biom; print(biom.__version__)\"\n2.1.16\n</code></pre>"},{"location":"240720/#humann-step-1-slurm-script-attempt-1","title":"humann step 1 slurm script - attempt 1","text":"<pre><code>HUMANN_STEP1.SLURM\n#!/bin/bash\n#SBATCH --job-name=humann_step1\n#SBATCH --account=pi\n#SBATCH --partition=standard\n#SBATCH --nodes=1\n#SBATCH --ntasks=1\n#SBATCH --cpus-per-task=35\n#SBATCH --time=18:00:00\n#SBATCH --mem-per-cpu=5gb\n#SBATCH --mail-type=ALL\n\n# Load the necessary modules\nsource /xdisk/pi/member/virtual/humann/bin/activate\nmodule load python/3.8\n\n# Set the directory containing the input files and the output directory\ninput_directory='/xdisk/pi/member/tree-fruit/01d_fastp_reads_all/output'\noutput_directory='/xdisk/pi/member/tree-fruit/09humann/output'\nchocophlan_database='/xdisk/pi/member/tree-fruit/09humann/chocophlan'\n\n# Run the Python script\npython3 humann_step1.py \"${input_directory}\" \"${output_directory}\" \"${chocophlan_database}\"\n</code></pre>"},{"location":"240720/#humann-step-1-py-script-attempt-1","title":"humann step 1 .py script - attempt 1","text":"<pre><code>#!/usr/bin/env python3\n\nimport os\nimport sys\nimport subprocess\nfrom concurrent.futures import ThreadPoolExecutor\n\ndef generate_file_list(input_directory):\n    \"\"\"Generate a list of .fastq files in the input directory.\"\"\"\n    return [os.path.join(input_directory, file) for file in os.listdir(input_directory) if file.endswith('.fastq')]\n\ndef run_humann(sample, output_dir, chocophlan_database, uniref_database):\n    \"\"\"Run HUMAnN for a given sample.\"\"\"\n    output_sample_dir = os.path.join(output_dir, os.path.basename(sample).replace('.fastq', ''))\n    os.makedirs(output_sample_dir, exist_ok=True)\n    command = humann --input {sample} --output {output_sample_dir} --input_format fastq --nucleotide-database {chocophlan_database} --protein-database {uniref_database}\"\n    subprocess.run(command, shell=True, check=True)\n\ndef main(input_directory, output_directory, chocophlan_database, uniref_database):\n    samples = generate_file_list(input_directory)\n    with ThreadPoolExecutor(max_workers=35) as executor:\n        futures = [executor.submit(run_humann, sample, output_directory, chocophlan_database, uniref_database) for sample in samples]\n        for future in futures:\n            future.result()\n\nif __name__ == \"__main__\":\n    if len(sys.argv) != 5:\n        print(\"Usage: python humann_step1.py &lt;input_directory&gt; &lt;output_directory&gt; &lt;chocophlan_database&gt; &lt;uniref_database&gt;\")\n        sys.exit(1)\n    input_directory = sys.argv[1]\n    output_directory = sys.argv[2]\n    chocophlan_database = sys.argv[3]\n    uniref_database = sys.argv[4]\n    main(input_directory, output_directory, chocophlan_database, uniref_database)\n</code></pre>"},{"location":"240720/#humann-step-1-slurm-job-log-error-1","title":"humann step 1 slurm job log - error 1","text":"<pre><code>command = humann --input {sample} --output {output_sample_dir} --input_format fastq --nucleotide-database {chocophlan_database} --protein-database {uniref_database}\"\n                             ^\nSyntaxError: invalid syntax\n</code></pre>"},{"location":"240720/#debug-attempt-1-replace-py-code-section","title":"debug attempt 1 - replace .py code section:","text":"<p><pre><code>command = humann --input {sample} --output {output_sample_dir} --input_format fastq --nucleotide-database {chocophlan_database} --protein-database {uniref_database}\"\n</code></pre> with:</p> <pre><code>command = f\"humann --input {sample} --output {output_sample_dir} --input_format fastq --nucleotide-database {chocophlan_database} --protein-database {uniref_database}\"\n</code></pre>"},{"location":"240720/#humann-step-1-slurm-job-log-error-2","title":"humann step 1 slurm job log - error 2","text":"<p><pre><code>/xdisk/pi/member/virtual/humann/bin/python: error while loading shared libraries: libpython3.11.so.1.0: cannot open shared object file: No such file or directory\nTraceback (most recent call last):\n  File \"humann_step1.py\", line 41, in &lt;module&gt;\n    main(input_directory, output_directory, chocophlan_database, uniref_database)\n  File \"humann_step1.py\", line 31, in main\n    future.result()\n  File \"/opt/ohpc/pub/apps/python/3.8.12/lib/python3.8/concurrent/futures/_base.py\", line 444, in result\n    return self.__get_result()\n  File \"/opt/ohpc/pub/apps/python/3.8.12/lib/python3.8/concurrent/futures/_base.py\", line 389, in __get_result\n    raise self._exception\n  File \"/opt/ohpc/pub/apps/python/3.8.12/lib/python3.8/concurrent/futures/thread.py\", line 57, in run\n    result = self.fn(*self.args, **self.kwargs)\n  File \"humann_step1.py\", line 24, in run_humann\n    subprocess.run(command, shell=True, check=True)\n  File \"/opt/ohpc/pub/apps/python/3.8.12/lib/python3.8/subprocess.py\", line 516, in run\n    raise CalledProcessError(retcode, process.args,\nsubprocess.CalledProcessError: Command 'humann --input /xdisk/pi/member/tree-fruit/01d_fastp_reads_all/output/peaches273.merged.fastq --output /xdisk/pi/member/tree-fruit/09humann/output/peaches273.merged --input_format fastq --nucleotide-database /xdisk/pi/member/tree-fruit/09humann/chocophlan --protein-database /xdisk/pi/member/tree-fruit/09humann/uniref90' returned non-zero exit status 127.\n</code></pre> numpy and metaphlan not found - after multiple tries to install both, DELETE INSTALL</p>"},{"location":"240720/#mamba-reinstall","title":"mamba reinstall","text":"<ul> <li>miniforge</li> <li>mamba mistakenly deleted in attempt to make room for installs in home drive</li> <li>was directed to 'miniforge' when searching for 'mamba' <pre><code>$ wget \"https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-$(uname)-$(uname -m).sh\"\n--2024-07-26 12:57:26--  https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh\nResolving github.com (github.com)... 140.82.116.3\nConnecting to github.com (github.com)|140.82.116.3|:443... connected.\nHTTP request sent, awaiting response... 302 Found\nLocation: https://github.com/conda-forge/miniforge/releases/download/24.3.0-0/Miniforge3-Linux-x86_64.sh [following]\n--2024-07-26 12:57:26--  https://github.com/conda-forge/miniforge/releases/download/24.3.0-0/Miniforge3-Linux-x86_64.sh\nReusing existing connection to github.com:443.\nHTTP request sent, awaiting response... 302 Found\nLocation: https://objects.githubusercontent.com/github-production-release-asset-2e65be/221584272/44f31adc-7a87-4d05-8e42-82d599d5b648?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=releaseassetproduction%2F20240726%2Fus-east-1%2Fs3%2Faws4_request&amp;X-Amz-Date=20240726T195726Z&amp;X-Amz-Expires=300&amp;X-Amz-Signature=c387f39dac2890e9cd087ad050c266ae2916634fba20ecdc50237beae023f3d1&amp;X-Amz-SignedHeaders=host&amp;actor_id=0&amp;key_id=0&amp;repo_id=221584272&amp;response-content-disposition=attachment%3B%20filename%3DMiniforge3-Linux-x86_64.sh&amp;response-content-type=application%2Foctet-stream [following]\n--2024-07-26 12:57:27--  https://objects.githubusercontent.com/github-production-release-asset-2e65be/221584272/44f31adc-7a87-4d05-8e42-82d599d5b648?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=releaseassetproduction%2F20240726%2Fus-east-1%2Fs3%2Faws4_request&amp;X-Amz-Date=20240726T195726Z&amp;X-Amz-Expires=300&amp;X-Amz-Signature=c387f39dac2890e9cd087ad050c266ae2916634fba20ecdc50237beae023f3d1&amp;X-Amz-SignedHeaders=host&amp;actor_id=0&amp;key_id=0&amp;repo_id=221584272&amp;response-content-disposition=attachment%3B%20filename%3DMiniforge3-Linux-x86_64.sh&amp;response-content-type=application%2Foctet-stream\nResolving objects.githubusercontent.com (objects.githubusercontent.com)... 185.199.111.133, 185.199.108.133, 185.199.109.133, ...\nConnecting to objects.githubusercontent.com (objects.githubusercontent.com)|185.199.111.133|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 82796318 (79M) [application/octet-stream]\nSaving to: 'Miniforge3-Linux-x86_64.sh.1'\n\n100%[======================================&gt;] 82,796,318   105MB/s   in 0.8s   \n\n2024-07-26 12:57:28 (105 MB/s) - 'Miniforge3-Linux-x86_64.sh.1' saved [82796318/82796318]\n\n[caparicio@r3u32n2 ~]$ bash Miniforge3-$(uname)-$(uname -m).sh\n\nWelcome to Miniforge3 24.3.0-0\n\nIn order to continue the installation process, please review the license\nagreement.\nPlease, press ENTER to continue\n&gt;&gt;&gt; \nMiniforge installer code uses BSD-3-Clause license as stated below.\n\nBinary packages that come with it have their own licensing terms\nand by installing miniforge you agree to the licensing terms of individual\npackages as well. They include different OSI-approved licenses including\nthe GNU General Public License and can be found in pkgs/&lt;pkg-name&gt;/info/licenses\nfolders.\n\nMiniforge installer comes with a boostrapping executable that is used\nwhen installing miniforge and is deleted after miniforge is installed.\nThe bootstrapping executable uses micromamba, cli11, cpp-filesystem,\ncurl, c-ares, krb5, libarchive, libev, lz4, nghttp2, openssl, libsolv,\nnlohmann-json, reproc and zstd which are licensed under BSD-3-Clause,\nMIT and OpenSSL licenses. Licenses and copyright notices of these\nprojects can be found at the following URL.\nhttps://github.com/conda-forge/micromamba-feedstock/tree/master/recipe.\n\n=============================================================================\n\nCopyright (c) 2019-2022, conda-forge\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation\nand/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors\nmay be used to endorse or promote products derived from this software without\nspecific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\nDo you accept the license terms? [yes|no]\n&gt;&gt;&gt; \nPlease answer 'yes' or 'no':'\n&gt;&gt;&gt; yes\n\nMiniforge3 will now be installed into this location:\n/home/u19/caparicio/miniforge3\n\n  - Press ENTER to confirm the location\n  - Press CTRL-C to abort the installation\n  - Or specify a different location below\n\n[/home/u19/caparicio/miniforge3] &gt;&gt;&gt; \nPREFIX=/home/u19/caparicio/miniforge3\nUnpacking payload ...\nExtracting _libgcc_mutex-0.1-conda_forge.tar.bz2\nExtracting ca-certificates-2024.2.2-hbcca054_0.conda\nExtracting ld_impl_linux-64-2.40-h41732ed_0.conda\nExtracting libstdcxx-ng-13.2.0-h7e041cc_5.conda\nExtracting pybind11-abi-4-hd8ed1ab_3.tar.bz2\nExtracting python_abi-3.10-4_cp310.conda\nExtracting tzdata-2024a-h0c530f3_0.conda\nExtracting libgomp-13.2.0-h807b86a_5.conda\nExtracting _openmp_mutex-4.5-2_gnu.tar.bz2\nExtracting libgcc-ng-13.2.0-h807b86a_5.conda\nExtracting bzip2-1.0.8-hd590300_5.conda\nExtracting c-ares-1.28.1-hd590300_0.conda\nExtracting fmt-10.2.1-h00ab1b0_0.conda\nExtracting icu-73.2-h59595ed_0.conda\nExtracting keyutils-1.6.1-h166bdaf_0.tar.bz2\nExtracting libev-4.33-hd590300_2.conda\nExtracting libffi-3.4.2-h7f98852_5.tar.bz2\nExtracting libiconv-1.17-hd590300_2.conda\nExtracting libnsl-2.0.1-hd590300_0.conda\nExtracting libuuid-2.38.1-h0b41bf4_0.conda\nExtracting libxcrypt-4.4.36-hd590300_1.conda\nExtracting libzlib-1.2.13-hd590300_5.conda\nExtracting lz4-c-1.9.4-hcb278e6_0.conda\nExtracting lzo-2.10-h516909a_1000.tar.bz2\nExtracting ncurses-6.4.20240210-h59595ed_0.conda\nExtracting openssl-3.2.1-hd590300_1.conda\nExtracting reproc-14.2.4.post0-hd590300_1.conda\nExtracting xz-5.2.6-h166bdaf_0.tar.bz2\nExtracting yaml-cpp-0.8.0-h59595ed_0.conda\nExtracting libedit-3.1.20191231-he28a2e2_2.tar.bz2\nExtracting libnghttp2-1.58.0-h47da74e_1.conda\nExtracting libsolv-0.7.28-hfc55251_2.conda\nExtracting libsqlite-3.45.2-h2797004_0.conda\nExtracting libssh2-1.11.0-h0841786_0.conda\nExtracting libxml2-2.12.6-h232c23b_1.conda\nExtracting readline-8.2-h8228510_1.conda\nExtracting reproc-cpp-14.2.4.post0-h59595ed_1.conda\nExtracting tk-8.6.13-noxft_h4845f30_101.conda\nExtracting zstd-1.5.5-hfc55251_0.conda\nExtracting krb5-1.21.2-h659d440_0.conda\nExtracting libarchive-3.7.2-h2aa1ff5_1.conda\nExtracting python-3.10.14-hd12c33a_0_cpython.conda\nExtracting libcurl-8.7.1-hca28451_0.conda\nExtracting menuinst-2.0.2-py310hff52083_0.conda\nExtracting archspec-0.2.3-pyhd8ed1ab_0.conda\nExtracting boltons-24.0.0-pyhd8ed1ab_0.conda\nExtracting brotli-python-1.1.0-py310hc6cd4ac_1.conda\nExtracting certifi-2024.2.2-pyhd8ed1ab_0.conda\nExtracting charset-normalizer-3.3.2-pyhd8ed1ab_0.conda\nExtracting colorama-0.4.6-pyhd8ed1ab_0.tar.bz2\nExtracting distro-1.9.0-pyhd8ed1ab_0.conda\nExtracting idna-3.6-pyhd8ed1ab_0.conda\nExtracting jsonpointer-2.4-py310hff52083_3.conda\nExtracting libmamba-1.5.8-had39da4_0.conda\nExtracting packaging-24.0-pyhd8ed1ab_0.conda\nExtracting platformdirs-4.2.0-pyhd8ed1ab_0.conda\nExtracting pluggy-1.4.0-pyhd8ed1ab_0.conda\nExtracting pycosat-0.6.6-py310h2372a71_0.conda\nExtracting pycparser-2.22-pyhd8ed1ab_0.conda\nExtracting pysocks-1.7.1-pyha2e5f31_6.tar.bz2\nExtracting ruamel.yaml.clib-0.2.8-py310h2372a71_0.conda\nExtracting setuptools-69.5.1-pyhd8ed1ab_0.conda\nExtracting truststore-0.8.0-pyhd8ed1ab_0.conda\nExtracting wheel-0.43.0-pyhd8ed1ab_1.conda\nExtracting cffi-1.16.0-py310h2fee648_0.conda\nExtracting jsonpatch-1.33-pyhd8ed1ab_0.conda\nExtracting libmambapy-1.5.8-py310h39ff949_0.conda\nExtracting pip-24.0-pyhd8ed1ab_0.conda\nExtracting ruamel.yaml-0.18.6-py310h2372a71_0.conda\nExtracting tqdm-4.66.2-pyhd8ed1ab_0.conda\nExtracting urllib3-2.2.1-pyhd8ed1ab_0.conda\nExtracting requests-2.31.0-pyhd8ed1ab_0.conda\nExtracting zstandard-0.22.0-py310h1275a96_0.conda\nExtracting conda-package-streaming-0.9.0-pyhd8ed1ab_0.conda\nExtracting conda-package-handling-2.2.0-pyh38be061_0.conda\nExtracting conda-24.3.0-py310hff52083_0.conda\nExtracting conda-libmamba-solver-24.1.0-pyhd8ed1ab_0.conda\nExtracting mamba-1.5.8-py310h51d5547_0.conda\n\nInstalling base environment...\n\nTransaction\n\n  Prefix: /home/u19/caparicio/miniforge3\n\n  Updating specs:\n\n   - conda-forge/linux-64::_libgcc_mutex==0.1=conda_forge[md5=d7c89558ba9fa0495403155b64376d81]\n   - conda-forge/linux-64::ca-certificates==2024.2.2=hbcca054_0[md5=2f4327a1cbe7f022401b236e915a5fef]\n   - conda-forge/linux-64::ld_impl_linux-64==2.40=h41732ed_0[md5=7aca3059a1729aa76c597603f10b0dd3]\n   - conda-forge/linux-64::libstdcxx-ng==13.2.0=h7e041cc_5[md5=f6f6600d18a4047b54f803cf708b868a]\n   - conda-forge/noarch::pybind11-abi==4=hd8ed1ab_3[md5=878f923dd6acc8aeb47a75da6c4098be]\n   - conda-forge/linux-64::python_abi==3.10=4_cp310[md5=26322ec5d7712c3ded99dd656142b8ce]\n   - conda-forge/noarch::tzdata==2024a=h0c530f3_0[md5=161081fc7cec0bfda0d86d7cb595f8d8]\n   - conda-forge/linux-64::libgomp==13.2.0=h807b86a_5[md5=d211c42b9ce49aee3734fdc828731689]\n   - conda-forge/linux-64::_openmp_mutex==4.5=2_gnu[md5=73aaf86a425cc6e73fcf236a5a46396d]\n   - conda-forge/linux-64::libgcc-ng==13.2.0=h807b86a_5[md5=d4ff227c46917d3b4565302a2bbb276b]\n   - conda-forge/linux-64::bzip2==1.0.8=hd590300_5[md5=69b8b6202a07720f448be700e300ccf4]\n   - conda-forge/linux-64::c-ares==1.28.1=hd590300_0[md5=dcde58ff9a1f30b0037a2315d1846d1f]\n   - conda-forge/linux-64::fmt==10.2.1=h00ab1b0_0[md5=35ef8bc24bd34074ebae3c943d551728]\n   - conda-forge/linux-64::icu==73.2=h59595ed_0[md5=cc47e1facc155f91abd89b11e48e72ff]\n   - conda-forge/linux-64::keyutils==1.6.1=h166bdaf_0[md5=30186d27e2c9fa62b45fb1476b7200e3]\n   - conda-forge/linux-64::libev==4.33=hd590300_2[md5=172bf1cd1ff8629f2b1179945ed45055]\n   - conda-forge/linux-64::libffi==3.4.2=h7f98852_5[md5=d645c6d2ac96843a2bfaccd2d62b3ac3]\n   - conda-forge/linux-64::libiconv==1.17=hd590300_2[md5=d66573916ffcf376178462f1b61c941e]\n   - conda-forge/linux-64::libnsl==2.0.1=hd590300_0[md5=30fd6e37fe21f86f4bd26d6ee73eeec7]\n   - conda-forge/linux-64::libuuid==2.38.1=h0b41bf4_0[md5=40b61aab5c7ba9ff276c41cfffe6b80b]\n   - conda-forge/linux-64::libxcrypt==4.4.36=hd590300_1[md5=5aa797f8787fe7a17d1b0821485b5adc]\n   - conda-forge/linux-64::libzlib==1.2.13=hd590300_5[md5=f36c115f1ee199da648e0597ec2047ad]\n   - conda-forge/linux-64::lz4-c==1.9.4=hcb278e6_0[md5=318b08df404f9c9be5712aaa5a6f0bb0]\n   - conda-forge/linux-64::lzo==2.10=h516909a_1000[md5=bb14fcb13341b81d5eb386423b9d2bac]\n   - conda-forge/linux-64::ncurses==6.4.20240210=h59595ed_0[md5=97da8860a0da5413c7c98a3b3838a645]\n   - conda-forge/linux-64::openssl==3.2.1=hd590300_1[md5=9d731343cff6ee2e5a25c4a091bf8e2a]\n   - conda-forge/linux-64::reproc==14.2.4.post0=hd590300_1[md5=82ca53502dfd5a64a80dee76dae14685]\n   - conda-forge/linux-64::xz==5.2.6=h166bdaf_0[md5=2161070d867d1b1204ea749c8eec4ef0]\n   - conda-forge/linux-64::yaml-cpp==0.8.0=h59595ed_0[md5=965eaacd7c18eb8361fd12bb9e7a57d7]\n   - conda-forge/linux-64::libedit==3.1.20191231=he28a2e2_2[md5=4d331e44109e3f0e19b4cb8f9b82f3e1]\n   - conda-forge/linux-64::libnghttp2==1.58.0=h47da74e_1[md5=700ac6ea6d53d5510591c4344d5c989a]\n   - conda-forge/linux-64::libsolv==0.7.28=hfc55251_2[md5=535bafe1ed0a5bdd3f4c125ca05d378c]\n   - conda-forge/linux-64::libsqlite==3.45.2=h2797004_0[md5=866983a220e27a80cb75e85cb30466a1]\n   - conda-forge/linux-64::libssh2==1.11.0=h0841786_0[md5=1f5a58e686b13bcfde88b93f547d23fe]\n   - conda-forge/linux-64::libxml2==2.12.6=h232c23b_1[md5=6853448e9ca1cfd5f15382afd2a6d123]\n   - conda-forge/linux-64::readline==8.2=h8228510_1[md5=47d31b792659ce70f470b5c82fdfb7a4]\n   - conda-forge/linux-64::reproc-cpp==14.2.4.post0=h59595ed_1[md5=715e1d720ec1a03715bebd237972fca5]\n   - conda-forge/linux-64::tk==8.6.13=noxft_h4845f30_101[md5=d453b98d9c83e71da0741bb0ff4d76bc]\n   - conda-forge/linux-64::zstd==1.5.5=hfc55251_0[md5=04b88013080254850d6c01ed54810589]\n   - conda-forge/linux-64::krb5==1.21.2=h659d440_0[md5=cd95826dbd331ed1be26bdf401432844]\n   - conda-forge/linux-64::libarchive==3.7.2=h2aa1ff5_1[md5=3bf887827d1968275978361a6e405e4f]\n   - conda-forge/linux-64::python==3.10.14=hd12c33a_0_cpython[md5=2b4ba962994e8bd4be9ff5b64b75aff2]\n   - conda-forge/linux-64::libcurl==8.7.1=hca28451_0[md5=755c7f876815003337d2c61ff5d047e5]\n   - conda-forge/linux-64::menuinst==2.0.2=py310hff52083_0[md5=4837faab0d3e665df57fef662148c6a3]\n   - conda-forge/noarch::archspec==0.2.3=pyhd8ed1ab_0[md5=192278292e20704f663b9c766909d67b]\n   - conda-forge/noarch::boltons==24.0.0=pyhd8ed1ab_0[md5=61de176bd62041f9cd5bd4fcd09eb0ff]\n   - conda-forge/linux-64::brotli-python==1.1.0=py310hc6cd4ac_1[md5=1f95722c94f00b69af69a066c7433714]\n   - conda-forge/noarch::certifi==2024.2.2=pyhd8ed1ab_0[md5=0876280e409658fc6f9e75d035960333]\n   - conda-forge/noarch::charset-normalizer==3.3.2=pyhd8ed1ab_0[md5=7f4a9e3fcff3f6356ae99244a014da6a]\n   - conda-forge/noarch::colorama==0.4.6=pyhd8ed1ab_0[md5=3faab06a954c2a04039983f2c4a50d99]\n   - conda-forge/noarch::distro==1.9.0=pyhd8ed1ab_0[md5=bbdb409974cd6cb30071b1d978302726]\n   - conda-forge/noarch::idna==3.6=pyhd8ed1ab_0[md5=1a76f09108576397c41c0b0c5bd84134]\n   - conda-forge/linux-64::jsonpointer==2.4=py310hff52083_3[md5=08ec1463dbc5c806a32fc431874032ca]\n   - conda-forge/linux-64::libmamba==1.5.8=had39da4_0[md5=def669885dc103d8acb7ac2ac35e0b2f]\n   - conda-forge/noarch::packaging==24.0=pyhd8ed1ab_0[md5=248f521b64ce055e7feae3105e7abeb8]\n   - conda-forge/noarch::platformdirs==4.2.0=pyhd8ed1ab_0[md5=a0bc3eec34b0fab84be6b2da94e98e20]\n   - conda-forge/noarch::pluggy==1.4.0=pyhd8ed1ab_0[md5=139e9feb65187e916162917bb2484976]\n   - conda-forge/linux-64::pycosat==0.6.6=py310h2372a71_0[md5=0adaac9a86d59adae2bc86b3cdef2df1]\n   - conda-forge/noarch::pycparser==2.22=pyhd8ed1ab_0[md5=844d9eb3b43095b031874477f7d70088]\n   - conda-forge/noarch::pysocks==1.7.1=pyha2e5f31_6[md5=2a7de29fb590ca14b5243c4c812c8025]\n   - conda-forge/linux-64::ruamel.yaml.clib==0.2.8=py310h2372a71_0[md5=dcf6d2535586c77b31425ed835610c54]\n   - conda-forge/noarch::setuptools==69.5.1=pyhd8ed1ab_0[md5=7462280d81f639363e6e63c81276bd9e]\n   - conda-forge/noarch::truststore==0.8.0=pyhd8ed1ab_0[md5=08316d001eca8854392cf2837828ea11]\n   - conda-forge/noarch::wheel==0.43.0=pyhd8ed1ab_1[md5=0b5293a157c2b5cd513dd1b03d8d3aae]\n   - conda-forge/linux-64::cffi==1.16.0=py310h2fee648_0[md5=45846a970e71ac98fd327da5d40a0a2c]\n   - conda-forge/noarch::jsonpatch==1.33=pyhd8ed1ab_0[md5=bfdb7c5c6ad1077c82a69a8642c87aff]\n   - conda-forge/linux-64::libmambapy==1.5.8=py310h39ff949_0[md5=37f8aa15b73c4691eeec15caf45aab25]\n   - conda-forge/noarch::pip==24.0=pyhd8ed1ab_0[md5=f586ac1e56c8638b64f9c8122a7b8a67]\n   - conda-forge/linux-64::ruamel.yaml==0.18.6=py310h2372a71_0[md5=50b7d9b39099cdbabf65bf27df73a793]\n   - conda-forge/noarch::tqdm==4.66.2=pyhd8ed1ab_0[md5=2b8dfb969f984497f3f98409a9545776]\n   - conda-forge/noarch::urllib3==2.2.1=pyhd8ed1ab_0[md5=08807a87fa7af10754d46f63b368e016]\n   - conda-forge/noarch::requests==2.31.0=pyhd8ed1ab_0[md5=a30144e4156cdbb236f99ebb49828f8b]\n   - conda-forge/linux-64::zstandard==0.22.0=py310h1275a96_0[md5=54698ba13cd3494547b289cd86a2176a]\n   - conda-forge/noarch::conda-package-streaming==0.9.0=pyhd8ed1ab_0[md5=38253361efb303deead3eab39ae9269b]\n   - conda-forge/noarch::conda-package-handling==2.2.0=pyh38be061_0[md5=8a3ae7f6318376aa08ea753367bb7dd6]\n   - conda-forge/linux-64::conda==24.3.0=py310hff52083_0[md5=4187d17c4b75d8f7757820e835c507c9]\n   - conda-forge/noarch::conda-libmamba-solver==24.1.0=pyhd8ed1ab_0[md5=304dc78ad6e52e0fd663df1d484c1531]\n   - conda-forge/linux-64::mamba==1.5.8=py310h51d5547_0[md5=3b335eaa4894cbb5379a75f83a4d6b40]\n\n\n  Package                         Version  Build               Channel         Size\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n  Install:\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\n  + _libgcc_mutex                     0.1  conda_forge         conda-forge         \n  + ca-certificates              2024.2.2  hbcca054_0          conda-forge         \n  + ld_impl_linux-64                 2.40  h41732ed_0          conda-forge         \n  + libstdcxx-ng                   13.2.0  h7e041cc_5          conda-forge         \n  + pybind11-abi                        4  hd8ed1ab_3          conda-forge         \n  + python_abi                       3.10  4_cp310             conda-forge         \n  + tzdata                          2024a  h0c530f3_0          conda-forge         \n  + libgomp                        13.2.0  h807b86a_5          conda-forge         \n  + _openmp_mutex                     4.5  2_gnu               conda-forge         \n  + libgcc-ng                      13.2.0  h807b86a_5          conda-forge         \n  + bzip2                           1.0.8  hd590300_5          conda-forge         \n  + c-ares                         1.28.1  hd590300_0          conda-forge         \n  + fmt                            10.2.1  h00ab1b0_0          conda-forge         \n  + icu                              73.2  h59595ed_0          conda-forge         \n  + keyutils                        1.6.1  h166bdaf_0          conda-forge         \n  + libev                            4.33  hd590300_2          conda-forge         \n  + libffi                          3.4.2  h7f98852_5          conda-forge         \n  + libiconv                         1.17  hd590300_2          conda-forge         \n  + libnsl                          2.0.1  hd590300_0          conda-forge         \n  + libuuid                        2.38.1  h0b41bf4_0          conda-forge         \n  + libxcrypt                      4.4.36  hd590300_1          conda-forge         \n  + libzlib                        1.2.13  hd590300_5          conda-forge         \n  + lz4-c                           1.9.4  hcb278e6_0          conda-forge         \n  + lzo                              2.10  h516909a_1000       conda-forge         \n  + ncurses                  6.4.20240210  h59595ed_0          conda-forge         \n  + openssl                         3.2.1  hd590300_1          conda-forge         \n  + reproc                   14.2.4.post0  hd590300_1          conda-forge         \n  + xz                              5.2.6  h166bdaf_0          conda-forge         \n  + yaml-cpp                        0.8.0  h59595ed_0          conda-forge         \n  + libedit                  3.1.20191231  he28a2e2_2          conda-forge         \n  + libnghttp2                     1.58.0  h47da74e_1          conda-forge         \n  + libsolv                        0.7.28  hfc55251_2          conda-forge         \n  + libsqlite                      3.45.2  h2797004_0          conda-forge         \n  + libssh2                        1.11.0  h0841786_0          conda-forge         \n  + libxml2                        2.12.6  h232c23b_1          conda-forge         \n  + readline                          8.2  h8228510_1          conda-forge         \n  + reproc-cpp               14.2.4.post0  h59595ed_1          conda-forge         \n  + tk                             8.6.13  noxft_h4845f30_101  conda-forge         \n  + zstd                            1.5.5  hfc55251_0          conda-forge         \n  + krb5                           1.21.2  h659d440_0          conda-forge         \n  + libarchive                      3.7.2  h2aa1ff5_1          conda-forge         \n  + python                        3.10.14  hd12c33a_0_cpython  conda-forge         \n  + libcurl                         8.7.1  hca28451_0          conda-forge         \n  + menuinst                        2.0.2  py310hff52083_0     conda-forge         \n  + archspec                        0.2.3  pyhd8ed1ab_0        conda-forge         \n  + boltons                        24.0.0  pyhd8ed1ab_0        conda-forge         \n  + brotli-python                   1.1.0  py310hc6cd4ac_1     conda-forge         \n  + certifi                      2024.2.2  pyhd8ed1ab_0        conda-forge         \n  + charset-normalizer              3.3.2  pyhd8ed1ab_0        conda-forge         \n  + colorama                        0.4.6  pyhd8ed1ab_0        conda-forge         \n  + distro                          1.9.0  pyhd8ed1ab_0        conda-forge         \n  + idna                              3.6  pyhd8ed1ab_0        conda-forge         \n  + jsonpointer                       2.4  py310hff52083_3     conda-forge         \n  + libmamba                        1.5.8  had39da4_0          conda-forge         \n  + packaging                        24.0  pyhd8ed1ab_0        conda-forge         \n  + platformdirs                    4.2.0  pyhd8ed1ab_0        conda-forge         \n  + pluggy                          1.4.0  pyhd8ed1ab_0        conda-forge         \n  + pycosat                         0.6.6  py310h2372a71_0     conda-forge         \n  + pycparser                        2.22  pyhd8ed1ab_0        conda-forge         \n  + pysocks                         1.7.1  pyha2e5f31_6        conda-forge         \n  + ruamel.yaml.clib                0.2.8  py310h2372a71_0     conda-forge         \n  + setuptools                     69.5.1  pyhd8ed1ab_0        conda-forge         \n  + truststore                      0.8.0  pyhd8ed1ab_0        conda-forge         \n  + wheel                          0.43.0  pyhd8ed1ab_1        conda-forge         \n  + cffi                           1.16.0  py310h2fee648_0     conda-forge         \n  + jsonpatch                        1.33  pyhd8ed1ab_0        conda-forge         \n  + libmambapy                      1.5.8  py310h39ff949_0     conda-forge         \n  + pip                              24.0  pyhd8ed1ab_0        conda-forge         \n  + ruamel.yaml                    0.18.6  py310h2372a71_0     conda-forge         \n  + tqdm                           4.66.2  pyhd8ed1ab_0        conda-forge         \n  + urllib3                         2.2.1  pyhd8ed1ab_0        conda-forge         \n  + requests                       2.31.0  pyhd8ed1ab_0        conda-forge         \n  + zstandard                      0.22.0  py310h1275a96_0     conda-forge         \n  + conda-package-streaming         0.9.0  pyhd8ed1ab_0        conda-forge         \n  + conda-package-handling          2.2.0  pyh38be061_0        conda-forge         \n  + conda                          24.3.0  py310hff52083_0     conda-forge         \n  + conda-libmamba-solver          24.1.0  pyhd8ed1ab_0        conda-forge         \n  + mamba                           1.5.8  py310h51d5547_0     conda-forge         \n\n  Summary:\n\n  Install: 78 packages\n\n  Total download: 0 B\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\nTransaction starting\nLinking _libgcc_mutex-0.1-conda_forge\nLinking ca-certificates-2024.2.2-hbcca054_0\nLinking ld_impl_linux-64-2.40-h41732ed_0\nLinking libstdcxx-ng-13.2.0-h7e041cc_5\nLinking pybind11-abi-4-hd8ed1ab_3\nLinking python_abi-3.10-4_cp310\nLinking tzdata-2024a-h0c530f3_0\nLinking libgomp-13.2.0-h807b86a_5\nLinking _openmp_mutex-4.5-2_gnu\nLinking libgcc-ng-13.2.0-h807b86a_5\nLinking bzip2-1.0.8-hd590300_5\nLinking c-ares-1.28.1-hd590300_0\nLinking fmt-10.2.1-h00ab1b0_0\nLinking icu-73.2-h59595ed_0\nLinking keyutils-1.6.1-h166bdaf_0\nLinking libev-4.33-hd590300_2\nLinking libffi-3.4.2-h7f98852_5\nLinking libiconv-1.17-hd590300_2\nLinking libnsl-2.0.1-hd590300_0\nLinking libuuid-2.38.1-h0b41bf4_0\nLinking libxcrypt-4.4.36-hd590300_1\nLinking libzlib-1.2.13-hd590300_5\nLinking lz4-c-1.9.4-hcb278e6_0\nLinking lzo-2.10-h516909a_1000\nLinking ncurses-6.4.20240210-h59595ed_0\nLinking openssl-3.2.1-hd590300_1\nLinking reproc-14.2.4.post0-hd590300_1\nLinking xz-5.2.6-h166bdaf_0\nLinking yaml-cpp-0.8.0-h59595ed_0\nLinking libedit-3.1.20191231-he28a2e2_2\nLinking libnghttp2-1.58.0-h47da74e_1\nLinking libsolv-0.7.28-hfc55251_2\nLinking libsqlite-3.45.2-h2797004_0\nLinking libssh2-1.11.0-h0841786_0\nLinking libxml2-2.12.6-h232c23b_1\nLinking readline-8.2-h8228510_1\nLinking reproc-cpp-14.2.4.post0-h59595ed_1\nLinking tk-8.6.13-noxft_h4845f30_101\nLinking zstd-1.5.5-hfc55251_0\nLinking krb5-1.21.2-h659d440_0\nLinking libarchive-3.7.2-h2aa1ff5_1\nLinking python-3.10.14-hd12c33a_0_cpython\nLinking libcurl-8.7.1-hca28451_0\nLinking menuinst-2.0.2-py310hff52083_0\nLinking archspec-0.2.3-pyhd8ed1ab_0\nLinking boltons-24.0.0-pyhd8ed1ab_0\nLinking brotli-python-1.1.0-py310hc6cd4ac_1\nLinking certifi-2024.2.2-pyhd8ed1ab_0\nLinking charset-normalizer-3.3.2-pyhd8ed1ab_0\nLinking colorama-0.4.6-pyhd8ed1ab_0\nLinking distro-1.9.0-pyhd8ed1ab_0\nLinking idna-3.6-pyhd8ed1ab_0\nLinking jsonpointer-2.4-py310hff52083_3\nLinking libmamba-1.5.8-had39da4_0\nLinking packaging-24.0-pyhd8ed1ab_0\nLinking platformdirs-4.2.0-pyhd8ed1ab_0\nLinking pluggy-1.4.0-pyhd8ed1ab_0\nLinking pycosat-0.6.6-py310h2372a71_0\nLinking pycparser-2.22-pyhd8ed1ab_0\nLinking pysocks-1.7.1-pyha2e5f31_6\nLinking ruamel.yaml.clib-0.2.8-py310h2372a71_0\nLinking setuptools-69.5.1-pyhd8ed1ab_0\nLinking truststore-0.8.0-pyhd8ed1ab_0\nLinking wheel-0.43.0-pyhd8ed1ab_1\nLinking cffi-1.16.0-py310h2fee648_0\nLinking jsonpatch-1.33-pyhd8ed1ab_0\nLinking libmambapy-1.5.8-py310h39ff949_0\nLinking pip-24.0-pyhd8ed1ab_0\nLinking ruamel.yaml-0.18.6-py310h2372a71_0\nLinking tqdm-4.66.2-pyhd8ed1ab_0\nLinking urllib3-2.2.1-pyhd8ed1ab_0\nLinking requests-2.31.0-pyhd8ed1ab_0\nLinking zstandard-0.22.0-py310h1275a96_0\nLinking conda-package-streaming-0.9.0-pyhd8ed1ab_0\nLinking conda-package-handling-2.2.0-pyh38be061_0\nLinking conda-24.3.0-py310hff52083_0\nLinking conda-libmamba-solver-24.1.0-pyhd8ed1ab_0\nLinking mamba-1.5.8-py310h51d5547_0\n\nTransaction finished\n\nTo activate this environment, use:\n\n    micromamba activate /home/u19/caparicio/miniforge3\n\nOr to execute a single command in this environment, use:\n\n    micromamba run -p /home/u19/caparicio/miniforge3 mycommand\n\ninstallation finished.\nWARNING:\n    You currently have a PYTHONPATH environment variable set. This may cause\n    unexpected behavior when running the Python interpreter in Miniforge3.\n    For best results, please verify that your PYTHONPATH only points to\n    directories of packages that are compatible with the Python interpreter\n    in Miniforge3: /home/u19/caparicio/miniforge3\nDo you wish to update your shell profile to automatically initialize conda?\nThis will activate conda on startup and change the command prompt when activated.\nIf you'd prefer that conda's base environment not be activated on startup,\n   run the following command when conda is activated:\n\nconda config --set auto_activate_base false\n\nYou can undo this by running `conda init --reverse $SHELL`? [yes|no]\n[no] &gt;&gt;&gt; no\n\nYou have chosen to not have conda modify your shell scripts at all.\nTo activate conda's base environment in your current shell session:\n\neval \"$(/home/u19/caparicio/miniforge3/bin/conda shell.YOUR_SHELL_NAME hook)\" \n\nTo install conda's shell functions for easier access, first activate, then:\n\nconda init\n\nThank you for installing Miniforge3!\n</code></pre></li> </ul>"},{"location":"240726/","title":"26 July 2024","text":""},{"location":"240726/#humann-step-1-scripts","title":"humann step 1 scripts","text":"<p>HUMAnN 3.0</p> <ul> <li> <p>Open the directory containing slurm and .py scripts in the terminal.</p> </li> <li> <p>Rid hidden and unexpected characters from files:</p> </li> </ul> <p>'sed -i 's/\\r$//' humann_step1.slurm'</p> <p>'sed -i 's/\\r$//' humann_step1.py'</p> <ul> <li>Submit the script using the <code>sbatch</code> command: 'sbatch humann_step1.slurm'</li> </ul>"},{"location":"240726/#humann_step1slurm-script","title":"humann_step1.slurm script","text":"<pre><code>#!/bin/bash\n#SBATCH --job-name=humann_step1\n#SBATCH --account=kcooper\n#SBATCH --partition=standard\n#SBATCH --nodes=1\n#SBATCH --ntasks=1\n#SBATCH --cpus-per-task=45\n#SBATCH --time=24:00:00\n#SBATCH --mem-per-cpu=8gb\n#SBATCH --mail-type=ALL\n\nmodule load anaconda/2024.06\nsource ~/.bashrc\nmicromamba activate biobakery3\n\n# Set the directory containing the input files and the output directory\ninput_directory='/xdisk/kcooper/caparicio/09humann'\noutput_directory='/xdisk/kcooper/caparicio/tree-fruit/09humann/output'\nchocophlan_database='/xdisk/kcooper/caparicio/tree-fruit/chocophlan'\nuniref_database='/xdisk/kcooper/caparicio/tree-fruit/uniref'\n\n# Check if the directories exist\nif [ ! -d \"$output_directory\" ]; then\n  mkdir -p \"$output_directory\"\nfi\n\nif [ ! -d \"$chocophlan_database\" ] || [ ! -d \"$uniref_database\" ]; then\n  echo \"Database directories do not exist: $chocophlan_database or $uniref_database\"\n  exit 1\nfi\n\n# Run the Python script\npython3 humann_step1.py \"${input_directory}\" \"${output_directory}\" \"${chocophlan_database}\" \"${uniref_database}\"\n</code></pre>"},{"location":"240726/#humann_step1py-script","title":"humann_step1.py script","text":"<ul> <li>make .py script executable</li> </ul> <p>'dir=\"/xdisk/kcooper/caparicio/tree-fruit/09humann\"'</p> <p>'chmod +x \"$dir\"/*.py'</p> <pre><code>#!/usr/bin/env python3\n\nimport os\nimport sys\nimport subprocess\nfrom concurrent.futures import ThreadPoolExecutor\n\ndef generate_file_list(input_directory):\n    \"\"\"Generate a list of .fastq files in the input directory.\"\"\"\n    return [os.path.join(input_directory, file) for file in os.listdir(input_directory) if file.endswith('.fastq')]\n\ndef run_humann(sample, output_dir, chocophlan_database, uniref_database):\n    \"\"\"Run HUMAnN for a given sample.\"\"\"\n    output_sample_dir = os.path.join(output_dir, os.path.basename(sample).replace('.fastq', ''))\n    os.makedirs(output_sample_dir, exist_ok=True)\n    command = (\n        f\"humann \"\n        f\"--input {sample} \"\n        f\"--output {output_sample_dir} \"\n        f\"--input-format fastq \"\n        f\"--threads 35 \"\n        f\"--nucleotide-database {chocophlan_database} \"\n        f\"--protein-database {uniref_database}\"\n    )\n    try:\n        subprocess.run(command, shell=True, check=True)\n    except subprocess.CalledProcessError as e:\n        print(f\"Error processing sample {sample}: {e}\")\n\ndef main(input_directory, output_directory, chocophlan_database, uniref_database):\n    samples = generate_file_list(input_directory)\n    with ThreadPoolExecutor(max_workers=35) as executor:\n        futures = [executor.submit(run_humann, sample, output_directory, chocophlan_database, uniref_database) for sample in samples]\n        for future in futures:\n            try:\n                future.result()\n            except Exception as e:\n                print(f\"Error in future: {e}\")\n\nif __name__ == \"__main__\":\n    if len(sys.argv) != 5:\n        print(\"Usage: python humann_step1.py &lt;input_directory&gt; &lt;output_directory&gt; &lt;chocophlan_database&gt; &lt;uniref_database&gt;\")\n        sys.exit(1)\n    input_directory = sys.argv[1]\n    output_directory = sys.argv[2]\n    chocophlan_database = sys.argv[3]\n    uniref_database = sys.argv[4]\n    main(input_directory, output_directory, chocophlan_database, uniref_database)\n</code></pre>"},{"location":"240726/#humann-step1-metaphlan-error","title":"humann step1 metaphlan error","text":"<p><pre><code>CRITICAL ERROR: Error executing: /home/u19/member/.micromamba/envs/biobakery3/bin/metaphlan /xdisk/pi/member/tree-fruit/09humann/output/peaches264/peaches264_humann_temp/tmp932ks87e/tmpe5pl6ejs -t rel_ab -o /xdisk/pi/member/tree-fruit/09humann/output/peaches264/peaches264_humann_temp/peaches264_metaphlan_bugs_list.tsv --input_type fastq --bowtie2out /xdisk/pi/member/tree-fruit/09humann/output/peaches264/peaches264_humann_temp/peaches264_metaphlan_bowtie2.txt --nproc 35\n\nError message returned from metaphlan :\nError: Unable to find the mpa_pkl file at: mpa_pklExiting...\n\nRunning metaphlan ........\n</code></pre> Solution: ` metaphlan databases are downloaded in uncompressed and compressed formats. Compressed databases need to be extracted: <pre><code>tar -xf mpa_vJun23_CHOCOPhlAnSGB_202403.tar\n</code></pre></p>"},{"location":"240726/#humann-step-2-draft-scripts","title":"humann step 2 draft scripts","text":""},{"location":"240726/#humann_step2slurm-script","title":"humann_step2.slurm script","text":"<pre><code>#!/bin/bash\n#SBATCH --job-name=humann_step2\n#SBATCH --account=pi\n#SBATCH --partition=standard\n#SBATCH --nodes=1\n#SBATCH --ntasks=1\n#SBATCH --cpus-per-task=35\n#SBATCH --time=24:00:00\n#SBATCH --mem-per-cpu=5gb\n#SBATCH --mail-type=ALL\n\nmodule load anaconda/2024.06\nsource ~/.bashrc\nmicromamba activate biobakery3\n\n# Set the directory containing the input files and the output directory\ninput_directory='/xdisk/pi/member/tree-fruit/09humann/output'\noutput_directory='/xdisk/pi/member/tree-fruit/09humann/output_normalized'\n\n# Check if the output directory exists, if not, create it\nif [ ! -d \"$output_directory\" ]; then\n  mkdir -p \"$output_directory\"\nfi\n\n# Run the Python script\npython3 humann_step2.py \"${input_directory}\" \"${output_directory}\"\n</code></pre>"},{"location":"240726/#humann_step2py-script","title":"humann_step2.py script","text":"<pre><code>#!/usr/bin/env python3\n\nimport os\nimport sys\nimport subprocess\nfrom concurrent.futures import ThreadPoolExecutor\n\ndef generate_file_list(input_directory, suffix='_genefamilies.tsv'):\n    \"\"\"Generate a list of files to be processed in the input directory.\"\"\"\n    return [os.path.join(input_directory, file) for file in os.listdir(input_directory) if file.endswith(suffix)]\n\ndef run_humann_normalization(input_file, output_dir):\n    \"\"\"Run HUMAnN normalization for a given file.\"\"\"\n    sample_name = os.path.basename(input_file).replace('_genefamilies.tsv', '')\n    output_file_relab = os.path.join(output_dir, f\"{sample_name}_genefamilies_relab.tsv\")\n    output_file_metacyc = os.path.join(output_dir, f\"{sample_name}_genefamilies_relab_metacyc.tsv\")\n\n    commands = [\n        f\"humann_renorm_table --input {input_file} --output {output_file_relab} --units relab\",\n        f\"humann_regroup_table --input {output_file_relab} --groups uniref90_to_metacyc --output {output_file_metacyc}\"\n    ]\n\n    for command in commands:\n        try:\n            subprocess.run(command, shell=True, check=True)\n        except subprocess.CalledProcessError as e:\n            print(f\"Error processing file {input_file}: {e}\")\n\ndef main(input_directory, output_directory):\n    files = generate_file_list(input_directory)\n    with ThreadPoolExecutor(max_workers=35) as executor:\n        futures = [executor.submit(run_humann_normalization, file, output_directory) for file in files]\n        for future in futures:\n            try:\n                future.result()\n            except Exception as e:\n                print(f\"Error in future: {e}\")\n\nif __name__ == \"__main__\":\n    if len(sys.argv) != 3:\n        print(\"Usage: python humann_step2.py &lt;input_directory&gt; &lt;output_directory&gt;\")\n        sys.exit(1)\n    input_directory = sys.argv[1]\n    output_directory = sys.argv[2]\n    main(input_directory, output_directory)\n</code></pre>"},{"location":"240726/#ghostkoala-in-the-works","title":"ghostkoala in the works","text":"<ul> <li>kegg db download cost-prohibitive</li> <li>figuring out how to handle large file submissions</li> </ul> <p>GhostKOALA</p> <p>Importing GhostKOALA/KEGG annotations into anvi'o</p> <p>GhostKOALA Annotations</p> <p>ExPASy Translate Tool</p>"},{"location":"240726/#to-do","title":"To do:","text":"<ul> <li>humann steps 2-3</li> <li>ghostkoala</li> <li>cohesive visualizations for kraken2, abricate (incl. vfdb), humann, and ghostkoala</li> </ul>"},{"location":"assets/abricate_install/","title":"Abricate Install Jupyter Notebook","text":"<ul> <li>https://apptainer.org/docs/user/latest/</li> <li>https://biocontainers.pro/tools/abricate</li> <li>https://github.com/tseemann/abricate</li> <li>https://biocontainers-edu.readthedocs.io/en/latest/index.html</li> <li>https://hpcdocs.hpc.arizona.edu/events/workshop_materials/intro_to_containers/</li> <li>https://hpcdocs.hpc.arizona.edu/software/containers/building_containers/#bootstrapping-off-a-local-image</li> </ul> In\u00a0[\u00a0]: Copied! <pre># Update 'cache directory' location if needed\n# - https://hpcdocs.hpc.arizona.edu/software/containers/containers_on_hpc/#sharing-your-containers\nexport APPTAINER_CACHEDIR=/xdisk/kcooper/caparicio/.apptainer\n</pre> # Update 'cache directory' location if needed # - https://hpcdocs.hpc.arizona.edu/software/containers/containers_on_hpc/#sharing-your-containers export APPTAINER_CACHEDIR=/xdisk/kcooper/caparicio/.apptainer In\u00a0[1]: Copied! <pre># Refresh until Apptainer is loaded\napptainer --version\n</pre> # Refresh until Apptainer is loaded apptainer --version <pre>apptainer version 1.3.0-1.el7\n</pre> ### Create container  <pre><code>Bootstrap: docker\nFrom: quay.io/biocontainers/abricate:1.0.1--ha8f3691_2\n\n%post\n    # Set the installation directory\n    export INSTALL_DIR=/xdisk/kcooper/caparici/tree-fruit/08abricate\n    \n    # Update the package lists and install necessary packages\n    apt-get update &amp;&amp; apt-get install -y \\\n        bioperl \\\n        gzip \\\n        libjson-perl \\\n        liblwp-protocol-https-perl \\\n        libpath-tiny-perl \\\n        libtext-csv-perl \\\n        libwww-perl \\\n        ncbi-blast+ \\\n        unzip \\\n        wget \\\n        git &amp;&amp; \\\n    apt-get clean &amp;&amp; \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n    # Clone abricate repository and set up the database\n    git clone https://github.com/tseemann/abricate.git $INSTALL_DIR/abricate &amp;&amp; \\\n    cd $INSTALL_DIR/abricate &amp;&amp; \\\n    ./bin/abricate --setupdb\n\n%runscript\n    # Run abricate with passed arguments\n    $INSTALL_DIR/abricate/bin/abricate \"$@\"\n</code></pre> In\u00a0[8]: Copied! <pre># Confirm working directory \npwd\n</pre> # Confirm working directory  pwd <pre>/xdisk/kcooper/caparicio/tree-fruit/08abricate\n</pre> In\u00a0[11]: Copied! <pre># Rid hidden and unexpected characters from file\nsed -i 's/\\xC2\\xA0/ /g' abricate1_0_1.def\n</pre> # Rid hidden and unexpected characters from file sed -i 's/\\xC2\\xA0/ /g' abricate1_0_1.def In\u00a0[12]: Copied! <pre># build container\napptainer build abricate1_0_1.sif abricate1_0_1.def\n</pre> # build container apptainer build abricate1_0_1.sif abricate1_0_1.def <pre>INFO:    User not listed in /etc/subuid, trying root-mapped namespace\nINFO:    The %post section will be run under fakeroot\nINFO:    Starting build...\nGetting image source signatures\nCopying blob 642efca944a0 skipped: already exists  \nCopying blob bd9ddc54bea9 skipped: already exists  \nCopying blob b73c64b9592d skipped: already exists  \nCopying blob 642efca944a0 skipped: already exists  \nCopying blob bd9ddc54bea9 skipped: already exists  \nCopying blob b73c64b9592d skipped: already exists  \nCopying blob 642efca944a0 skipped: already exists  \nCopying blob bd9ddc54bea9 skipped: already exists  \nCopying blob b73c64b9592d skipped: already exists  \nCopying config 218f0ed75e done   | \nCopying config 218f0ed75e done   | \nCopying config 218f0ed75e done   | \nCopying config 218f0ed75e done   | \nWriting manifest to image destination\n2024/07/19 02:29:12  info unpack layer: sha256:642efca944a099a40fb3c07af9503df633650ab4299bba89f04e2106bfe2d85e\n2024/07/19 02:29:12  info unpack layer: sha256:bd9ddc54bea929a22b334e73e026d4136e5b73f5cc29942896c72e4ece69b13d\n2024/07/19 02:29:12  info unpack layer: sha256:b73c64b9592d11f14d1241eb2566518db1a2bc17063d99f12b3a8c5b83fb273b\nINFO:    Running post scriptlet\n+ export INSTALL_DIR=/xdisk/kcooper/caparici/tree-fruit/08abricate\n+ INSTALL_DIR=/xdisk/kcooper/caparici/tree-fruit/08abricate\n+ apt-get update\n/.post.script: line 5: apt-get: command not found\n+ git clone https://github.com/tseemann/abricate.git /xdisk/kcooper/caparici/tree-fruit/08abricate/abricate\nCloning into '/xdisk/kcooper/caparici/tree-fruit/08abricate/abricate'...\nremote: Enumerating objects: 1235, done.        \nremote: Counting objects: 100% (244/244), done.        \nremote: Compressing objects: 100% (40/40), done.        \nremote: Total 1235 (delta 208), reused 204 (delta 204), pack-reused 991        \nReceiving objects: 100% (1235/1235), 16.22 MiB | 13.59 MiB/s, done.\nResolving deltas: 100% (645/645), done.\n+ cd /xdisk/kcooper/caparici/tree-fruit/08abricate/abricate\n+ ./bin/abricate --setupdb\nRemoving old BLAST indices for /xdisk/kcooper/caparici/tree-fruit/08abricate/abricate/db/card/sequences\nMaking nucl BLAST index for /xdisk/kcooper/caparici/tree-fruit/08abricate/abricate/db/card/sequences\nRemoving old BLAST indices for /xdisk/kcooper/caparici/tree-fruit/08abricate/abricate/db/argannot/sequences\nMaking nucl BLAST index for /xdisk/kcooper/caparici/tree-fruit/08abricate/abricate/db/argannot/sequences\nRemoving old BLAST indices for /xdisk/kcooper/caparici/tree-fruit/08abricate/abricate/db/ecoli_vf/sequences\nMaking nucl BLAST index for /xdisk/kcooper/caparici/tree-fruit/08abricate/abricate/db/ecoli_vf/sequences\nRemoving old BLAST indices for /xdisk/kcooper/caparici/tree-fruit/08abricate/abricate/db/megares/sequences\nMaking nucl BLAST index for /xdisk/kcooper/caparici/tree-fruit/08abricate/abricate/db/megares/sequences\nRemoving old BLAST indices for /xdisk/kcooper/caparici/tree-fruit/08abricate/abricate/db/ecoh/sequences\nMaking nucl BLAST index for /xdisk/kcooper/caparici/tree-fruit/08abricate/abricate/db/ecoh/sequences\nRemoving old BLAST indices for /xdisk/kcooper/caparici/tree-fruit/08abricate/abricate/db/resfinder/sequences\nMaking nucl BLAST index for /xdisk/kcooper/caparici/tree-fruit/08abricate/abricate/db/resfinder/sequences\nRemoving old BLAST indices for /xdisk/kcooper/caparici/tree-fruit/08abricate/abricate/db/plasmidfinder/sequences\nMaking nucl BLAST index for /xdisk/kcooper/caparici/tree-fruit/08abricate/abricate/db/plasmidfinder/sequences\nRemoving old BLAST indices for /xdisk/kcooper/caparici/tree-fruit/08abricate/abricate/db/ncbi/sequences\nMaking nucl BLAST index for /xdisk/kcooper/caparici/tree-fruit/08abricate/abricate/db/ncbi/sequences\nRemoving old BLAST indices for /xdisk/kcooper/caparici/tree-fruit/08abricate/abricate/db/vfdb/sequences\nMaking nucl BLAST index for /xdisk/kcooper/caparici/tree-fruit/08abricate/abricate/db/vfdb/sequences\nDATABASE\tSEQUENCES\tDBTYPE\tDATE\ncard\t2631\tnucl\t2024-Jul-19\nargannot\t2223\tnucl\t2024-Jul-19\necoli_vf\t2701\tnucl\t2024-Jul-19\nmegares\t6635\tnucl\t2024-Jul-19\necoh\t597\tnucl\t2024-Jul-19\nresfinder\t3077\tnucl\t2024-Jul-19\nplasmidfinder\t460\tnucl\t2024-Jul-19\nncbi\t5386\tnucl\t2024-Jul-19\nvfdb\t2597\tnucl\t2024-Jul-19\nINFO:    Adding runscript\nINFO:    Creating SIF file...\nINFO:    Build complete: abricate1_0_1.sif\n</pre> In\u00a0[13]: Copied! <pre># Verify database setup\napptainer exec abricate1_0_1.sif abricate --list\n</pre> # Verify database setup apptainer exec abricate1_0_1.sif abricate --list <pre>DATABASE\tSEQUENCES\tDBTYPE\tDATE\necoh\t597\tnucl\t2023-Nov-4\nvfdb\t2597\tnucl\t2023-Nov-4\nargannot\t2223\tnucl\t2023-Nov-4\necoli_vf\t2701\tnucl\t2023-Nov-4\ncard\t2631\tnucl\t2023-Nov-4\nncbi\t5386\tnucl\t2023-Nov-4\nmegares\t6635\tnucl\t2023-Nov-4\nplasmidfinder\t460\tnucl\t2023-Nov-4\nresfinder\t3077\tnucl\t2023-Nov-4\n</pre>"},{"location":"assets/abricate_run/","title":"Abricate Run Jupyter Notebook","text":"<p>https://apptainer.org/docs/user/latest/ https://github.com/tseemann/abricate https://hpcdocs.hpc.arizona.edu/software/containers/using_containers/</p> <p>Run Time = 24 ; Core count on a single node = 35 ; Memory per core = 5</p> In\u00a0[2]: Copied! <pre># Refresh until Apptainer is loaded\n!apptainer --version\n</pre> # Refresh until Apptainer is loaded !apptainer --version <pre>apptainer version 1.3.0-1.el7\r\n</pre> In\u00a0[3]: Copied! <pre># Chunk 1: Import necessary libraries\nimport os\nfrom concurrent.futures import ThreadPoolExecutor, as_completed\n</pre> # Chunk 1: Import necessary libraries import os from concurrent.futures import ThreadPoolExecutor, as_completed In\u00a0[4]: Copied! <pre># Chunk 2: Define a function to list all .fasta files\ndef list_fasta_files(directory):\n    return [os.path.join(directory, f) for f in os.listdir(directory) if f.endswith('.fasta')]\n</pre> # Chunk 2: Define a function to list all .fasta files def list_fasta_files(directory):     return [os.path.join(directory, f) for f in os.listdir(directory) if f.endswith('.fasta')] In\u00a0[5]: Copied! <pre># Chunk 3: Define a function to run abricate on a single file for all databases\ndef run_abricate(file_path):\n    databases = ['ncbi', 'card', 'resfinder', 'argannot', 'megares', 'vfdb']\n    for db in databases:\n        output_file = f\"{file_path}_{db}.tab\"\n        command = f\"apptainer exec abricate.sif abricate --db {db} {file_path} &gt; {output_file}\"\n        os.system(command)\n</pre> # Chunk 3: Define a function to run abricate on a single file for all databases def run_abricate(file_path):     databases = ['ncbi', 'card', 'resfinder', 'argannot', 'megares', 'vfdb']     for db in databases:         output_file = f\"{file_path}_{db}.tab\"         command = f\"apptainer exec abricate.sif abricate --db {db} {file_path} &gt; {output_file}\"         os.system(command) In\u00a0[6]: Copied! <pre># Chunk 4: Main processing logic using ThreadPoolExecutor\ndef process_files_in_parallel(file_paths):\n    with ThreadPoolExecutor(max_workers=4) as executor:\n        future_to_file = {executor.submit(run_abricate, file_path): file_path for file_path in file_paths}\n        for future in as_completed(future_to_file):\n            file_path = future_to_file[future]\n            try:\n                future.result()\n                print(f\"Processing completed for {file_path}\")\n            except Exception as exc:\n                print(f\"Error for {file_path}: {exc}\")\n</pre> # Chunk 4: Main processing logic using ThreadPoolExecutor def process_files_in_parallel(file_paths):     with ThreadPoolExecutor(max_workers=4) as executor:         future_to_file = {executor.submit(run_abricate, file_path): file_path for file_path in file_paths}         for future in as_completed(future_to_file):             file_path = future_to_file[future]             try:                 future.result()                 print(f\"Processing completed for {file_path}\")             except Exception as exc:                 print(f\"Error for {file_path}: {exc}\") In\u00a0[7]: Copied! <pre># Chunk 5: Main function to orchestrate the processing\ndef main(directory):\n    fasta_files = list_fasta_files(directory)\n    process_files_in_parallel(fasta_files)\n</pre> # Chunk 5: Main function to orchestrate the processing def main(directory):     fasta_files = list_fasta_files(directory)     process_files_in_parallel(fasta_files) In\u00a0[8]: Copied! <pre># Chunk 6: Run the main function with the directory containing your .fasta files\n# (If job does not finish within time limits, move finished files to another directory before restarting)\ndirectory_path = '/xdisk/kcooper/caparicio/tree-fruit/08abricate'\nmain(directory_path)\n</pre> # Chunk 6: Run the main function with the directory containing your .fasta files # (If job does not finish within time limits, move finished files to another directory before restarting) directory_path = '/xdisk/kcooper/caparicio/tree-fruit/08abricate' main(directory_path) <pre>Using nucl database ncbi:  5386 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach192_contig.fasta\nUsing nucl database ncbi:  5386 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/apple338_contig.fasta\nUsing nucl database ncbi:  5386 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach304_contig.fasta\nUsing nucl database ncbi:  5386 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/apple341_contig.fasta\nFound 9 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach304_contig.fasta\nTip: found a bug in abricate? Post it at https://github.com/tseemann/abricate/issues.\nDone.\nUsing nucl database card:  2631 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach304_contig.fasta\nFound 9 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach304_contig.fasta\nTip: it's important to realise abricate uses DNA matching, not AA.\nDone.\nUsing nucl database resfinder:  3077 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach304_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach192_contig.fasta\nTip: the --fofn option allows you to feed in a big list of files to run on.\nDone.\nUsing nucl database card:  2631 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach192_contig.fasta\nFound 8 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach304_contig.fasta\nTip: have a suggestion for abricate? Tell me at https://github.com/tseemann/abricate/issues\nDone.\nUsing nucl database argannot:  2223 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach304_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach192_contig.fasta\nTip: the abricate manual is at https://github.com/tseemann/abricate/blob/master/README.md\nDone.\nUsing nucl database resfinder:  3077 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach192_contig.fasta\nFound 11 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach304_contig.fasta\nTip: you can use the --summary option to combine reports in a presence/absence matrix.\nDone.\nUsing nucl database megares:  6635 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach304_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach192_contig.fasta\nTip: the --fofn option allows you to feed in a big list of files to run on.\nDone.\nUsing nucl database argannot:  2223 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach192_contig.fasta\nFound 10 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach304_contig.fasta\nTip: found a bug in abricate? Post it at https://github.com/tseemann/abricate/issues.\nDone.\nUsing nucl database vfdb:  2597 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach304_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach192_contig.fasta\nTip: did you know? abricate was named after 'A'nti 'B'acterial 'R'esistiance\nDone.\nUsing nucl database megares:  6635 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach192_contig.fasta\nFound 8 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach304_contig.fasta\nTip: the abricate manual is at https://github.com/tseemann/abricate/blob/master/README.md\nDone.\n</pre> <pre>Processing completed for /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach304_contig.fasta\n</pre> <pre>Using nucl database ncbi:  5386 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach284_contig.fasta\nFound 1 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach284_contig.fasta\nTip: it's important to realise abricate uses DNA matching, not AA.\nDone.\nUsing nucl database card:  2631 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach284_contig.fasta\nFound 1 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach284_contig.fasta\nTip: have a suggestion for abricate? Tell me at https://github.com/tseemann/abricate/issues\nDone.\nUsing nucl database resfinder:  3077 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach284_contig.fasta\nFound 1 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach284_contig.fasta\nTip: it's important to realise abricate uses DNA matching, not AA.\nDone.\nUsing nucl database argannot:  2223 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach284_contig.fasta\nFound 1 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach284_contig.fasta\nTip: remember that abricate is unable to find AMR-mediated SNPs.\nDone.\nUsing nucl database megares:  6635 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach284_contig.fasta\nFound 1 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach284_contig.fasta\nTip: remember that abricate is unable to find AMR-mediated SNPs.\nDone.\nUsing nucl database vfdb:  2597 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach284_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach284_contig.fasta\nTip: found a bug in abricate? Post it at https://github.com/tseemann/abricate/issues.\nDone.\n</pre> <pre>Processing completed for /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach284_contig.fasta\n</pre> <pre>Using nucl database ncbi:  5386 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange415_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach192_contig.fasta\nTip: it's important to realise abricate uses DNA matching, not AA.\nDone.\nUsing nucl database vfdb:  2597 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach192_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange415_contig.fasta\nTip: did you know? abricate was named after 'A'nti 'B'acterial 'R'esistiance\nDone.\nUsing nucl database card:  2631 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange415_contig.fasta\nFound 3 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach192_contig.fasta\nTip: found a bug in abricate? Post it at https://github.com/tseemann/abricate/issues.\nDone.\n</pre> <pre>Processing completed for /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach192_contig.fasta\n</pre> <pre>Using nucl database ncbi:  5386 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange412_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange415_contig.fasta\nTip: the abricate manual is at https://github.com/tseemann/abricate/blob/master/README.md\nDone.\nUsing nucl database resfinder:  3077 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange415_contig.fasta\nFound 4 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/apple338_contig.fasta\nTip: the --fofn option allows you to feed in a big list of files to run on.\nDone.\nUsing nucl database card:  2631 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/apple338_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange415_contig.fasta\nTip: found a bug in abricate? Post it at https://github.com/tseemann/abricate/issues.\nDone.\nUsing nucl database argannot:  2223 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange415_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange412_contig.fasta\nTip: you can use the --summary option to combine reports in a presence/absence matrix.\nDone.\nUsing nucl database card:  2631 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange412_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange415_contig.fasta\nTip: the --fofn option allows you to feed in a big list of files to run on.\nDone.\nUsing nucl database megares:  6635 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange415_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange412_contig.fasta\nTip: abricate can also find virulence factors; use --list to see all supported databases.\nDone.\nUsing nucl database resfinder:  3077 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange412_contig.fasta\nFound 22 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/apple341_contig.fasta\nTip: have a suggestion for abricate? Tell me at https://github.com/tseemann/abricate/issues\nDone.\nUsing nucl database card:  2631 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/apple341_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange415_contig.fasta\nTip: the --fofn option allows you to feed in a big list of files to run on.\nDone.\nUsing nucl database vfdb:  2597 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange415_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange412_contig.fasta\nTip: the abricate manual is at https://github.com/tseemann/abricate/blob/master/README.md\nDone.\nUsing nucl database argannot:  2223 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange412_contig.fasta\nFound 6 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange415_contig.fasta\nTip: the abricate manual is at https://github.com/tseemann/abricate/blob/master/README.md\nDone.\n</pre> <pre>Processing completed for /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange415_contig.fasta\n</pre> <pre>Using nucl database ncbi:  5386 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange363_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange412_contig.fasta\nTip: the abricate manual is at https://github.com/tseemann/abricate/blob/master/README.md\nDone.\nUsing nucl database megares:  6635 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange412_contig.fasta\nFound 10 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/apple338_contig.fasta\nTip: did you know? abricate was named after 'A'nti 'B'acterial 'R'esistiance\nDone.\nUsing nucl database resfinder:  3077 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/apple338_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange363_contig.fasta\nTip: you can use the --summary option to combine reports in a presence/absence matrix.\nDone.\nUsing nucl database card:  2631 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange363_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange363_contig.fasta\nTip: the --fofn option allows you to feed in a big list of files to run on.\nDone.\nUsing nucl database resfinder:  3077 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange363_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange363_contig.fasta\nTip: did you know? abricate was named after 'A'nti 'B'acterial 'R'esistiance\nDone.\nUsing nucl database argannot:  2223 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange363_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange363_contig.fasta\nTip: it's important to realise abricate uses DNA matching, not AA.\nDone.\nUsing nucl database megares:  6635 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange363_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange412_contig.fasta\nTip: abricate can also find virulence factors; use --list to see all supported databases.\nDone.\nUsing nucl database vfdb:  2597 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange412_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange363_contig.fasta\nTip: remember that abricate is unable to find AMR-mediated SNPs.\nDone.\nUsing nucl database vfdb:  2597 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange363_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange363_contig.fasta\nTip: you can use the --summary option to combine reports in a presence/absence matrix.\nDone.\n</pre> <pre>Processing completed for /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange363_contig.fasta\n</pre> <pre>Using nucl database ncbi:  5386 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach244_contis.fasta\nFound 89 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/apple341_contig.fasta\nTip: found a bug in abricate? Post it at https://github.com/tseemann/abricate/issues.\nDone.\nUsing nucl database resfinder:  3077 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/apple341_contig.fasta\nFound 3 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/apple338_contig.fasta\nTip: the abricate manual is at https://github.com/tseemann/abricate/blob/master/README.md\nDone.\nUsing nucl database argannot:  2223 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/apple338_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange412_contig.fasta\nTip: you can use the --summary option to combine reports in a presence/absence matrix.\nDone.\n</pre> <pre>Processing completed for /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange412_contig.fasta\n</pre> <pre>Using nucl database ncbi:  5386 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange370_contigs.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange370_contigs.fasta\nTip: did you know? abricate was named after 'A'nti 'B'acterial 'R'esistiance\nDone.\nUsing nucl database card:  2631 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange370_contigs.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange370_contigs.fasta\nTip: found a bug in abricate? Post it at https://github.com/tseemann/abricate/issues.\nDone.\nUsing nucl database resfinder:  3077 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange370_contigs.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach244_contis.fasta\nTip: did you know? abricate was named after 'A'nti 'B'acterial 'R'esistiance\nDone.\nUsing nucl database card:  2631 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach244_contis.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange370_contigs.fasta\nTip: abricate can also find virulence factors; use --list to see all supported databases.\nDone.\nUsing nucl database argannot:  2223 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange370_contigs.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange370_contigs.fasta\nTip: it's important to realise abricate uses DNA matching, not AA.\nDone.\nUsing nucl database megares:  6635 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange370_contigs.fasta\nFound 2 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach244_contis.fasta\nTip: did you know? abricate was named after 'A'nti 'B'acterial 'R'esistiance\nDone.\nUsing nucl database resfinder:  3077 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach244_contis.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange370_contigs.fasta\nTip: you can use the --summary option to combine reports in a presence/absence matrix.\nDone.\nUsing nucl database vfdb:  2597 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange370_contigs.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange370_contigs.fasta\nTip: the --fofn option allows you to feed in a big list of files to run on.\nDone.\n</pre> <pre>Processing completed for /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange370_contigs.fasta\n</pre> <pre>Using nucl database ncbi:  5386 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach254_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach244_contis.fasta\nTip: did you know? abricate was named after 'A'nti 'B'acterial 'R'esistiance\nDone.\nUsing nucl database argannot:  2223 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach244_contis.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach244_contis.fasta\nTip: abricate can also find virulence factors; use --list to see all supported databases.\nDone.\nUsing nucl database megares:  6635 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach244_contis.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach254_contig.fasta\nTip: did you know? abricate was named after 'A'nti 'B'acterial 'R'esistiance\nDone.\nUsing nucl database card:  2631 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach254_contig.fasta\nFound 3 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/apple338_contig.fasta\nTip: abricate can also find virulence factors; use --list to see all supported databases.\nDone.\nUsing nucl database megares:  6635 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/apple338_contig.fasta\nFound 3 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach254_contig.fasta\nTip: remember that abricate is unable to find AMR-mediated SNPs.\nDone.\nUsing nucl database resfinder:  3077 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach254_contig.fasta\nFound 17 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/apple341_contig.fasta\nTip: you can use the --summary option to combine reports in a presence/absence matrix.\nDone.\nUsing nucl database argannot:  2223 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/apple341_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach254_contig.fasta\nTip: have a suggestion for abricate? Tell me at https://github.com/tseemann/abricate/issues\nDone.\nUsing nucl database argannot:  2223 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach254_contig.fasta\nFound 2 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach244_contis.fasta\nTip: did you know? abricate was named after 'A'nti 'B'acterial 'R'esistiance\nDone.\nUsing nucl database vfdb:  2597 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach244_contis.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach254_contig.fasta\nTip: it's important to realise abricate uses DNA matching, not AA.\nDone.\nUsing nucl database megares:  6635 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach254_contig.fasta\nFound 19 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach244_contis.fasta\nTip: did you know? abricate was named after 'A'nti 'B'acterial 'R'esistiance\nDone.\n</pre> <pre>Processing completed for /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach244_contis.fasta\n</pre> <pre>Using nucl database ncbi:  5386 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange400_contig.fasta\nFound 3 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach254_contig.fasta\nTip: found a bug in abricate? Post it at https://github.com/tseemann/abricate/issues.\nDone.\nUsing nucl database vfdb:  2597 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach254_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange400_contig.fasta\nTip: it's important to realise abricate uses DNA matching, not AA.\nDone.\nUsing nucl database card:  2631 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange400_contig.fasta\nFound 19 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach254_contig.fasta\nTip: remember that abricate is unable to find AMR-mediated SNPs.\nDone.\n</pre> <pre>Processing completed for /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach254_contig.fasta\n</pre> <pre>Using nucl database ncbi:  5386 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange403_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange400_contig.fasta\nTip: have a suggestion for abricate? Tell me at https://github.com/tseemann/abricate/issues\nDone.\nUsing nucl database resfinder:  3077 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange400_contig.fasta\nFound 20 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/apple341_contig.fasta\nTip: you can use the --summary option to combine reports in a presence/absence matrix.\nDone.\nUsing nucl database megares:  6635 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/apple341_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange400_contig.fasta\nTip: remember that abricate is unable to find AMR-mediated SNPs.\nDone.\nUsing nucl database argannot:  2223 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange400_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange400_contig.fasta\nTip: did you know? abricate was named after 'A'nti 'B'acterial 'R'esistiance\nDone.\nUsing nucl database megares:  6635 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange400_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange403_contig.fasta\nTip: it's important to realise abricate uses DNA matching, not AA.\nDone.\nUsing nucl database card:  2631 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange403_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange400_contig.fasta\nTip: did you know? abricate was named after 'A'nti 'B'acterial 'R'esistiance\nDone.\nUsing nucl database vfdb:  2597 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange400_contig.fasta\nFound 1 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange403_contig.fasta\nTip: you can use the --summary option to combine reports in a presence/absence matrix.\nDone.\nUsing nucl database resfinder:  3077 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange403_contig.fasta\nFound 11 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/apple338_contig.fasta\nTip: it's important to realise abricate uses DNA matching, not AA.\nDone.\nUsing nucl database vfdb:  2597 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/apple338_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange400_contig.fasta\nTip: the abricate manual is at https://github.com/tseemann/abricate/blob/master/README.md\nDone.\n</pre> <pre>Processing completed for /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange400_contig.fasta\n</pre> <pre>Using nucl database ncbi:  5386 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange418_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange403_contig.fasta\nTip: the --fofn option allows you to feed in a big list of files to run on.\nDone.\nUsing nucl database argannot:  2223 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange403_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange418_contig.fasta\nTip: the --fofn option allows you to feed in a big list of files to run on.\nDone.\nUsing nucl database card:  2631 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange418_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange403_contig.fasta\nTip: you can use the --summary option to combine reports in a presence/absence matrix.\nDone.\nUsing nucl database megares:  6635 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange403_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange418_contig.fasta\nTip: have a suggestion for abricate? Tell me at https://github.com/tseemann/abricate/issues\nDone.\nUsing nucl database resfinder:  3077 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange418_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange418_contig.fasta\nTip: the abricate manual is at https://github.com/tseemann/abricate/blob/master/README.md\nDone.\nUsing nucl database argannot:  2223 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange418_contig.fasta\nFound 33 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/apple338_contig.fasta\nTip: the --fofn option allows you to feed in a big list of files to run on.\nDone.\n</pre> <pre>Processing completed for /xdisk/kcooper/caparicio/tree-fruit/08abricate/apple338_contig.fasta\n</pre> <pre>Using nucl database ncbi:  5386 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach205_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach205_contig.fasta\nTip: remember that abricate is unable to find AMR-mediated SNPs.\nDone.\nUsing nucl database card:  2631 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach205_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach205_contig.fasta\nTip: remember that abricate is unable to find AMR-mediated SNPs.\nDone.\nUsing nucl database resfinder:  3077 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach205_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange418_contig.fasta\nTip: you can use the --summary option to combine reports in a presence/absence matrix.\nDone.\nUsing nucl database megares:  6635 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange418_contig.fasta\nFound 1 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange403_contig.fasta\nTip: found a bug in abricate? Post it at https://github.com/tseemann/abricate/issues.\nDone.\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach205_contig.fasta\nTip: you can use the --summary option to combine reports in a presence/absence matrix.\nDone.\nUsing nucl database vfdb:  2597 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange403_contig.fasta\nUsing nucl database argannot:  2223 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach205_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach205_contig.fasta\nTip: the abricate manual is at https://github.com/tseemann/abricate/blob/master/README.md\nDone.\nUsing nucl database megares:  6635 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach205_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach205_contig.fasta\nTip: it's important to realise abricate uses DNA matching, not AA.\nDone.\nUsing nucl database vfdb:  2597 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach205_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach205_contig.fasta\nTip: have a suggestion for abricate? Tell me at https://github.com/tseemann/abricate/issues\nDone.\n</pre> <pre>Processing completed for /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach205_contig.fasta\n</pre> <pre>Using nucl database ncbi:  5386 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange347_contig.fasta\nFound 2 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange403_contig.fasta\nTip: abricate can also find virulence factors; use --list to see all supported databases.\nDone.\n</pre> <pre>Processing completed for /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange403_contig.fasta\n</pre> <pre>Using nucl database ncbi:  5386 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange382_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange418_contig.fasta\nTip: the abricate manual is at https://github.com/tseemann/abricate/blob/master/README.md\nDone.\nUsing nucl database vfdb:  2597 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange418_contig.fasta\nFound 103 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/apple341_contig.fasta\nTip: remember that abricate is unable to find AMR-mediated SNPs.\nDone.\nUsing nucl database vfdb:  2597 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/apple341_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange347_contig.fasta\nTip: it's important to realise abricate uses DNA matching, not AA.\nDone.\nUsing nucl database card:  2631 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange347_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange382_contig.fasta\nTip: the --fofn option allows you to feed in a big list of files to run on.\nDone.\nUsing nucl database card:  2631 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange382_contig.fasta\nFound 9 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange418_contig.fasta\nTip: found a bug in abricate? Post it at https://github.com/tseemann/abricate/issues.\nDone.\n</pre> <pre>Processing completed for /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange418_contig.fasta\n</pre> <pre>Using nucl database ncbi:  5386 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach252_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange382_contig.fasta\nTip: remember that abricate is unable to find AMR-mediated SNPs.\nDone.\nUsing nucl database resfinder:  3077 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange382_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach252_contig.fasta\nTip: abricate can also find virulence factors; use --list to see all supported databases.\nDone.\nUsing nucl database card:  2631 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach252_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange347_contig.fasta\nTip: have a suggestion for abricate? Tell me at https://github.com/tseemann/abricate/issues\nDone.\nUsing nucl database resfinder:  3077 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange347_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach252_contig.fasta\nTip: the --fofn option allows you to feed in a big list of files to run on.\nDone.\nUsing nucl database resfinder:  3077 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach252_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange382_contig.fasta\nTip: it's important to realise abricate uses DNA matching, not AA.\nDone.\nUsing nucl database argannot:  2223 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange382_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach252_contig.fasta\nTip: you can use the --summary option to combine reports in a presence/absence matrix.\nDone.\nUsing nucl database argannot:  2223 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach252_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange382_contig.fasta\nTip: the abricate manual is at https://github.com/tseemann/abricate/blob/master/README.md\nDone.\nUsing nucl database megares:  6635 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange382_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach252_contig.fasta\nTip: abricate can also find virulence factors; use --list to see all supported databases.\nDone.\nUsing nucl database megares:  6635 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach252_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange347_contig.fasta\nTip: abricate can also find virulence factors; use --list to see all supported databases.\nDone.\nUsing nucl database argannot:  2223 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange347_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach252_contig.fasta\nTip: abricate can also find virulence factors; use --list to see all supported databases.\nDone.\nUsing nucl database vfdb:  2597 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach252_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange382_contig.fasta\nTip: remember that abricate is unable to find AMR-mediated SNPs.\nDone.\nUsing nucl database vfdb:  2597 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange382_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange347_contig.fasta\nTip: the --fofn option allows you to feed in a big list of files to run on.\nDone.\nUsing nucl database megares:  6635 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange347_contig.fasta\nFound 311 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/apple341_contig.fasta\nTip: the --fofn option allows you to feed in a big list of files to run on.\nDone.\n</pre> <pre>Processing completed for /xdisk/kcooper/caparicio/tree-fruit/08abricate/apple341_contig.fasta\n</pre> <pre>Using nucl database ncbi:  5386 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange371_contig.fasta\nFound 10 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach252_contig.fasta\nTip: you can use the --summary option to combine reports in a presence/absence matrix.\nDone.\n</pre> <pre>Processing completed for /xdisk/kcooper/caparicio/tree-fruit/08abricate/peach252_contig.fasta\n</pre> <pre>Using nucl database ncbi:  5386 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange402_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange382_contig.fasta\nTip: the --fofn option allows you to feed in a big list of files to run on.\nDone.\n</pre> <pre>Processing completed for /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange382_contig.fasta\n</pre> <pre>Using nucl database ncbi:  5386 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange365_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange371_contig.fasta\nTip: the abricate manual is at https://github.com/tseemann/abricate/blob/master/README.md\nDone.\nUsing nucl database card:  2631 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange371_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange402_contig.fasta\nTip: the abricate manual is at https://github.com/tseemann/abricate/blob/master/README.md\nDone.\nUsing nucl database card:  2631 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange402_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange365_contig.fasta\nTip: remember that abricate is unable to find AMR-mediated SNPs.\nDone.\nUsing nucl database card:  2631 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange365_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange402_contig.fasta\nTip: remember that abricate is unable to find AMR-mediated SNPs.\nDone.\nUsing nucl database resfinder:  3077 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange402_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange371_contig.fasta\nTip: found a bug in abricate? Post it at https://github.com/tseemann/abricate/issues.\nDone.\nUsing nucl database resfinder:  3077 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange371_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange365_contig.fasta\nTip: remember that abricate is unable to find AMR-mediated SNPs.\nDone.\nUsing nucl database resfinder:  3077 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange365_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange347_contig.fasta\nTip: you can use the --summary option to combine reports in a presence/absence matrix.\nDone.\nUsing nucl database vfdb:  2597 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange347_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange402_contig.fasta\nTip: you can use the --summary option to combine reports in a presence/absence matrix.\nDone.\nUsing nucl database argannot:  2223 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange402_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange365_contig.fasta\nTip: you can use the --summary option to combine reports in a presence/absence matrix.\nDone.\nUsing nucl database argannot:  2223 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange365_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange371_contig.fasta\nTip: the abricate manual is at https://github.com/tseemann/abricate/blob/master/README.md\nDone.\nUsing nucl database argannot:  2223 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange371_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange402_contig.fasta\nTip: you can use the --summary option to combine reports in a presence/absence matrix.\nDone.\nUsing nucl database megares:  6635 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange402_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange365_contig.fasta\nTip: have a suggestion for abricate? Tell me at https://github.com/tseemann/abricate/issues\nDone.\nUsing nucl database megares:  6635 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange365_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange371_contig.fasta\nTip: it's important to realise abricate uses DNA matching, not AA.\nDone.\nUsing nucl database megares:  6635 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange371_contig.fasta\nFound 1 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange347_contig.fasta\nTip: found a bug in abricate? Post it at https://github.com/tseemann/abricate/issues.\nDone.\n</pre> <pre>Processing completed for /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange347_contig.fasta\n</pre> <pre>Found 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange402_contig.fasta\nTip: it's important to realise abricate uses DNA matching, not AA.\nDone.\nUsing nucl database vfdb:  2597 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange402_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange365_contig.fasta\nTip: you can use the --summary option to combine reports in a presence/absence matrix.\nDone.\nUsing nucl database vfdb:  2597 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange365_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange371_contig.fasta\nTip: you can use the --summary option to combine reports in a presence/absence matrix.\nDone.\nUsing nucl database vfdb:  2597 sequences -  2023-Nov-4\nProcessing: /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange371_contig.fasta\nFound 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange365_contig.fasta\nTip: the --fofn option allows you to feed in a big list of files to run on.\nDone.\n</pre> <pre>Processing completed for /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange365_contig.fasta\n</pre> <pre>Found 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange402_contig.fasta\nTip: have a suggestion for abricate? Tell me at https://github.com/tseemann/abricate/issues\nDone.\n</pre> <pre>Processing completed for /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange402_contig.fasta\nProcessing completed for /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange371_contig.fasta\n</pre> <pre>Found 0 genes in /xdisk/kcooper/caparicio/tree-fruit/08abricate/orange371_contig.fasta\nTip: found a bug in abricate? Post it at https://github.com/tseemann/abricate/issues.\nDone.\n</pre> In\u00a0[13]: Copied! <pre># Chunk 7\nimport glob\n</pre> # Chunk 7 import glob In\u00a0[14]: Copied! <pre># Chunk 8: Define a Function to Summarize Results\ndef summarize_abricate_results(directory):\n    # Assuming the naming convention is {sample_name}_{database}.tab\n    # and you want to summarize across all such files\n    files = glob.glob(f\"{directory}/*_*.tab\")  # This matches all files ending with _database.tab\n    summary_file = f\"{directory}/summary.tab\"\n    summary_csv = f\"{directory}/summary.csv\"\n    \n    # Joining files with spaces for the command\n    files_str = \" \".join(files)\n    \n    # Summarize results into a tab file\n    summarize_command = f\"apptainer exec abricate.sif abricate --summary {files_str} &gt; {summary_file}\"\n    os.system(summarize_command)\n    \n    # Convert summary to CSV for Phyloseq\n    summarize_csv_command = f\"apptainer exec abricate.sif abricate --summary --csv {files_str} &gt; {summary_csv}\"\n    os.system(summarize_csv_command)\n    \n    print(\"Summarization and CSV conversion completed.\")\n</pre> # Chunk 8: Define a Function to Summarize Results def summarize_abricate_results(directory):     # Assuming the naming convention is {sample_name}_{database}.tab     # and you want to summarize across all such files     files = glob.glob(f\"{directory}/*_*.tab\")  # This matches all files ending with _database.tab     summary_file = f\"{directory}/summary.tab\"     summary_csv = f\"{directory}/summary.csv\"          # Joining files with spaces for the command     files_str = \" \".join(files)          # Summarize results into a tab file     summarize_command = f\"apptainer exec abricate.sif abricate --summary {files_str} &gt; {summary_file}\"     os.system(summarize_command)          # Convert summary to CSV for Phyloseq     summarize_csv_command = f\"apptainer exec abricate.sif abricate --summary --csv {files_str} &gt; {summary_csv}\"     os.system(summarize_csv_command)          print(\"Summarization and CSV conversion completed.\") In\u00a0[16]: Copied! <pre># Chunk 9: Call the Summarization Function\nsummarize_abricate_results(directory_path)\n</pre> # Chunk 9: Call the Summarization Function summarize_abricate_results(directory_path) <pre>Summarization and CSV conversion completed.\n</pre>"},{"location":"assets/apple_assembly/","title":"Apple metaSPAdes Assembly Jupyter Notebook","text":"<ul> <li>SPAdes Assembly Toolkit https://ablab.github.io/spades/</li> </ul> <p>Run Time = 48 ; Core count on a single node = 64 ; Memory per core = 20</p> In\u00a0[1]: Copied! <pre>module load spades\n</pre> module load spades In\u00a0[2]: Copied! <pre>cd /xdisk/kcooper/caparicio/tree-fruit/\n</pre> cd /xdisk/kcooper/caparicio/tree-fruit/ In\u00a0[3]: Copied! <pre>pwd\n</pre> pwd <pre>/xdisk/kcooper/caparicio/tree-fruit\n</pre> In\u00a0[\u00a0]: Copied! <pre>spades.py --meta \\\n-1 01c_fastp_reads/apples313_1.trimmed.fastq \\\n-2 01c_fastp_reads/apples313_2.trimmed.fastq \\\n-k 21,33,55,77 \\\n-o 02_assembly/apples313\n</pre> spades.py --meta \\ -1 01c_fastp_reads/apples313_1.trimmed.fastq \\ -2 01c_fastp_reads/apples313_2.trimmed.fastq \\ -k 21,33,55,77 \\ -o 02_assembly/apples313 In\u00a0[\u00a0]: Copied! <pre>files1=(01c_fastp_reads/*apples*_1.trimmed.fastq)\n\nfor f1 in \"${files1[@]}\"; do\n    f2=\"${f1/_1.trimmed.fastq/_2.trimmed.fastq}\" # Constructs the path to the reverse read file\n    sample_name=$(basename \"$f1\" \"_1.trimmed.fastq\") # Extracts the sample name\n    output_dir=\"02_assembly/${sample_name}\" # Specifies the output directory based on the sample name\n\n    # Ensure a clean start by checking and cleaning any previous run data in the output directory\n    if [ \"$(ls -A $output_dir)\" ]; then\n        echo \"Output directory $output_dir is not empty. Cleaning up...\"\n        rm -rf ${output_dir:?}/{,.[!.],..?}* # This attempts to remove all files, including hidden ones\n        # Verify clean-up success\n        if [ \"$(ls -A $output_dir)\" ]; then\n            echo \"Failed to clean the directory, attempting again...\"\n            rm -rf ${output_dir:?}/{,.[!.],..?}*\n            # Final verification\n            if [ \"$(ls -A $output_dir)\" ]; then\n                echo \"Critical error: Output directory $output_dir cannot be cleaned.\"\n                exit 1 # Exit if still not clean to prevent SPAdes error\n            fi\n        fi\n    else\n        echo \"Creating output directory $output_dir\"\n        mkdir -p \"$output_dir\"\n    fi\n    \n    # Move or backup the old log file if not resuming\n    if [ -f \"${output_dir}/spades_apple.log\" ]; then\n        mv \"${output_dir}/spades_apple.log\" \"${output_dir}/spades_apple.log.backup\"\n    fi\n\n    # Creates the temporary directory only after successful cleaning verification\n    mkdir -p \"${output_dir}/tmp\" \n    temp_dir=\"${output_dir}/tmp\" # Specifies a temporary directory for SPAdes processing within the output directory\n\n    # Construct the initial SPAdes command\n    cmd=\"spades.py --meta -k 21,33,55,77 -o $output_dir --tmp-dir $temp_dir -1 $f1 -2 $f2\"\n    \n    # If a previous SPAdes log exists, modify the command to resume from the last checkpoint\n    if [ -f \"${output_dir}/spades_apple.log\" ]; then\n        echo \"Attempting to resume SPAdes assembly in $output_dir\"\n        cmd=\"spades.py -o $output_dir --restart-from last\"\n    else\n        echo \"Starting new SPAdes assembly in $output_dir\"\n    fi\n    \n    echo \"Running command: $cmd\"\n    eval $cmd\n    \n    # Check for successful completion and clean up temporary files\n    if [ -f \"${output_dir}/contigs.fasta\" ]; then\n        echo \"Assembly completed successfully for $sample_name. Cleaning up temporary files.\"\n        rm -rf \"$temp_dir\"\n    else\n        echo \"Assembly incomplete or failed for $sample_name. Temporary files retained for troubleshooting.\"\n    fi\ndone\n</pre> files1=(01c_fastp_reads/*apples*_1.trimmed.fastq)  for f1 in \"${files1[@]}\"; do     f2=\"${f1/_1.trimmed.fastq/_2.trimmed.fastq}\" # Constructs the path to the reverse read file     sample_name=$(basename \"$f1\" \"_1.trimmed.fastq\") # Extracts the sample name     output_dir=\"02_assembly/${sample_name}\" # Specifies the output directory based on the sample name      # Ensure a clean start by checking and cleaning any previous run data in the output directory     if [ \"$(ls -A $output_dir)\" ]; then         echo \"Output directory $output_dir is not empty. Cleaning up...\"         rm -rf ${output_dir:?}/{,.[!.],..?}* # This attempts to remove all files, including hidden ones         # Verify clean-up success         if [ \"$(ls -A $output_dir)\" ]; then             echo \"Failed to clean the directory, attempting again...\"             rm -rf ${output_dir:?}/{,.[!.],..?}*             # Final verification             if [ \"$(ls -A $output_dir)\" ]; then                 echo \"Critical error: Output directory $output_dir cannot be cleaned.\"                 exit 1 # Exit if still not clean to prevent SPAdes error             fi         fi     else         echo \"Creating output directory $output_dir\"         mkdir -p \"$output_dir\"     fi          # Move or backup the old log file if not resuming     if [ -f \"${output_dir}/spades_apple.log\" ]; then         mv \"${output_dir}/spades_apple.log\" \"${output_dir}/spades_apple.log.backup\"     fi      # Creates the temporary directory only after successful cleaning verification     mkdir -p \"${output_dir}/tmp\"      temp_dir=\"${output_dir}/tmp\" # Specifies a temporary directory for SPAdes processing within the output directory      # Construct the initial SPAdes command     cmd=\"spades.py --meta -k 21,33,55,77 -o $output_dir --tmp-dir $temp_dir -1 $f1 -2 $f2\"          # If a previous SPAdes log exists, modify the command to resume from the last checkpoint     if [ -f \"${output_dir}/spades_apple.log\" ]; then         echo \"Attempting to resume SPAdes assembly in $output_dir\"         cmd=\"spades.py -o $output_dir --restart-from last\"     else         echo \"Starting new SPAdes assembly in $output_dir\"     fi          echo \"Running command: $cmd\"     eval $cmd          # Check for successful completion and clean up temporary files     if [ -f \"${output_dir}/contigs.fasta\" ]; then         echo \"Assembly completed successfully for $sample_name. Cleaning up temporary files.\"         rm -rf \"$temp_dir\"     else         echo \"Assembly incomplete or failed for $sample_name. Temporary files retained for troubleshooting.\"     fi done <pre>Output directory 02_assembly/apples313 is not empty. Cleaning up...\nStarting new SPAdes assembly in 02_assembly/apples313\nRunning command: spades.py --meta -k 21,33,55,77 -o 02_assembly/apples313 --tmp-dir 02_assembly/apples313/tmp -1 01c_fastp_reads/apples313_1.trimmed.fastq -2 01c_fastp_reads/apples313_2.trimmed.fastq\n\n\n== Warning ==  output dir is not empty! Please, clean output directory before run.\n\n\nCommand line: /opt/ohpc/pub/apps/spades/3.15.5/bin/spades.py\t--meta\t-k\t21,33,55,77\t-o\t/xdisk/kcooper/caparicio/tree-fruit/02_assembly/apples313\t--tmp-dir\t/xdisk/kcooper/caparicio/tree-fruit/02_assembly/apples313/tmp\t-1\t/xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/apples313_1.trimmed.fastq\t-2\t/xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/apples313_2.trimmed.fastq\t\n\nSystem information:\n  SPAdes version: 3.15.5\n  Python version: 2.7.5\n  OS: Linux-3.10.0-1160.108.1.el7.x86_64-x86_64-with-centos-7.9.2009-Core\n\nOutput dir: /xdisk/kcooper/caparicio/tree-fruit/02_assembly/apples313\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Metagenomic mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/apples313_1.trimmed.fastq']\n      right reads: ['/xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/apples313_2.trimmed.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will be compressed\nAssembly parameters:\n  k: [21, 33, 55, 77]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /xdisk/kcooper/caparicio/tree-fruit/02_assembly/apples313/tmp\n  Threads: 16\n  Memory limit (in Gb): 250\n\n\n======= SPAdes pipeline started. Log can be found here: /xdisk/kcooper/caparicio/tree-fruit/02_assembly/apples313/spades.log\n\n/xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/apples313_2.trimmed.fastq: max reads length: 151\n/xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/apples313_1.trimmed.fastq: max reads length: 151\n\nReads length: 151\n\n\n===== Before start started. \n\n\n===== Read error correction started. \n\n\n===== Read error correction started. \n\n\n== Running: /opt/ohpc/pub/apps/spades/3.15.5/bin/spades-hammer /xdisk/kcooper/caparicio/tree-fruit/02_assembly/apples313/corrected/configs/config.info\n\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from refs/heads/spades_3.15.5, git revision e757b8216f9a038fb616e9551a2d4891b2d19ad7\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  :  76)   Loading config from /xdisk/kcooper/caparicio/tree-fruit/02_assembly/apples313/corrected/configs/config.info\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 1\n  0:00:00.000     1M / 11M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 250 Gb\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.001     1M / 11M   INFO    General                 (hammer_tools.cpp          :  38)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.001     1M / 11M   INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.001     1M / 11M   INFO   K-mer Counting           (kmer_data.cpp             : 283)   Estimating k-mer count\n  0:00:00.002    17M / 22M   INFO   K-mer Counting           (kmer_data.cpp             : 288)   Processing /xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/apples313_1.trimmed.fastq\n  0:03:17.416    17M / 22M   INFO   K-mer Counting           (kmer_data.cpp             : 297)   Processed 28653761 reads\n  0:03:17.416    17M / 22M   INFO   K-mer Counting           (kmer_data.cpp             : 288)   Processing /xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/apples313_2.trimmed.fastq\n  0:06:33.029    17M / 22M   INFO   K-mer Counting           (kmer_data.cpp             : 297)   Processed 57307522 reads\n  0:06:33.029    17M / 22M   INFO   K-mer Counting           (kmer_data.cpp             : 302)   Total 57307522 reads processed\n  0:06:33.234    17M / 22M   INFO   K-mer Counting           (kmer_data.cpp             : 305)   Estimated 4932016594 distinct kmers\n  0:06:33.234     1M / 22M   INFO   K-mer Counting           (kmer_data.cpp             : 309)   Filtering singleton k-mers\n  0:06:33.235    21G / 21G   INFO   K-mer Counting           (kmer_data.cpp             : 315)   Processing /xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/apples313_1.trimmed.fastq\n  0:25:32.851    21G / 21G   INFO   K-mer Counting           (kmer_data.cpp             : 324)   Processed 28653761 reads\n  0:25:32.851    21G / 21G   INFO   K-mer Counting           (kmer_data.cpp             : 315)   Processing /xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/apples313_2.trimmed.fastq\n  0:46:43.018    21G / 21G   INFO   K-mer Counting           (kmer_data.cpp             : 324)   Processed 57307522 reads\n  0:46:43.018    21G / 21G   INFO   K-mer Counting           (kmer_data.cpp             : 329)   Total 57307522 reads processed\n  0:46:43.043    21G / 21G   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 16 files using 1 threads. This might take a while.\n  0:46:43.047    21G / 21G   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 4096\n  0:46:43.047    21G / 21G   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 76.5764 Gb\n  0:46:43.047    21G / 21G   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 4194304\n  0:46:43.049    21G / 21G   INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/apples313_1.trimmed.fastq\n  0:47:00.778    21G / 21G   INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 403106 reads\n  0:47:18.379    21G / 21G   INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 802484 reads\n  0:47:35.958    21G / 21G   INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 1200821 reads\n  0:47:53.551    21G / 21G   INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 1599026 reads\n  0:48:10.968    21G / 21G   INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 1995697 reads\n  0:48:28.587    21G / 21G   INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 2393613 reads\n  0:48:46.184    21G / 21G   INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 2792480 reads\n  0:49:56.615    21G / 21G   INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 4377129 reads\n  0:53:10.181    21G / 21G   INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 8749981 reads\n  0:59:20.129    21G / 21G   INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 17127272 reads\n  1:08:49.120    21G / 21G   INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/apples313_2.trimmed.fastq\n  1:13:32.936    21G / 21G   INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 33831025 reads\n  1:32:15.756    21G / 21G   INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 57307522 reads processed\n  1:32:15.757    21G / 21G   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.\n  1:44:29.566    21G / 25G   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 2753296398 kmers in total.\n  1:44:29.616    18M / 25G   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices\n  1:58:19.117  1987M / 25G   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 2753296398 kmers, 1988618936 bytes occupied (5.77815 bits per kmer).\n  1:58:19.117  1987M / 25G   INFO   K-mer Counting           (kmer_data.cpp             : 354)   Arranging kmers in hash map order\n  2:07:35.837    43G / 44G   INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n</pre>"},{"location":"assets/apple_assembly/#metaspades-apple-assembly-jupyter-notebook","title":"metaSPAdes Apple Assembly Jupyter Notebook\u00b6","text":""},{"location":"assets/apple_assembly/#change-working-directory","title":"Change working directory\u00b6","text":""},{"location":"assets/apple_assembly/#confirm-directory-change","title":"Confirm directory change\u00b6","text":""},{"location":"assets/apple_assembly/#to-test-run-the-first-sample-run-this-code","title":"To test-run the FIRST SAMPLE, run this code\u00b6","text":""},{"location":"assets/apple_assembly/#if-the-above-ran-normally-run-the-following-to-process-remaining","title":"If the above ran normally, run the following to PROCESS REMAINING\u00b6","text":""},{"location":"assets/orange_assembly/","title":"Orange metaSPAdes Assembly Jupyter Notebook","text":"<ul> <li>SPAdes Assembly Toolkit https://ablab.github.io/spades/</li> </ul> <p>Run Time = 48 ; Core count on a single node = 64 ; Memory per core = 20</p> In\u00a0[1]: Copied! <pre>module load spades\n</pre> module load spades In\u00a0[2]: Copied! <pre>cd /xdisk/kcooper/caparicio/tree-fruit/\n</pre> cd /xdisk/kcooper/caparicio/tree-fruit/ In\u00a0[3]: Copied! <pre>pwd\n</pre> pwd <pre>/xdisk/kcooper/caparicio/tree-fruit\n</pre> In\u00a0[\u00a0]: Copied! <pre>spades.py --meta \\\n-1 01c_fastp_reads/oranges347_1.trimmed.fastq \\\n-2 01c_fastp_reads/oranges347_2.trimmed.fastq \\\n-k 21,33,55,77 \\\n-o 02_assembly/oranges347\n</pre> spades.py --meta \\ -1 01c_fastp_reads/oranges347_1.trimmed.fastq \\ -2 01c_fastp_reads/oranges347_2.trimmed.fastq \\ -k 21,33,55,77 \\ -o 02_assembly/oranges347 <pre>Command line: /opt/ohpc/pub/apps/spades/3.15.5/bin/spades.py\t--meta\t-1\t/xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/oranges347_1.trimmed.fastq\t-2\t/xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/oranges347_2.trimmed.fastq\t-k\t21,33,55,77\t-o\t/xdisk/kcooper/caparicio/tree-fruit/02a_assembly/oranges347\t\n\nSystem information:\n  SPAdes version: 3.15.5\n  Python version: 2.7.5\n  OS: Linux-3.10.0-1160.108.1.el7.x86_64-x86_64-with-centos-7.9.2009-Core\n\nOutput dir: /xdisk/kcooper/caparicio/tree-fruit/02a_assembly/oranges347\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Metagenomic mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/oranges347_1.trimmed.fastq']\n      right reads: ['/xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/oranges347_2.trimmed.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will be compressed\nAssembly parameters:\n  k: [21, 33, 55, 77]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /xdisk/kcooper/caparicio/tree-fruit/02a_assembly/oranges347/tmp\n  Threads: 16\n  Memory limit (in Gb): 250\n\n\n======= SPAdes pipeline started. Log can be found here: /xdisk/kcooper/caparicio/tree-fruit/02a_assembly/oranges347/spades.log\n\n/xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/oranges347_2.trimmed.fastq: max reads length: 151\n/xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/oranges347_1.trimmed.fastq: max reads length: 151\n\nReads length: 151\n\n\n===== Before start started. \n\n\n===== Read error correction started. \n\n\n===== Read error correction started. \n\n\n== Running: /opt/ohpc/pub/apps/spades/3.15.5/bin/spades-hammer /xdisk/kcooper/caparicio/tree-fruit/02a_assembly/oranges347/corrected/configs/config.info\n\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from refs/heads/spades_3.15.5, git revision e757b8216f9a038fb616e9551a2d4891b2d19ad7\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  :  76)   Loading config from /xdisk/kcooper/caparicio/tree-fruit/02a_assembly/oranges347/corrected/configs/config.info\n  0:00:00.001     1M / 11M   INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 1\n  0:00:00.001     1M / 11M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 250 Gb\n  0:00:00.001     1M / 11M   INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.001     1M / 11M   INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.001     1M / 11M   INFO    General                 (hammer_tools.cpp          :  38)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.001     1M / 11M   INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.001     1M / 11M   INFO   K-mer Counting           (kmer_data.cpp             : 283)   Estimating k-mer count\n  0:00:00.003    17M / 22M   INFO   K-mer Counting           (kmer_data.cpp             : 288)   Processing /xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/oranges347_1.trimmed.fastq\n  0:02:34.506    17M / 22M   INFO   K-mer Counting           (kmer_data.cpp             : 297)   Processed 18055240 reads\n  0:02:34.506    17M / 22M   INFO   K-mer Counting           (kmer_data.cpp             : 288)   Processing /xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/oranges347_2.trimmed.fastq\n  0:05:08.043    17M / 22M   INFO   K-mer Counting           (kmer_data.cpp             : 297)   Processed 36110480 reads\n  0:05:08.043    17M / 22M   INFO   K-mer Counting           (kmer_data.cpp             : 302)   Total 36110480 reads processed\n  0:05:08.247    17M / 22M   INFO   K-mer Counting           (kmer_data.cpp             : 305)   Estimated 3089849314 distinct kmers\n  0:05:08.248     1M / 22M   INFO   K-mer Counting           (kmer_data.cpp             : 309)   Filtering singleton k-mers\n  0:05:08.248    11G / 11G   INFO   K-mer Counting           (kmer_data.cpp             : 315)   Processing /xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/oranges347_1.trimmed.fastq\n  0:20:03.671    11G / 11G   INFO   K-mer Counting           (kmer_data.cpp             : 324)   Processed 18055240 reads\n  0:20:03.671    11G / 11G   INFO   K-mer Counting           (kmer_data.cpp             : 315)   Processing /xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/oranges347_2.trimmed.fastq\n  0:36:02.702    11G / 11G   INFO   K-mer Counting           (kmer_data.cpp             : 324)   Processed 36110480 reads\n  0:36:02.702    11G / 11G   INFO   K-mer Counting           (kmer_data.cpp             : 329)   Total 36110480 reads processed\n  0:36:02.713    11G / 11G   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 16 files using 1 threads. This might take a while.\n  0:36:02.717    11G / 11G   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 4096\n  0:36:02.717    11G / 11G   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 79.954 Gb\n  0:36:02.717    11G / 11G   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 4194304\n  0:36:02.719    11G / 11G   INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/oranges347_1.trimmed.fastq\n  0:36:20.218    11G / 11G   INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 321370 reads\n  0:36:37.468    11G / 11G   INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 638626 reads\n  0:36:59.861    11G / 11G   INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 956053 reads\n  0:37:22.458    11G / 11G   INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 1272283 reads\n  0:37:45.036    11G / 11G   INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 1589601 reads\n  0:38:07.468    11G / 11G   INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 1906964 reads\n  0:38:29.883    11G / 11G   INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 2223153 reads\n  0:41:06.761    11G / 11G   INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 4438117 reads\n  0:46:00.233    11G / 11G   INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 8564117 reads\n  0:55:41.622    11G / 11G   INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 16810742 reads\n  0:57:10.035    11G / 11G   INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/oranges347_2.trimmed.fastq\n  1:15:34.407    11G / 11G   INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 33700840 reads\n  1:18:21.767    11G / 11G   INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 36110480 reads processed\n  1:18:21.767    11G / 11G   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.\n  1:26:31.935    11G / 14G   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 1364199632 kmers in total.\n  1:26:31.962    10M / 14G   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices\n  1:32:47.505  1009M / 14G   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 1364199632 kmers, 985324120 bytes occupied (5.77818 bits per kmer).\n  1:32:47.505  1009M / 14G   INFO   K-mer Counting           (kmer_data.cpp             : 354)   Arranging kmers in hash map order\n  1:37:13.677    22G / 22G   INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  4:54:19.312    22G / 22G   INFO    General                 (main.cpp                  : 155)   Extracting clusters:\n  4:54:19.312    22G / 22G   INFO    General                 (concurrent_dsu.cpp        :  18)   Connecting to root\n  4:54:34.187    22G / 22G   INFO    General                 (concurrent_dsu.cpp        :  34)   Calculating counts\n  4:58:58.933    56G / 56G   INFO    General                 (concurrent_dsu.cpp        :  63)   Writing down entries\n  5:02:49.078    22G / 75G   INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1108564708\n  5:02:49.098    12G / 75G   INFO   K-mer Counting           (kmer_data.cpp             : 371)   Collecting K-mer information, this takes a while.\n  5:02:52.878    42G / 75G   INFO   K-mer Counting           (kmer_data.cpp             : 377)   Processing /xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/oranges347_1.trimmed.fastq\n  5:37:14.738    42G / 75G   INFO   K-mer Counting           (kmer_data.cpp             : 377)   Processing /xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/oranges347_2.trimmed.fastq\n  6:11:16.881    42G / 75G   INFO   K-mer Counting           (kmer_data.cpp             : 384)   Collection done, postprocessing.\n  6:11:19.654    42G / 75G   INFO   K-mer Counting           (kmer_data.cpp             : 397)   There are 1364199632 kmers in total. Among them 1848576 (0.135506%) are singletons.\n  6:11:19.654    42G / 75G   INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n</pre> In\u00a0[\u00a0]: Copied! <pre>files1=(01c_fastp_reads/*oranges*_1.trimmed.fastq)\n\nfor f1 in \"${files1[@]}\"; do\n    f2=\"${f1/_1.trimmed.fastq/_2.trimmed.fastq}\" # Constructs the path to the reverse read file\n    sample_name=$(basename \"$f1\" \"_1.trimmed.fastq\") # Extracts the sample name\n    output_dir=\"02_assembly/${sample_name}\" # Specifies the output directory based on the sample name\n\n    # Ensure a clean start by checking and cleaning any previous run data in the output directory\n    if [ \"$(ls -A $output_dir)\" ]; then\n        echo \"Output directory $output_dir is not empty. Cleaning up...\"\n        rm -rf ${output_dir:?}/{,.[!.],..?}* # This attempts to remove all files, including hidden ones\n        # Verify clean-up success\n        if [ \"$(ls -A $output_dir)\" ]; then\n            echo \"Failed to clean the directory, attempting again...\"\n            rm -rf ${output_dir:?}/{,.[!.],..?}*\n            # Final verification\n            if [ \"$(ls -A $output_dir)\" ]; then\n                echo \"Critical error: Output directory $output_dir cannot be cleaned.\"\n                exit 1 # Exit if still not clean to prevent SPAdes error\n            fi\n        fi\n    else\n        echo \"Creating output directory $output_dir\"\n        mkdir -p \"$output_dir\"\n    fi\n    \n    # Move or backup the old log file if not resuming\n    if [ -f \"${output_dir}/spades_orange.log\" ]; then\n        mv \"${output_dir}/spades_orange.log\" \"${output_dir}/spades_orange.log.backup\"\n    fi\n\n    # Creates the temporary directory only after successful cleaning verification\n    mkdir -p \"${output_dir}/tmp\" \n    temp_dir=\"${output_dir}/tmp\" # Specifies a temporary directory for SPAdes processing within the output directory\n\n    # Construct the initial SPAdes command\n    cmd=\"spades.py --meta -k 21,33,55,77 -o $output_dir --tmp-dir $temp_dir -1 $f1 -2 $f2\"\n    \n    # If a previous SPAdes log exists, modify the command to resume from the last checkpoint\n    if [ -f \"${output_dir}/spades_orange.log\" ]; then\n        echo \"Attempting to resume SPAdes assembly in $output_dir\"\n        cmd=\"spades.py -o $output_dir --restart-from last\"\n    else\n        echo \"Starting new SPAdes assembly in $output_dir\"\n    fi\n    \n    echo \"Running command: $cmd\"\n    eval $cmd\n    \n    # Check for successful completion and clean up temporary files\n    if [ -f \"${output_dir}/contigs.fasta\" ]; then\n        echo \"Assembly completed successfully for $sample_name. Cleaning up temporary files.\"\n        rm -rf \"$temp_dir\"\n    else\n        echo \"Assembly incomplete or failed for $sample_name. Temporary files retained for troubleshooting.\"\n    fi\ndone\n</pre> files1=(01c_fastp_reads/*oranges*_1.trimmed.fastq)  for f1 in \"${files1[@]}\"; do     f2=\"${f1/_1.trimmed.fastq/_2.trimmed.fastq}\" # Constructs the path to the reverse read file     sample_name=$(basename \"$f1\" \"_1.trimmed.fastq\") # Extracts the sample name     output_dir=\"02_assembly/${sample_name}\" # Specifies the output directory based on the sample name      # Ensure a clean start by checking and cleaning any previous run data in the output directory     if [ \"$(ls -A $output_dir)\" ]; then         echo \"Output directory $output_dir is not empty. Cleaning up...\"         rm -rf ${output_dir:?}/{,.[!.],..?}* # This attempts to remove all files, including hidden ones         # Verify clean-up success         if [ \"$(ls -A $output_dir)\" ]; then             echo \"Failed to clean the directory, attempting again...\"             rm -rf ${output_dir:?}/{,.[!.],..?}*             # Final verification             if [ \"$(ls -A $output_dir)\" ]; then                 echo \"Critical error: Output directory $output_dir cannot be cleaned.\"                 exit 1 # Exit if still not clean to prevent SPAdes error             fi         fi     else         echo \"Creating output directory $output_dir\"         mkdir -p \"$output_dir\"     fi          # Move or backup the old log file if not resuming     if [ -f \"${output_dir}/spades_orange.log\" ]; then         mv \"${output_dir}/spades_orange.log\" \"${output_dir}/spades_orange.log.backup\"     fi      # Creates the temporary directory only after successful cleaning verification     mkdir -p \"${output_dir}/tmp\"      temp_dir=\"${output_dir}/tmp\" # Specifies a temporary directory for SPAdes processing within the output directory      # Construct the initial SPAdes command     cmd=\"spades.py --meta -k 21,33,55,77 -o $output_dir --tmp-dir $temp_dir -1 $f1 -2 $f2\"          # If a previous SPAdes log exists, modify the command to resume from the last checkpoint     if [ -f \"${output_dir}/spades_orange.log\" ]; then         echo \"Attempting to resume SPAdes assembly in $output_dir\"         cmd=\"spades.py -o $output_dir --restart-from last\"     else         echo \"Starting new SPAdes assembly in $output_dir\"     fi          echo \"Running command: $cmd\"     eval $cmd          # Check for successful completion and clean up temporary files     if [ -f \"${output_dir}/contigs.fasta\" ]; then         echo \"Assembly completed successfully for $sample_name. Cleaning up temporary files.\"         rm -rf \"$temp_dir\"     else         echo \"Assembly incomplete or failed for $sample_name. Temporary files retained for troubleshooting.\"     fi done <pre>Cleaning up previous run data in 02a_assembly/apples313\nAttempting to resume SPAdes assembly in 02a_assembly/apples313\nRunning command: spades.py --meta -k 21,33,55,77 -o 02a_assembly/apples313 --tmp-dir 02a_assembly/apples313/tmp -1 01c_fastp_reads/apples313_1.trimmed.fastq -2 01c_fastp_reads/apples313_2.trimmed.fastq --continue\n\n\n== Error ==  you cannot specify any option except -o with --continue option! Please use '--restart-from last' if you need to change some of the options from the initial run and continue from the last available checkpoint.\n\nIn case you have troubles running SPAdes, you can write to spades.support@cab.spbu.ru\nor report an issue on our GitHub repository github.com/ablab/spades\nPlease provide us with params.txt and spades.log files from the output directory.\nAssembly incomplete or failed for apples313. Temporary files retained for troubleshooting.\nCreating output directory 02a_assembly/apples315\nStarting new SPAdes assembly in 02a_assembly/apples315\nRunning command: spades.py --meta -k 21,33,55,77 -o 02a_assembly/apples315 --tmp-dir 02a_assembly/apples315/tmp -1 01c_fastp_reads/apples315_1.trimmed.fastq -2 01c_fastp_reads/apples315_2.trimmed.fastq\n\n\n== Warning ==  output dir is not empty! Please, clean output directory before run.\n\n\nCommand line: /opt/ohpc/pub/apps/spades/3.15.5/bin/spades.py\t--meta\t-k\t21,33,55,77\t-o\t/xdisk/kcooper/caparicio/tree-fruit/02a_assembly/apples315\t--tmp-dir\t/xdisk/kcooper/caparicio/tree-fruit/02a_assembly/apples315/tmp\t-1\t/xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/apples315_1.trimmed.fastq\t-2\t/xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/apples315_2.trimmed.fastq\t\n\nSystem information:\n  SPAdes version: 3.15.5\n  Python version: 2.7.5\n  OS: Linux-3.10.0-1160.108.1.el7.x86_64-x86_64-with-centos-7.9.2009-Core\n\nOutput dir: /xdisk/kcooper/caparicio/tree-fruit/02a_assembly/apples315\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Metagenomic mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/apples315_1.trimmed.fastq']\n      right reads: ['/xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/apples315_2.trimmed.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will be compressed\nAssembly parameters:\n  k: [21, 33, 55, 77]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /xdisk/kcooper/caparicio/tree-fruit/02a_assembly/apples315/tmp\n  Threads: 16\n  Memory limit (in Gb): 250\n\n\n======= SPAdes pipeline started. Log can be found here: /xdisk/kcooper/caparicio/tree-fruit/02a_assembly/apples315/spades.log\n\n/xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/apples315_2.trimmed.fastq: max reads length: 151\n/xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/apples315_1.trimmed.fastq: max reads length: 151\n\nReads length: 151\n\n\n===== Before start started. \n\n\n===== Read error correction started. \n\n\n===== Read error correction started. \n\n\n== Running: /opt/ohpc/pub/apps/spades/3.15.5/bin/spades-hammer /xdisk/kcooper/caparicio/tree-fruit/02a_assembly/apples315/corrected/configs/config.info\n\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from refs/heads/spades_3.15.5, git revision e757b8216f9a038fb616e9551a2d4891b2d19ad7\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  :  76)   Loading config from /xdisk/kcooper/caparicio/tree-fruit/02a_assembly/apples315/corrected/configs/config.info\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 1\n  0:00:00.000     1M / 11M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 250 Gb\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.001     1M / 11M   INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.001     1M / 11M   INFO    General                 (hammer_tools.cpp          :  38)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.001     1M / 11M   INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.001     1M / 11M   INFO   K-mer Counting           (kmer_data.cpp             : 283)   Estimating k-mer count\n  0:00:00.002    17M / 22M   INFO   K-mer Counting           (kmer_data.cpp             : 288)   Processing /xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/apples315_1.trimmed.fastq\n  0:04:18.050    17M / 22M   INFO   K-mer Counting           (kmer_data.cpp             : 297)   Processed 36463330 reads\n  0:04:18.050    17M / 22M   INFO   K-mer Counting           (kmer_data.cpp             : 288)   Processing /xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/apples315_2.trimmed.fastq\n  0:09:01.681    17M / 22M   INFO   K-mer Counting           (kmer_data.cpp             : 297)   Processed 72926660 reads\n  0:09:01.681    17M / 22M   INFO   K-mer Counting           (kmer_data.cpp             : 302)   Total 72926660 reads processed\n  0:09:01.885    17M / 22M   INFO   K-mer Counting           (kmer_data.cpp             : 305)   Estimated 5423316441 distinct kmers\n  0:09:01.885     1M / 22M   INFO   K-mer Counting           (kmer_data.cpp             : 309)   Filtering singleton k-mers\n  0:09:01.886    21G / 21G   INFO   K-mer Counting           (kmer_data.cpp             : 315)   Processing /xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/apples315_1.trimmed.fastq\n  0:33:59.496    21G / 21G   INFO   K-mer Counting           (kmer_data.cpp             : 324)   Processed 36463330 reads\n  0:33:59.496    21G / 21G   INFO   K-mer Counting           (kmer_data.cpp             : 315)   Processing /xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/apples315_2.trimmed.fastq\n  1:01:23.038    21G / 21G   INFO   K-mer Counting           (kmer_data.cpp             : 324)   Processed 72926660 reads\n  1:01:23.038    21G / 21G   INFO   K-mer Counting           (kmer_data.cpp             : 329)   Total 72926660 reads processed\n  1:01:23.054    21G / 21G   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 16 files using 1 threads. This might take a while.\n  1:01:23.057    21G / 21G   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 4096\n  1:01:23.057    21G / 21G   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 76.5764 Gb\n  1:01:23.057    21G / 21G   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 4194304\n  1:01:23.059    21G / 21G   INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/apples315_1.trimmed.fastq\n  1:01:40.626    21G / 21G   INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 384510 reads\n  1:01:58.029    21G / 21G   INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 764527 reads\n  1:02:15.400    21G / 21G   INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 1142947 reads\n  1:02:33.239    21G / 21G   INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 1521621 reads\n  1:02:50.981    21G / 21G   INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 1899971 reads\n  1:03:08.546    21G / 21G   INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 2278127 reads\n  1:03:26.032    21G / 21G   INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 2655989 reads\n  1:04:54.408    21G / 21G   INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 4544255 reads\n  1:08:07.268    21G / 21G   INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 8697493 reads\n  1:14:44.036    21G / 21G   INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 17020953 reads\n  1:27:33.226    21G / 21G   INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 33670696 reads\n  1:29:41.315    21G / 21G   INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/apples315_2.trimmed.fastq\n  1:53:15.691    21G / 21G   INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 67164737 reads\n  1:57:41.955    21G / 21G   INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 72926660 reads processed\n  1:57:41.955    21G / 21G   INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.\n  2:13:31.385    21G / 26G   INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 2961554924 kmers in total.\n  2:13:31.448    18M / 26G   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices\n  2:28:18.673  2151M / 26G   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 2961554924 kmers, 2139036768 bytes occupied (5.77815 bits per kmer).\n  2:28:18.673  2151M / 26G   INFO   K-mer Counting           (kmer_data.cpp             : 354)   Arranging kmers in hash map order\n  2:38:15.612    47G / 47G   INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n</pre>"},{"location":"assets/orange_assembly/#metaspades-orange-assembly-jupyter-notebook","title":"metaSPAdes Orange Assembly Jupyter Notebook\u00b6","text":""},{"location":"assets/orange_assembly/#change-working-directory","title":"Change working directory\u00b6","text":""},{"location":"assets/orange_assembly/#confirm-directory-change","title":"Confirm directory change\u00b6","text":""},{"location":"assets/orange_assembly/#to-test-run-the-first-sample-run-this-code","title":"To test-run the FIRST SAMPLE, run this code\u00b6","text":""},{"location":"assets/orange_assembly/#if-the-above-ran-normally-run-the-following-to-process-remaining","title":"If the above ran normally, run the following to PROCESS REMAINING\u00b6","text":""},{"location":"assets/peach_assembly/","title":"Peach metaSPAdes Assembly Jupyter Notebook","text":"<ul> <li>SPAdes Assembly Toolkit https://ablab.github.io/spades/</li> </ul> <p>Run Time = 48 ; Core count on a single node = 64 ; Memory per core = 20</p> In\u00a0[1]: Copied! <pre>module load spades\n</pre> module load spades In\u00a0[2]: Copied! <pre>cd /xdisk/kcooper/caparicio/tree-fruit/\n</pre> cd /xdisk/kcooper/caparicio/tree-fruit/ In\u00a0[3]: Copied! <pre>pwd\n</pre> pwd <pre>/xdisk/kcooper/caparicio/tree-fruit\n</pre> In\u00a0[4]: Copied! <pre>spades.py --meta \\\n-1 01c_fastp_reads/peaches191_1.trimmed.fastq \\\n-2 01c_fastp_reads/peaches191_2.trimmed.fastq \\\n-k 21,33,55,77 \\\n-o 02_assembly/peaches191\n</pre> spades.py --meta \\ -1 01c_fastp_reads/peaches191_1.trimmed.fastq \\ -2 01c_fastp_reads/peaches191_2.trimmed.fastq \\ -k 21,33,55,77 \\ -o 02_assembly/peaches191 <pre>Command line: /opt/ohpc/pub/apps/spades/3.15.5/bin/spades.py\t--meta\t-1\t/xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/peaches191_1.trimmed.fastq\t-2\t/xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/peaches191_2.trimmed.fastq\t-k\t21,33,55,77\t-o\t/xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191\t\n\nSystem information:\n  SPAdes version: 3.15.5\n  Python version: 2.7.5\n  OS: Linux-3.10.0-1160.108.1.el7.x86_64-x86_64-with-centos-7.9.2009-Core\n\nOutput dir: /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Metagenomic mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/peaches191_1.trimmed.fastq']\n      right reads: ['/xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/peaches191_2.trimmed.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will be compressed\nAssembly parameters:\n  k: [21, 33, 55, 77]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/tmp\n  Threads: 16\n  Memory limit (in Gb): 250\n\n\n======= SPAdes pipeline started. Log can be found here: /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/spades.log\n\n/xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/peaches191_2.trimmed.fastq: max reads length: 151\n/xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/peaches191_1.trimmed.fastq: max reads length: 151\n\nReads length: 151\n\n\n===== Before start started. \n\n\n===== Read error correction started. \n\n\n===== Read error correction started. \n\n\n== Running: /opt/ohpc/pub/apps/spades/3.15.5/bin/spades-hammer /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/corrected/configs/config.info\n\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from refs/heads/spades_3.15.5, git revision e757b8216f9a038fb616e9551a2d4891b2d19ad7\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  :  76)   Loading config from /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/corrected/configs/config.info\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 1\n  0:00:00.000     1M / 11M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 250 Gb\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.001     1M / 11M   INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.001     1M / 11M   INFO    General                 (hammer_tools.cpp          :  38)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.001     1M / 11M   INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.001     1M / 11M   INFO   K-mer Counting           (kmer_data.cpp             : 283)   Estimating k-mer count\n  0:00:00.002    17M / 22M   INFO   K-mer Counting           (kmer_data.cpp             : 288)   Processing /xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/peaches191_1.trimmed.fastq\n  0:00:46.082    17M / 22M   INFO   K-mer Counting           (kmer_data.cpp             : 297)   Processed 5439185 reads\n  0:00:46.082    17M / 22M   INFO   K-mer Counting           (kmer_data.cpp             : 288)   Processing /xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/peaches191_2.trimmed.fastq\n  0:01:30.955    17M / 22M   INFO   K-mer Counting           (kmer_data.cpp             : 297)   Processed 10878370 reads\n  0:01:30.955    17M / 22M   INFO   K-mer Counting           (kmer_data.cpp             : 302)   Total 10878370 reads processed\n  0:01:31.160    17M / 22M   INFO   K-mer Counting           (kmer_data.cpp             : 305)   Estimated 1666092171 distinct kmers\n  0:01:31.160     1M / 22M   INFO   K-mer Counting           (kmer_data.cpp             : 309)   Filtering singleton k-mers\n  0:01:31.160  5193M / 5193M INFO   K-mer Counting           (kmer_data.cpp             : 315)   Processing /xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/peaches191_1.trimmed.fastq\n  0:05:35.153  5193M / 5208M INFO   K-mer Counting           (kmer_data.cpp             : 324)   Processed 5439185 reads\n  0:05:35.153  5193M / 5208M INFO   K-mer Counting           (kmer_data.cpp             : 315)   Processing /xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/peaches191_2.trimmed.fastq\n  0:10:16.760  5193M / 5208M INFO   K-mer Counting           (kmer_data.cpp             : 324)   Processed 10878370 reads\n  0:10:16.760  5193M / 5208M INFO   K-mer Counting           (kmer_data.cpp             : 329)   Total 10878370 reads processed\n  0:10:16.772  5193M / 5208M INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 16 files using 1 threads. This might take a while.\n  0:10:16.776  5193M / 5208M INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 4096\n  0:10:16.776  5193M / 5208M INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 81.643 Gb\n  0:10:16.776  5193M / 5208M INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 4194304\n  0:10:16.778  5769M / 5769M INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/peaches191_1.trimmed.fastq\n  0:10:36.020  5769M / 5769M INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 397509 reads\n  0:10:54.858  5769M / 5769M INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 792612 reads\n  0:11:13.898  5769M / 5769M INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 1189325 reads\n  0:11:32.760  5769M / 5769M INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 1585515 reads\n  0:11:51.678  5769M / 5769M INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 1982429 reads\n  0:12:10.582  5769M / 5769M INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 2380585 reads\n  0:12:29.444  5769M / 5769M INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 2778722 reads\n  0:13:45.118  5769M / 5769M INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 4369761 reads\n  0:14:35.862  5769M / 5769M INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/peaches191_2.trimmed.fastq\n  0:17:07.187  5769M / 5769M INFO   K-mer Splitting          (kmer_data.cpp             : 107)   Processed 8628575 reads\n  0:18:53.539  5769M / 5769M INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 10878370 reads processed\n  0:18:53.539  5193M / 5766M INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.\n  0:20:16.841  5193M / 6103M INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 611897986 kmers in total.\n  0:20:16.855     5M / 6103M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices\n  0:22:18.666   450M / 6103M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 611897986 kmers, 441963536 bytes occupied (5.77826 bits per kmer).\n  0:22:18.666   450M / 6103M INFO   K-mer Counting           (kmer_data.cpp             : 354)   Arranging kmers in hash map order\n  0:24:04.705    10G / 10G   INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  1:44:46.324    10G / 10G   INFO    General                 (main.cpp                  : 155)   Extracting clusters:\n  1:44:46.324    10G / 10G   INFO    General                 (concurrent_dsu.cpp        :  18)   Connecting to root\n  1:44:51.186    10G / 10G   INFO    General                 (concurrent_dsu.cpp        :  34)   Calculating counts\n  1:46:54.734    27G / 27G   INFO    General                 (concurrent_dsu.cpp        :  63)   Writing down entries\n  1:48:38.030    10G / 36G   INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 536809016\n  1:48:38.040  5122M / 36G   INFO   K-mer Counting           (kmer_data.cpp             : 371)   Collecting K-mer information, this takes a while.\n  1:48:39.744    19G / 36G   INFO   K-mer Counting           (kmer_data.cpp             : 377)   Processing /xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/peaches191_1.trimmed.fastq\n  1:58:25.976    19G / 36G   INFO   K-mer Counting           (kmer_data.cpp             : 377)   Processing /xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/peaches191_2.trimmed.fastq\n  2:08:11.131    19G / 36G   INFO   K-mer Counting           (kmer_data.cpp             : 384)   Collection done, postprocessing.\n  2:08:12.388    19G / 36G   INFO   K-mer Counting           (kmer_data.cpp             : 397)   There are 611897986 kmers in total. Among them 1245032 (0.203471%) are singletons.\n  2:08:12.388    19G / 36G   INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  2:28:10.428    19G / 36G   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering done. Total 47310 non-read kmers were generated.\n  2:28:10.428    19G / 36G   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)   Subclustering statistics:\n  2:28:10.428    19G / 36G   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton hamming clusters: 507078004. Among them 491630160 (96.9536%) are good\n  2:28:10.428    19G / 36G   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total singleton subclusters: 1398080. Among them 1396710 (99.902%) are good\n  2:28:10.428    19G / 36G   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Total non-singleton subcluster centers: 32272232. Among them 31599601 (97.9158%) are good\n  2:28:10.428    19G / 36G   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average size of non-trivial subcluster: 3.2498 kmers\n  2:28:10.428    19G / 36G   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Average number of sub-clusters per non-singleton cluster: 1.1325\n  2:28:10.428    19G / 36G   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Total solid k-mers: 524626471\n  2:28:10.428    19G / 36G   INFO   Hamming Subclustering    (kmer_cluster.cpp          : 658)     Substitution probabilities: [4,4]((0.903968,0.0289961,0.0384577,0.0285782),(0.0171162,0.901039,0.0514993,0.0303456),(0.0255344,0.0446671,0.909071,0.0207275),(0.0236679,0.0298714,0.0230305,0.92343))\n  2:28:10.823    19G / 36G   INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  2:28:10.823    19G / 36G   INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 1 threads.\n  2:35:46.938    19G / 36G   INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 16742847 new k-mers.\n  2:43:23.509    19G / 36G   INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 1 produced 285764 new k-mers.\n  2:50:59.832    19G / 36G   INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 2 produced 15517 new k-mers.\n  2:58:36.190    19G / 36G   INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 3 produced 2106 new k-mers.\n  3:06:12.618    19G / 36G   INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 4 produced 649 new k-mers.\n  3:13:49.050    19G / 36G   INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 5 produced 111 new k-mers.\n  3:21:25.406    19G / 36G   INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 6 produced 0 new k-mers.\n  3:21:25.406    19G / 36G   INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  3:21:25.406    19G / 36G   INFO    General                 (hammer_tools.cpp          : 222)   Starting read correction in 1 threads.\n  3:21:25.406    19G / 36G   INFO    General                 (hammer_tools.cpp          : 235)   Correcting pair of reads: /xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/peaches191_1.trimmed.fastq and /xdisk/kcooper/caparicio/tree-fruit/01c_fastp_reads/peaches191_2.trimmed.fastq\n  3:21:25.696    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 0 of 100000 reads.\n  3:21:39.529    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 0\n  3:21:39.680    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 0\n  3:21:39.942    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 1 of 100000 reads.\n  3:21:53.478    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 1\n  3:21:53.640    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 1\n  3:21:53.903    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 2 of 100000 reads.\n  3:22:07.597    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 2\n  3:22:07.761    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 2\n  3:22:08.022    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 3 of 100000 reads.\n  3:22:21.718    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 3\n  3:22:21.887    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 3\n  3:22:22.148    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 4 of 100000 reads.\n  3:22:35.842    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 4\n  3:22:36.008    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 4\n  3:22:36.269    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 5 of 100000 reads.\n  3:22:49.975    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 5\n  3:22:50.141    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 5\n  3:22:50.400    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 6 of 100000 reads.\n  3:23:03.999    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 6\n  3:23:04.164    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 6\n  3:23:04.420    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 7 of 100000 reads.\n  3:23:17.958    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 7\n  3:23:18.124    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 7\n  3:23:18.383    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 8 of 100000 reads.\n  3:23:31.952    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 8\n  3:23:32.119    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 8\n  3:23:32.378    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 9 of 100000 reads.\n  3:23:46.419    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 9\n  3:23:46.588    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 9\n  3:23:46.854    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 10 of 100000 reads.\n  3:24:01.233    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 10\n  3:24:01.398    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 10\n  3:24:01.657    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 11 of 100000 reads.\n  3:24:16.061    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 11\n  3:24:16.227    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 11\n  3:24:16.485    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 12 of 100000 reads.\n  3:24:30.739    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 12\n  3:24:30.904    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 12\n  3:24:31.163    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 13 of 100000 reads.\n  3:24:45.443    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 13\n  3:24:45.608    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 13\n  3:24:45.868    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 14 of 100000 reads.\n  3:25:00.170    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 14\n  3:25:00.336    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 14\n  3:25:00.596    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 15 of 100000 reads.\n  3:25:14.990    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 15\n  3:25:15.154    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 15\n  3:25:15.409    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 16 of 100000 reads.\n  3:25:29.671    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 16\n  3:25:29.836    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 16\n  3:25:30.092    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 17 of 100000 reads.\n  3:25:44.345    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 17\n  3:25:44.508    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 17\n  3:25:44.762    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 18 of 100000 reads.\n  3:25:59.475    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 18\n  3:25:59.642    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 18\n  3:25:59.902    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 19 of 100000 reads.\n  3:26:14.025    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 19\n  3:26:14.192    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 19\n  3:26:14.450    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 20 of 100000 reads.\n  3:26:28.308    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 20\n  3:26:28.475    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 20\n  3:26:28.735    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 21 of 100000 reads.\n  3:26:42.545    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 21\n  3:26:42.730    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 21\n  3:26:42.988    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 22 of 100000 reads.\n  3:26:56.884    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 22\n  3:26:57.049    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 22\n  3:26:57.304    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 23 of 100000 reads.\n  3:27:11.670    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 23\n  3:27:11.835    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 23\n  3:27:12.094    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 24 of 100000 reads.\n  3:27:26.136    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 24\n  3:27:26.302    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 24\n  3:27:26.560    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 25 of 100000 reads.\n  3:27:40.483    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 25\n  3:27:40.651    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 25\n  3:27:40.907    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 26 of 100000 reads.\n  3:27:54.642    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 26\n  3:27:54.805    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 26\n  3:27:55.061    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 27 of 100000 reads.\n  3:28:09.019    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 27\n  3:28:09.186    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 27\n  3:28:09.447    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 28 of 100000 reads.\n  3:28:23.450    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 28\n  3:28:23.614    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 28\n  3:28:23.876    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 29 of 100000 reads.\n  3:28:37.714    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 29\n  3:28:37.955    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 29\n  3:28:38.212    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 30 of 100000 reads.\n  3:28:52.112    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 30\n  3:28:52.278    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 30\n  3:28:52.536    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 31 of 100000 reads.\n  3:29:06.462    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 31\n  3:29:06.628    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 31\n  3:29:06.887    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 32 of 100000 reads.\n  3:29:21.081    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 32\n  3:29:21.248    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 32\n  3:29:21.508    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 33 of 100000 reads.\n  3:29:35.395    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 33\n  3:29:35.561    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 33\n  3:29:35.821    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 34 of 100000 reads.\n  3:29:49.591    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 34\n  3:29:49.757    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 34\n  3:29:50.017    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 35 of 100000 reads.\n  3:30:03.905    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 35\n  3:30:04.071    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 35\n  3:30:04.331    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 36 of 100000 reads.\n  3:30:18.232    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 36\n  3:30:18.401    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 36\n  3:30:18.659    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 37 of 100000 reads.\n  3:30:32.402    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 37\n  3:30:32.570    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 37\n  3:30:32.830    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 38 of 100000 reads.\n  3:30:46.856    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 38\n  3:30:47.020    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 38\n  3:30:47.279    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 39 of 100000 reads.\n  3:31:01.164    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 39\n  3:31:01.330    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 39\n  3:31:01.591    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 40 of 100000 reads.\n  3:31:15.476    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 40\n  3:31:15.640    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 40\n  3:31:15.900    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 41 of 100000 reads.\n  3:31:30.078    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 41\n  3:31:30.244    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 41\n  3:31:30.504    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 42 of 100000 reads.\n  3:31:44.385    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 42\n  3:31:44.551    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 42\n  3:31:44.811    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 43 of 100000 reads.\n  3:31:58.672    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 43\n  3:31:58.840    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 43\n  3:31:59.100    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 44 of 100000 reads.\n  3:32:12.795    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 44\n  3:32:12.962    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 44\n  3:32:13.223    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 45 of 100000 reads.\n  3:32:27.144    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 45\n  3:32:27.309    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 45\n  3:32:27.568    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 46 of 100000 reads.\n  3:32:41.579    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 46\n  3:32:41.746    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 46\n  3:32:42.005    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 47 of 100000 reads.\n  3:32:55.851    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 47\n  3:32:56.017    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 47\n  3:32:56.276    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 48 of 100000 reads.\n  3:33:10.078    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 48\n  3:33:10.245    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 48\n  3:33:10.504    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 49 of 100000 reads.\n  3:33:24.368    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 49\n  3:33:24.535    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 49\n  3:33:24.796    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 50 of 100000 reads.\n  3:33:39.068    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 50\n  3:33:39.294    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 50\n  3:33:39.556    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 51 of 100000 reads.\n  3:33:53.528    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 51\n  3:33:53.693    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 51\n  3:33:53.950    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 52 of 100000 reads.\n  3:34:07.808    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 52\n  3:34:07.972    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 52\n  3:34:08.228    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 53 of 100000 reads.\n  3:34:22.184    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 53\n  3:34:22.347    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 53\n  3:34:22.448    19G / 36G   INFO    General                 (hammer_tools.cpp          : 170)   Prepared batch 54 of 39185 reads.\n  3:34:27.811    19G / 36G   INFO    General                 (hammer_tools.cpp          : 177)   Processed batch 54\n  3:34:27.879    19G / 36G   INFO    General                 (hammer_tools.cpp          : 187)   Written batch 54\n  3:34:28.056    19G / 36G   INFO    General                 (hammer_tools.cpp          : 276)   Correction done. Changed 2287163 bases in 1132354 reads.\n  3:34:28.057    19G / 36G   INFO    General                 (hammer_tools.cpp          : 277)   Failed to correct 242433 bases out of 1583109961.\n  3:34:28.097     5M / 36G   INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/corrected/corrected.yaml\n  3:34:28.102     5M / 36G   INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n===== Read error correction finished. \n\n\n===== corrected reads compression started. \n\n\n== Running: /bin/python /opt/ohpc/pub/apps/spades/3.15.5/share/spades/spades_pipeline/scripts/compress_all.py --input_file /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/corrected/corrected.yaml --ext_python_modules_home /opt/ohpc/pub/apps/spades/3.15.5/share/spades --max_threads 16 --output_dir /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/corrected --gzip_output\n\n== Compressing corrected reads (with pigz)\n== Files to compress: ['/xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/corrected/peaches191_2.trimmed.00.0_0.cor.fastq', '/xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/corrected/peaches191__unpaired.00.0_0.cor.fastq', '/xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/corrected/peaches191_1.trimmed.00.0_0.cor.fastq']\n== Files compression is finished\n== Dataset yaml file is updated\n\n===== corrected reads compression finished. \n\n\n===== Read error correction finished. \n\n\n===== Assembling started. \n\n\n===== K21 started. \n\n\n== Running: /opt/ohpc/pub/apps/spades/3.15.5/bin/spades-core /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K21/configs/config.info /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K21/configs/mda_mode.info /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K21/configs/meta_mode.info\n\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  :  99)   Loaded config from /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K21/configs/config.info\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  :  99)   Loaded config from /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K21/configs/mda_mode.info\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  :  99)   Loaded config from /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K21/configs/meta_mode.info\n  0:00:00.000     1M / 11M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 250 Gb\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  : 107)   Starting SPAdes, built from refs/heads/spades_3.15.5, git revision e757b8216f9a038fb616e9551a2d4891b2d19ad7\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  : 108)   Maximum k-mer length: 128\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  : 109)   Assembling dataset (/xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/dataset.info) with K=21\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  : 110)   Maximum # of threads to use (adjusted due to OMP capabilities): 1\n  0:00:00.000     1M / 11M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.000     1M / 11M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.000     1M / 11M   INFO    General                 (pipeline.cpp              : 231)   Two-step repeat resolution disabled\n  0:00:00.000     1M / 11M   INFO   GraphCore                (graph_core.hpp            : 672)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.000     1M / 11M   INFO   GraphCore                (graph_core.hpp            : 673)   Vertex size: 48, edge size: 40\n  0:00:00.000     1M / 11M   INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8\n  0:00:00.000     1M / 11M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.003     1M / 11M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.003     1M / 11M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads\n  0:00:00.089    14M / 16M   INFO    General                 (binary_converter.cpp      :  96)   16384 reads processed\n  0:00:00.168    19M / 24M   INFO    General                 (binary_converter.cpp      :  96)   32768 reads processed\n  0:00:00.422    13M / 30M   INFO    General                 (binary_converter.cpp      :  96)   65536 reads processed\n  0:00:00.833    19M / 32M   INFO    General                 (binary_converter.cpp      :  96)   131072 reads processed\n  0:00:01.753    12M / 32M   INFO    General                 (binary_converter.cpp      :  96)   262144 reads processed\n  0:00:03.511    16M / 49M   INFO    General                 (binary_converter.cpp      :  96)   524288 reads processed\n  0:00:07.005    25M / 49M   INFO    General                 (binary_converter.cpp      :  96)   1048576 reads processed\n  0:00:14.089    25M / 49M   INFO    General                 (binary_converter.cpp      :  96)   2097152 reads processed\n  0:00:28.312    24M / 49M   INFO    General                 (binary_converter.cpp      :  96)   4194304 reads processed\n  0:00:33.235     8M / 49M   INFO    General                 (binary_converter.cpp      : 111)   4879083 reads written\n  0:00:33.235     1M / 49M   INFO    General                 (read_converter.cpp        :  86)   Converting single reads\n  0:00:33.286     7M / 49M   INFO    General                 (binary_converter.cpp      :  96)   16384 reads processed\n  0:00:33.327    10M / 49M   INFO    General                 (binary_converter.cpp      :  96)   32768 reads processed\n  0:00:33.456     7M / 49M   INFO    General                 (binary_converter.cpp      :  96)   65536 reads processed\n  0:00:33.668    10M / 49M   INFO    General                 (binary_converter.cpp      :  96)   131072 reads processed\n  0:00:34.139     7M / 49M   INFO    General                 (binary_converter.cpp      :  96)   262144 reads processed\n  0:00:34.437     4M / 49M   INFO    General                 (binary_converter.cpp      : 111)   344412 reads written\n  0:00:34.437     1M / 49M   INFO    General                 (read_converter.cpp        :  92)   Converting merged reads\n  0:00:34.441     4M / 49M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:34.516     1M / 49M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:34.522     1M / 49M   INFO    General                 (construction.cpp          : 153)   Max read length 151\n  0:00:34.522     1M / 49M   INFO    General                 (construction.cpp          : 159)   Average read length 145.179\n  0:00:34.522     1M / 49M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:34.522     1M / 49M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 10 files using 1 threads. This might take a while.\n  0:00:34.525     1M / 49M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 4096\n  0:00:34.525     1M / 49M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 83.3333 Gb\n  0:00:34.525     1M / 49M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 6710886\n  0:00:46.129   601M / 612M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 1051711 reads\n  0:00:57.524   601M / 612M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 2132744 reads\n  0:01:08.915   601M / 612M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 3214183 reads\n  0:01:20.301   601M / 612M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 4295181 reads\n  0:01:31.690   601M / 612M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 5376061 reads\n  0:01:43.058   601M / 612M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 6456585 reads\n  0:01:54.422   601M / 612M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 7537229 reads\n  0:02:05.780   601M / 612M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 8617847 reads\n  0:02:17.294   601M / 612M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 9699322 reads\n  0:03:36.758   601M / 612M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 17268487 reads\n  0:04:07.623     1M / 612M  INFO    General                 (kmer_splitters.hpp        : 131)   Used 20205156 reads\n  0:04:07.625     1M / 612M  INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.\n  0:04:58.067     1M / 851M  INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 639055517 kmers in total.\n  0:04:58.067     1M / 851M  INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:04:58.079     1M / 851M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 438)   Building kmer index\n  0:04:58.079     1M / 851M  INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 10 files using 1 threads. This might take a while.\n  0:04:58.082     1M / 851M  INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 4096\n  0:04:58.082     1M / 851M  INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 83.3333 Gb\n  0:04:58.082     1M / 851M  INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 6710886\n  0:04:59.881   601M / 851M  INFO    General                 (kmer_splitters.hpp        : 194)   Processed 6618730 kmers\n  0:05:02.348   601M / 851M  INFO    General                 (kmer_splitters.hpp        : 194)   Processed 14949818 kmers\n  0:05:08.699   601M / 851M  INFO    General                 (kmer_splitters.hpp        : 194)   Processed 34627851 kmers\n  0:05:18.952   601M / 851M  INFO    General                 (kmer_splitters.hpp        : 194)   Processed 64678513 kmers\n  0:05:20.769   601M / 851M  INFO    General                 (kmer_splitters.hpp        : 194)   Processed 71433648 kmers\n  0:05:23.392   601M / 851M  INFO    General                 (kmer_splitters.hpp        : 194)   Processed 80127312 kmers\n  0:05:30.749   601M / 851M  INFO    General                 (kmer_splitters.hpp        : 194)   Processed 102773665 kmers\n  0:05:39.743   601M / 851M  INFO    General                 (kmer_splitters.hpp        : 194)   Processed 129371997 kmers\n  0:05:41.612   601M / 851M  INFO    General                 (kmer_splitters.hpp        : 194)   Processed 136291985 kmers\n  0:05:44.395   601M / 851M  INFO    General                 (kmer_splitters.hpp        : 194)   Processed 145393677 kmers\n  0:05:52.830   601M / 851M  INFO    General                 (kmer_splitters.hpp        : 194)   Processed 170912679 kmers\n  0:06:00.505   601M / 851M  INFO    General                 (kmer_splitters.hpp        : 194)   Processed 194071779 kmers\n  0:06:02.453   601M / 851M  INFO    General                 (kmer_splitters.hpp        : 194)   Processed 201156335 kmers\n  0:06:05.467   601M / 851M  INFO    General                 (kmer_splitters.hpp        : 194)   Processed 210828985 kmers\n  0:06:14.887   601M / 851M  INFO    General                 (kmer_splitters.hpp        : 194)   Processed 239070567 kmers\n  0:06:21.247   601M / 851M  INFO    General                 (kmer_splitters.hpp        : 194)   Processed 258809454 kmers\n  0:06:23.275   601M / 851M  INFO    General                 (kmer_splitters.hpp        : 194)   Processed 266084331 kmers\n  0:06:26.548   601M / 851M  INFO    General                 (kmer_splitters.hpp        : 194)   Processed 276341759 kmers\n  0:06:37.061   601M / 851M  INFO    General                 (kmer_splitters.hpp        : 194)   Processed 307234054 kmers\n  0:07:54.235   601M / 993M  INFO    General                 (kmer_splitters.hpp        : 194)   Processed 546299095 kmers\n  0:08:24.734   601M / 1032M INFO    General                 (kmer_splitters.hpp        : 199)   Used 639055724 kmers.\n  0:08:24.734     1M / 1032M INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.\n  0:09:34.661     1M / 1549M INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 637225347 kmers in total.\n  0:09:34.661     1M / 1549M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices\n  0:12:45.708   449M / 1549M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 637225347 kmers, 460252336 bytes occupied (5.77821 bits per kmer).\n  0:12:45.708   449M / 1549M INFO    General                 (kmer_index_builder.hpp    : 169)   Merging final buckets.\n  0:12:51.939  1057M / 1755M INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 100)   Building k-mer extensions from k+1-mers\n  0:19:54.901  1057M / 1819M INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 105)   Building k-mer extensions from k+1-mers finished.\n  0:19:54.907  1057M / 1819M INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Early tip clipping (id: construction:early_tip_clipper)\n  0:19:54.907  1057M / 1819M INFO    General                 (construction.cpp          : 301)   Early tip clipper length bound set as (RL - K)\n  0:19:54.907  1057M / 1819M INFO   Early tip clipping       (early_simplification.hpp  :  47)   Early tip clipping\n  0:26:48.240  1377M / 2073M INFO   Early tip clipping       (early_simplification.hpp  :  82)   #tipped junctions: 3816568\n  0:26:50.955  1377M / 2073M INFO   Early tip clipping       (early_simplification.hpp  :  93)   Clipped tips: 3843099\n  0:26:50.966  1057M / 2073M INFO   Early tip clipping       (early_simplification.hpp  :  49)   144426059 22-mers were removed by early tip clipper\n  0:26:50.966  1057M / 2073M INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:26:50.970  1057M / 2073M INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 354)   Extracting unbranching paths\n  0:36:01.344  1553M / 2683M INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 373)   Extracting unbranching paths finished. 11126166 sequences extracted\n  0:38:28.589  1553M / 2853M INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 309)   Collecting perfect loops\n  0:41:40.102  1570M / 2853M INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 342)   Collecting perfect loops finished. 4435 loops collected\n  0:41:40.437  1553M / 2853M INFO    General                 (debruijn_graph_constructor: 487)   Total 22261202 edges to create\n  0:41:40.438  2412M / 2853M INFO    General                 (debruijn_graph_constructor: 489)   Collecting link records\n  0:41:47.405  2753M / 3116M INFO    General                 (debruijn_graph_constructor: 491)   Ordering link records\n  0:41:49.574  2753M / 3116M INFO    General                 (debruijn_graph_constructor: 493)   Sorting done\n  0:41:49.671  2881M / 3272M INFO    General                 (debruijn_graph_constructor: 503)   Total 9300431 vertices to create\n  0:41:49.671  3739M / 3739M INFO    General                 (debruijn_graph_constructor: 506)   Connecting the graph\n  0:41:51.820  3100M / 4066M INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:41:51.820  3100M / 4066M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices\n  0:45:02.380  3548M / 4113M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 639055517 kmers, 461574152 bytes occupied (5.7782 bits per kmer).\n  0:45:02.747  5988M / 6487M INFO    General                 (coverage_hash_map_builder.:  47)   Collecting k-mer coverage information from reads, this takes a while.\n  0:50:26.692  5988M / 6487M INFO    General                 (construction.cpp          : 430)   Filling coverage and flanking coverage from PHM\n  0:50:41.066  5988M / 6487M INFO    General                 (coverage_filling.hpp      :  82)   Processed 1000000 edges\n  0:50:55.325  5988M / 6487M INFO    General                 (coverage_filling.hpp      :  82)   Processed 2000000 edges\n  0:51:09.616  5988M / 6487M INFO    General                 (coverage_filling.hpp      :  82)   Processed 3000000 edges\n  0:51:23.945  5988M / 6487M INFO    General                 (coverage_filling.hpp      :  82)   Processed 4000000 edges\n  0:51:38.275  5988M / 6487M INFO    General                 (coverage_filling.hpp      :  82)   Processed 5000000 edges\n  0:51:52.512  5988M / 6487M INFO    General                 (coverage_filling.hpp      :  82)   Processed 6000000 edges\n  0:52:06.766  5988M / 6487M INFO    General                 (coverage_filling.hpp      :  82)   Processed 7000000 edges\n  0:52:20.992  5988M / 6487M INFO    General                 (coverage_filling.hpp      :  82)   Processed 8000000 edges\n  0:52:35.338  5988M / 6487M INFO    General                 (coverage_filling.hpp      :  82)   Processed 9000000 edges\n  0:52:49.661  5988M / 6487M INFO    General                 (coverage_filling.hpp      :  82)   Processed 10000000 edges\n  0:53:03.938  5988M / 6487M INFO    General                 (coverage_filling.hpp      :  82)   Processed 11000000 edges\n  0:53:18.274  5988M / 6487M INFO    General                 (coverage_filling.hpp      :  82)   Processed 12000000 edges\n  0:53:32.580  5988M / 6487M INFO    General                 (coverage_filling.hpp      :  82)   Processed 13000000 edges\n  0:53:46.890  5988M / 6487M INFO    General                 (coverage_filling.hpp      :  82)   Processed 14000000 edges\n  0:54:29.788  5988M / 6487M INFO    General                 (coverage_filling.hpp      :  82)   Processed 17000000 edges\n  0:55:46.489  2043M / 6487M INFO   StageManager             (stage.cpp                 : 185)   STAGE == Raw Simplification (id: raw_simplification)\n  0:55:46.489  2043M / 6487M INFO    General                 (simplification.cpp        : 127)   PROCEDURE == Initial cleaning\n  0:55:46.490  2043M / 6487M INFO    General                 (graph_simplification.hpp  : 662)   Flanking coverage based disconnection disabled\n  0:55:46.490  2043M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Self conjugate edge remover\n  0:55:47.850  2043M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Self conjugate edge remover triggered 0 times\n  0:55:47.850  2043M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Initial tip clipper\n  0:55:52.363  2041M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Initial tip clipper triggered 282680 times\n  0:55:52.364  2041M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Initial ec remover\n  0:56:10.294  2223M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Initial ec remover triggered 1821247 times\n  0:56:10.313  2223M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Initial isolated edge remover\n  0:56:12.798  2205M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Initial isolated edge remover triggered 578391 times\n  0:56:12.833  1913M / 6487M INFO   StageManager             (stage.cpp                 : 185)   STAGE == Simplification (id: simplification)\n  0:56:12.834  1913M / 6487M INFO    General                 (simplification.cpp        : 368)   Graph simplification started\n  0:56:12.836  1913M / 6487M INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:56:12.837  1913M / 6487M INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 1\n  0:56:12.838  1913M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  0:56:16.375  1895M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 374908 times\n  0:56:16.449  1895M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  0:57:32.824  1905M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 277924 times\n  0:57:32.894  1905M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover\n  0:57:34.494  1938M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times\n  0:57:34.495  1938M / 6487M INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 2\n  0:57:34.497  1938M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  0:57:34.824  1920M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 19920 times\n  0:57:34.830  1920M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  0:57:35.348  1905M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 337 times\n  0:57:35.350  1905M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover\n  0:57:36.716  1913M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 173446 times\n  0:57:36.781  1913M / 6487M INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 3\n  0:57:36.783  1913M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  0:57:37.034  1902M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 27448 times\n  0:57:37.042  1902M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  0:57:44.139  1891M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 7180 times\n  0:57:44.143  1891M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover\n  0:57:47.068  1920M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 369608 times\n  0:57:47.164  1920M / 6487M INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 4\n  0:57:47.165  1920M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  0:57:48.381  1901M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 36578 times\n  0:57:48.391  1901M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  0:58:09.167  1864M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 13051 times\n  0:58:09.174  1864M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover\n  0:58:10.003  1847M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 183 times\n  0:58:10.004  1847M / 6487M INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 5\n  0:58:10.005  1847M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  0:58:10.029  1844M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 194 times\n  0:58:10.030  1844M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  0:58:10.046  1843M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 12 times\n  0:58:10.047  1843M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover\n  0:58:10.048  1843M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times\n  0:58:10.049  1843M / 6487M INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 6\n  0:58:10.050  1843M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  0:58:10.051  1843M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times\n  0:58:10.052  1843M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  0:58:10.054  1843M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times\n  0:58:10.055  1843M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover\n  0:58:10.056  1843M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times\n  0:58:10.222  1833M / 6487M INFO   StageManager             (stage.cpp                 : 185)   STAGE == Simplification Cleanup (id: simplification_cleanup)\n  0:58:10.223  1833M / 6487M INFO    General                 (simplification.cpp        : 176)   PROCEDURE == Post simplification\n  0:58:10.224  1833M / 6487M INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:58:10.226  1833M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Relative coverage component remover\n  0:58:24.533  1832M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Relative coverage component remover triggered 19261 times\n  0:58:24.542  1832M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Disconnecting edges with relatively low coverage\n  0:58:27.831  1832M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Disconnecting edges with relatively low coverage triggered 4930 times\n  0:58:27.833  1832M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Complex tip clipper\n  0:58:29.248  1831M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Complex tip clipper triggered 8223 times\n  0:58:29.253  1831M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Complex bulge remover\n  0:58:34.597  1832M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Complex bulge remover triggered 1512 times\n  0:58:34.599  1832M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  0:58:35.567  1831M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 4001 times\n  0:58:35.568  1831M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Final tip clipper\n  0:58:36.590  1832M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Final tip clipper triggered 11535 times\n  0:58:36.593  1832M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  0:58:50.100  1833M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 1680 times\n  0:58:50.102  1833M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Thorn remover (meta)\n  0:58:51.147  1833M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Thorn remover (meta) triggered 0 times\n  0:58:51.148  1833M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Relative coverage component remover\n  0:59:03.496  1833M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Relative coverage component remover triggered 515 times\n  0:59:03.497  1833M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Disconnecting edges with relatively low coverage\n  0:59:06.391  1832M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Disconnecting edges with relatively low coverage triggered 942 times\n  0:59:06.392  1832M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Complex tip clipper\n  0:59:07.674  1832M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Complex tip clipper triggered 199 times\n  0:59:07.675  1832M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Complex bulge remover\n  0:59:12.803  1831M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Complex bulge remover triggered 95 times\n  0:59:12.805  1831M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  0:59:13.749  1830M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 1130 times\n  0:59:13.751  1830M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Final tip clipper\n  0:59:14.699  1830M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Final tip clipper triggered 65 times\n  0:59:14.701  1830M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  0:59:27.562  1840M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 160 times\n  0:59:27.563  1840M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Thorn remover (meta)\n  0:59:28.602  1840M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Thorn remover (meta) triggered 0 times\n  0:59:28.604  1840M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Relative coverage component remover\n  0:59:40.761  1840M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Relative coverage component remover triggered 34 times\n  0:59:40.763  1840M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Disconnecting edges with relatively low coverage\n  0:59:40.775  1840M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Disconnecting edges with relatively low coverage triggered 25 times\n  0:59:40.776  1840M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Complex tip clipper\n  0:59:42.036  1840M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Complex tip clipper triggered 5 times\n  0:59:42.037  1840M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Complex bulge remover\n  0:59:47.108  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Complex bulge remover triggered 16 times\n  0:59:47.109  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  0:59:47.111  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 19 times\n  0:59:47.112  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Final tip clipper\n  0:59:47.113  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Final tip clipper triggered 0 times\n  0:59:47.115  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  0:59:47.117  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 8 times\n  0:59:47.118  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Thorn remover (meta)\n  0:59:47.120  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Thorn remover (meta) triggered 0 times\n  0:59:47.121  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Relative coverage component remover\n  0:59:59.235  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Relative coverage component remover triggered 1 times\n  0:59:59.236  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Disconnecting edges with relatively low coverage\n  0:59:59.238  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Disconnecting edges with relatively low coverage triggered 2 times\n  0:59:59.239  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Complex tip clipper\n  1:00:00.500  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Complex tip clipper triggered 0 times\n  1:00:00.502  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Complex bulge remover\n  1:00:05.568  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Complex bulge remover triggered 2 times\n  1:00:05.569  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  1:00:05.571  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 1 times\n  1:00:05.572  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Final tip clipper\n  1:00:05.573  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Final tip clipper triggered 0 times\n  1:00:05.574  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  1:00:05.576  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times\n  1:00:05.577  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Thorn remover (meta)\n  1:00:05.578  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Thorn remover (meta) triggered 0 times\n  1:00:05.579  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Relative coverage component remover\n  1:00:17.722  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Relative coverage component remover triggered 0 times\n  1:00:17.723  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Disconnecting edges with relatively low coverage\n  1:00:17.724  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Disconnecting edges with relatively low coverage triggered 0 times\n  1:00:17.726  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Complex tip clipper\n  1:00:18.984  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Complex tip clipper triggered 0 times\n  1:00:18.986  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Complex bulge remover\n  1:00:24.056  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Complex bulge remover triggered 0 times\n  1:00:24.057  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  1:00:24.058  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times\n  1:00:24.060  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Final tip clipper\n  1:00:24.061  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Final tip clipper triggered 0 times\n  1:00:24.062  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  1:00:24.063  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times\n  1:00:24.065  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Thorn remover (meta)\n  1:00:24.066  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Thorn remover (meta) triggered 0 times\n  1:00:24.067  1829M / 6487M INFO    General                 (simplification.cpp        : 323)   Running Hidden EC remover (meta)\n  1:00:24.798  1829M / 6487M INFO    General                 (simplification.cpp        : 327)   Disrupting self-conjugate edges\n  1:00:26.250  1829M / 6487M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Removing isolated edges\n  1:00:27.110  1828M / 6487M INFO   Simplification           (parallel_processing.hpp   : 170)   Removing isolated edges triggered 7684 times\n  1:00:27.230  1828M / 6487M INFO    General                 (simplification.cpp        : 495)   After simplification:\n  1:00:27.231  1828M / 6487M INFO    General                 (simplification.cpp        : 496)     Average coverage = 2.56043\n  1:00:27.330  1828M / 6487M INFO    General                 (simplification.cpp        : 497)     Total length = 286126038\n  1:00:27.567  1828M / 6487M INFO    General                 (simplification.cpp        : 498)     Median edge length: 218\n  1:00:27.568  1828M / 6487M INFO    General                 (simplification.cpp        : 499)     Edges: 4181498\n  1:00:27.570  1828M / 6487M INFO    General                 (simplification.cpp        : 500)     Vertices: 4763598\n  1:00:27.571  1828M / 6487M INFO   StageManager             (stage.cpp                 : 185)   STAGE == Contig Output (id: contig_output)\n  1:00:27.576  1828M / 6487M INFO    General                 (read_converter.cpp        : 107)   Outputting contigs to /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K21/simplified_contigs\n  1:00:27.583  1830M / 6487M INFO    General                 (binary_converter.cpp      :  96)   16384 reads processed\n  1:00:27.586  1830M / 6487M INFO    General                 (binary_converter.cpp      :  96)   32768 reads processed\n  1:00:27.597  1830M / 6487M INFO    General                 (binary_converter.cpp      :  96)   65536 reads processed\n  1:00:27.616  1830M / 6487M INFO    General                 (binary_converter.cpp      :  96)   131072 reads processed\n  1:00:27.660  1830M / 6487M INFO    General                 (binary_converter.cpp      :  96)   262144 reads processed\n  1:00:27.744  1830M / 6487M INFO    General                 (binary_converter.cpp      :  96)   524288 reads processed\n  1:00:27.908  1830M / 6487M INFO    General                 (binary_converter.cpp      :  96)   1048576 reads processed\n  1:00:28.196  1830M / 6487M INFO    General                 (binary_converter.cpp      : 111)   2091515 reads written\n  1:00:28.299  1828M / 6487M INFO    General                 (pipeline.cpp              : 287)   SPAdes finished\n  1:00:29.483     1M / 6487M INFO    General                 (main.cpp                  : 136)   Assembling time: 1 hours 0 minutes 29 seconds\n\n===== K21 finished. \n\n\n===== K33 started. \n\n\n== Running: /opt/ohpc/pub/apps/spades/3.15.5/bin/spades-core /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K33/configs/config.info /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K33/configs/mda_mode.info /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K33/configs/meta_mode.info\n\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  :  99)   Loaded config from /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K33/configs/config.info\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  :  99)   Loaded config from /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K33/configs/mda_mode.info\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  :  99)   Loaded config from /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K33/configs/meta_mode.info\n  0:00:00.000     1M / 11M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 250 Gb\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  : 107)   Starting SPAdes, built from refs/heads/spades_3.15.5, git revision e757b8216f9a038fb616e9551a2d4891b2d19ad7\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  : 108)   Maximum k-mer length: 128\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  : 109)   Assembling dataset (/xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/dataset.info) with K=33\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  : 110)   Maximum # of threads to use (adjusted due to OMP capabilities): 1\n  0:00:00.000     1M / 11M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.000     1M / 11M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.000     1M / 11M   INFO    General                 (pipeline.cpp              : 231)   Two-step repeat resolution disabled\n  0:00:00.000     1M / 11M   INFO   GraphCore                (graph_core.hpp            : 672)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.000     1M / 11M   INFO   GraphCore                (graph_core.hpp            : 673)   Vertex size: 48, edge size: 40\n  0:00:00.000     1M / 11M   INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8\n  0:00:00.000     1M / 11M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.002     1M / 11M   INFO    General                 (read_converter.cpp        :  53)   Binary reads detected\n  0:00:00.002     1M / 11M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.002     1M / 11M   INFO    General                 (construction.cpp          : 118)   Contigs from previous K will be used: /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K21/simplified_contigs\n  0:00:00.013     1M / 11M   INFO    General                 (construction.cpp          : 153)   Max read length 151\n  0:00:00.013     1M / 11M   INFO    General                 (construction.cpp          : 159)   Average read length 145.179\n  0:00:00.013     1M / 11M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.013     1M / 11M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 10 files using 1 threads. This might take a while.\n  0:00:00.017     1M / 11M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 4096\n  0:00:00.017     1M / 11M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 83.3333 Gb\n  0:00:00.017     1M / 11M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 3355443\n  0:00:06.300   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 571836 reads\n  0:00:12.326   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 1164704 reads\n  0:00:18.366   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 1763057 reads\n  0:00:24.372   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 2362671 reads\n  0:00:30.367   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 2959934 reads\n  0:00:36.367   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 3558215 reads\n  0:00:42.363   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 4156474 reads\n  0:00:48.427   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 4754021 reads\n  0:01:30.567   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 8941526 reads\n  0:02:55.562   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 17319536 reads\n  0:04:13.668     1M / 577M  INFO    General                 (kmer_splitters.hpp        : 131)   Used 24388186 reads\n  0:04:13.669     1M / 577M  INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.\n  0:05:39.861     1M / 1805M INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 622821226 kmers in total.\n  0:05:39.861     1M / 1805M INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:05:39.867     1M / 1805M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 438)   Building kmer index\n  0:05:39.868     1M / 1805M INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 10 files using 1 threads. This might take a while.\n  0:05:39.870     1M / 1805M INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 4096\n  0:05:39.870     1M / 1805M INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 83.3333 Gb\n  0:05:39.870     1M / 1805M INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 3355443\n  0:05:42.563   601M / 1805M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 7200484 kmers\n  0:05:45.442   601M / 1805M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 14948751 kmers\n  0:05:48.432   601M / 1805M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 22935550 kmers\n  0:05:51.573   601M / 1805M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 31261414 kmers\n  0:05:54.681   601M / 1805M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 39476475 kmers\n  0:05:58.175   601M / 1805M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 48644085 kmers\n  0:06:01.552   601M / 1805M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 57427427 kmers\n  0:06:05.230   601M / 1805M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 67207455 kmers\n  0:06:08.446   601M / 1805M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 75448908 kmers\n  0:06:11.278   601M / 1805M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 82989375 kmers\n  0:06:14.533   601M / 1805M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 91528663 kmers\n  0:06:17.410   601M / 1805M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 99208455 kmers\n  0:06:21.057   601M / 1805M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 108720431 kmers\n  0:06:24.408   601M / 1805M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 117146684 kmers\n  0:06:28.635   601M / 1805M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 128371864 kmers\n  0:06:31.796   601M / 1805M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 136789393 kmers\n  0:06:34.501   601M / 1805M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 144080903 kmers\n  0:06:37.722   601M / 1805M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 152688049 kmers\n  0:07:22.336   601M / 1805M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 270700258 kmers\n  0:09:06.311   601M / 1805M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 544327336 kmers\n  0:09:36.104   601M / 1805M INFO    General                 (kmer_splitters.hpp        : 199)   Used 622821623 kmers.\n  0:09:36.104     1M / 1805M INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.\n  0:11:06.945     1M / 2591M INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 624972422 kmers in total.\n  0:11:06.945     1M / 2591M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices\n  0:14:29.094   437M / 2591M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 624972422 kmers, 451402416 bytes occupied (5.77821 bits per kmer).\n  0:14:29.094   437M / 2591M INFO    General                 (kmer_index_builder.hpp    : 169)   Merging final buckets.\n  0:14:40.866  1037M / 2591M INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 100)   Building k-mer extensions from k+1-mers\n  0:21:47.465  1037M / 2591M INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 105)   Building k-mer extensions from k+1-mers finished.\n  0:21:47.472  1037M / 2591M INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Early tip clipping (id: construction:early_tip_clipper)\n  0:21:47.472  1037M / 2591M INFO    General                 (construction.cpp          : 301)   Early tip clipper length bound set as (RL - K)\n  0:21:47.472  1037M / 2591M INFO   Early tip clipping       (early_simplification.hpp  :  47)   Early tip clipping\n  0:26:59.730  1197M / 2591M INFO   Early tip clipping       (early_simplification.hpp  :  82)   #tipped junctions: 2211542\n  0:27:01.306  1197M / 2591M INFO   Early tip clipping       (early_simplification.hpp  :  93)   Clipped tips: 2220399\n  0:27:01.322  1037M / 2591M INFO   Early tip clipping       (early_simplification.hpp  :  49)   72969730 34-mers were removed by early tip clipper\n  0:27:01.322  1037M / 2591M INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:27:01.325  1037M / 2591M INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 354)   Extracting unbranching paths\n  0:37:02.845  1366M / 2591M INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 373)   Extracting unbranching paths finished. 5029930 sequences extracted\n  0:40:09.739  1366M / 2591M INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 309)   Collecting perfect loops\n  0:43:22.242  1398M / 2591M INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 342)   Collecting perfect loops finished. 5298 loops collected\n  0:43:22.415  1366M / 2591M INFO    General                 (debruijn_graph_constructor: 487)   Total 10070456 edges to create\n  0:43:22.415  1755M / 2591M INFO    General                 (debruijn_graph_constructor: 489)   Collecting link records\n  0:43:26.087  1912M / 2591M INFO    General                 (debruijn_graph_constructor: 491)   Ordering link records\n  0:43:27.018  1912M / 2591M INFO    General                 (debruijn_graph_constructor: 493)   Sorting done\n  0:43:27.058  1976M / 2591M INFO    General                 (debruijn_graph_constructor: 503)   Total 7186424 vertices to create\n  0:43:27.059  2642M / 2642M INFO    General                 (debruijn_graph_constructor: 506)   Connecting the graph\n  0:43:28.313  2341M / 2901M INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:43:28.313  2341M / 2901M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices\n  0:47:12.986  2777M / 3200M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 622821226 kmers, 449848672 bytes occupied (5.77821 bits per kmer).\n  0:47:13.340  5153M / 5513M INFO    General                 (coverage_hash_map_builder.:  47)   Collecting k-mer coverage information from reads, this takes a while.\n  0:52:25.618  5153M / 5513M INFO    General                 (construction.cpp          : 430)   Filling coverage and flanking coverage from PHM\n  0:53:02.026  5153M / 5513M INFO    General                 (coverage_filling.hpp      :  82)   Processed 1000000 edges\n  0:53:38.553  5153M / 5513M INFO    General                 (coverage_filling.hpp      :  82)   Processed 2000000 edges\n  0:54:14.999  5153M / 5513M INFO    General                 (coverage_filling.hpp      :  82)   Processed 3000000 edges\n  0:54:51.481  5153M / 5513M INFO    General                 (coverage_filling.hpp      :  82)   Processed 4000000 edges\n  0:55:27.354  5153M / 5513M INFO    General                 (coverage_filling.hpp      :  82)   Processed 5000000 edges\n  0:56:03.579  5153M / 5513M INFO    General                 (coverage_filling.hpp      :  82)   Processed 6000000 edges\n  0:56:39.949  5153M / 5513M INFO    General                 (coverage_filling.hpp      :  82)   Processed 7000000 edges\n  0:57:16.328  5153M / 5513M INFO    General                 (coverage_filling.hpp      :  82)   Processed 8000000 edges\n  0:57:52.932  5153M / 5513M INFO    General                 (coverage_filling.hpp      :  82)   Processed 9000000 edges\n  0:58:29.423  5153M / 5513M INFO    General                 (coverage_filling.hpp      :  82)   Processed 10000000 edges\n  0:58:31.947  5153M / 5513M INFO    General                 (coverage_filling.hpp      :  82)   Processed 10069061 edges\n  0:58:34.173  1305M / 5513M INFO   StageManager             (stage.cpp                 : 185)   STAGE == Raw Simplification (id: raw_simplification)\n  0:58:34.176  1305M / 5513M INFO    General                 (simplification.cpp        : 127)   PROCEDURE == Initial cleaning\n  0:58:34.176  1305M / 5513M INFO    General                 (graph_simplification.hpp  : 662)   Flanking coverage based disconnection disabled\n  0:58:34.177  1305M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Self conjugate edge remover\n  0:58:34.968  1305M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Self conjugate edge remover triggered 324 times\n  0:58:34.968  1305M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Initial tip clipper\n  0:58:38.147  1302M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Initial tip clipper triggered 227172 times\n  0:58:38.148  1302M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Initial ec remover\n  0:58:42.475  1342M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Initial ec remover triggered 304250 times\n  0:58:42.517  1342M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Initial isolated edge remover\n  0:58:46.395  1281M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Initial isolated edge remover triggered 1530197 times\n  0:58:46.475  1194M / 5513M INFO   StageManager             (stage.cpp                 : 185)   STAGE == Simplification (id: simplification)\n  0:58:46.476  1194M / 5513M INFO    General                 (simplification.cpp        : 368)   Graph simplification started\n  0:58:46.477  1194M / 5513M INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:58:46.478  1194M / 5513M INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 1\n  0:58:46.479  1194M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  0:58:48.029  1187M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 107663 times\n  0:58:48.053  1187M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  0:58:59.877  1184M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 133629 times\n  0:58:59.914  1184M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover\n  0:59:00.454  1186M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 280 times\n  0:59:00.455  1186M / 5513M INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 2\n  0:59:00.456  1186M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  0:59:00.574  1181M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 6001 times\n  0:59:00.577  1181M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  0:59:00.601  1176M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 200 times\n  0:59:00.602  1176M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover\n  0:59:00.686  1177M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 10089 times\n  0:59:00.691  1177M / 5513M INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 3\n  0:59:00.692  1177M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  0:59:00.707  1177M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 1410 times\n  0:59:00.709  1177M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  0:59:01.191  1177M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 1590 times\n  0:59:01.193  1177M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover\n  0:59:01.421  1179M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 29758 times\n  0:59:01.432  1179M / 5513M INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 4\n  0:59:01.433  1179M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  0:59:02.183  1177M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 2366 times\n  0:59:02.185  1177M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  0:59:05.810  1175M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 4949 times\n  0:59:05.813  1175M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover\n  0:59:06.293  1173M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 5 times\n  0:59:06.293  1173M / 5513M INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 5\n  0:59:06.294  1173M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  0:59:06.304  1173M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 77 times\n  0:59:06.305  1173M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  0:59:06.307  1172M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 4 times\n  0:59:06.307  1172M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover\n  0:59:06.308  1172M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times\n  0:59:06.309  1172M / 5513M INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 6\n  0:59:06.310  1172M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  0:59:06.311  1172M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times\n  0:59:06.312  1172M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  0:59:06.312  1172M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times\n  0:59:06.313  1172M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover\n  0:59:06.314  1172M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times\n  0:59:06.442  1170M / 5513M INFO   StageManager             (stage.cpp                 : 185)   STAGE == Simplification Cleanup (id: simplification_cleanup)\n  0:59:06.443  1170M / 5513M INFO    General                 (simplification.cpp        : 176)   PROCEDURE == Post simplification\n  0:59:06.444  1170M / 5513M INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:59:06.445  1170M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Relative coverage component remover\n  0:59:10.285  1168M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Relative coverage component remover triggered 9581 times\n  0:59:10.290  1168M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Disconnecting edges with relatively low coverage\n  0:59:12.011  1168M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Disconnecting edges with relatively low coverage triggered 2490 times\n  0:59:12.012  1168M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Complex tip clipper\n  0:59:13.557  1168M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Complex tip clipper triggered 994 times\n  0:59:13.559  1168M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Complex bulge remover\n  0:59:17.318  1168M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Complex bulge remover triggered 2181 times\n  0:59:17.320  1168M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  0:59:18.045  1168M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 1533 times\n  0:59:18.046  1168M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Final tip clipper\n  0:59:18.818  1168M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Final tip clipper triggered 7752 times\n  0:59:18.820  1168M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  0:59:20.031  1169M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 995 times\n  0:59:20.032  1169M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Thorn remover (meta)\n  0:59:20.520  1169M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Thorn remover (meta) triggered 0 times\n  0:59:20.521  1169M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Relative coverage component remover\n  0:59:23.225  1169M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Relative coverage component remover triggered 298 times\n  0:59:23.227  1169M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Disconnecting edges with relatively low coverage\n  0:59:24.782  1168M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Disconnecting edges with relatively low coverage triggered 250 times\n  0:59:24.783  1168M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Complex tip clipper\n  0:59:26.347  1168M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Complex tip clipper triggered 81 times\n  0:59:26.348  1168M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Complex bulge remover\n  0:59:30.002  1168M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Complex bulge remover triggered 122 times\n  0:59:30.003  1168M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  0:59:30.744  1168M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 575 times\n  0:59:30.745  1168M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Final tip clipper\n  0:59:31.484  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Final tip clipper triggered 144 times\n  0:59:31.485  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  0:59:32.461  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 102 times\n  0:59:32.462  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Thorn remover (meta)\n  0:59:32.924  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Thorn remover (meta) triggered 0 times\n  0:59:32.925  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Relative coverage component remover\n  0:59:35.438  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Relative coverage component remover triggered 23 times\n  0:59:35.439  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Disconnecting edges with relatively low coverage\n  0:59:35.446  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Disconnecting edges with relatively low coverage triggered 10 times\n  0:59:35.447  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Complex tip clipper\n  0:59:37.032  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Complex tip clipper triggered 6 times\n  0:59:37.033  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Complex bulge remover\n  0:59:40.602  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Complex bulge remover triggered 24 times\n  0:59:40.603  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  0:59:40.604  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 7 times\n  0:59:40.605  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Final tip clipper\n  0:59:40.606  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Final tip clipper triggered 2 times\n  0:59:40.606  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  0:59:40.608  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 7 times\n  0:59:40.609  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Thorn remover (meta)\n  0:59:40.610  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Thorn remover (meta) triggered 0 times\n  0:59:40.610  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Relative coverage component remover\n  0:59:43.170  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Relative coverage component remover triggered 1 times\n  0:59:43.171  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Disconnecting edges with relatively low coverage\n  0:59:43.172  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Disconnecting edges with relatively low coverage triggered 1 times\n  0:59:43.173  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Complex tip clipper\n  0:59:44.746  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Complex tip clipper triggered 0 times\n  0:59:44.747  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Complex bulge remover\n  0:59:48.351  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Complex bulge remover triggered 2 times\n  0:59:48.352  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  0:59:48.353  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 1 times\n  0:59:48.354  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Final tip clipper\n  0:59:48.355  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Final tip clipper triggered 0 times\n  0:59:48.356  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  0:59:48.357  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 2 times\n  0:59:48.358  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Thorn remover (meta)\n  0:59:48.359  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Thorn remover (meta) triggered 0 times\n  0:59:48.360  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Relative coverage component remover\n  0:59:50.945  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Relative coverage component remover triggered 2 times\n  0:59:50.946  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Disconnecting edges with relatively low coverage\n  0:59:50.947  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Disconnecting edges with relatively low coverage triggered 0 times\n  0:59:50.948  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Complex tip clipper\n  0:59:52.497  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Complex tip clipper triggered 0 times\n  0:59:52.498  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Complex bulge remover\n  0:59:56.130  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Complex bulge remover triggered 0 times\n  0:59:56.131  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  0:59:56.132  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times\n  0:59:56.133  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Final tip clipper\n  0:59:56.134  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Final tip clipper triggered 0 times\n  0:59:56.135  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  0:59:56.136  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 1 times\n  0:59:56.136  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Thorn remover (meta)\n  0:59:56.137  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Thorn remover (meta) triggered 0 times\n  0:59:56.138  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Relative coverage component remover\n  0:59:58.641  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Relative coverage component remover triggered 0 times\n  0:59:58.643  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Disconnecting edges with relatively low coverage\n  0:59:58.644  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Disconnecting edges with relatively low coverage triggered 0 times\n  0:59:58.645  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Complex tip clipper\n  1:00:00.197  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Complex tip clipper triggered 0 times\n  1:00:00.198  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Complex bulge remover\n  1:00:03.817  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Complex bulge remover triggered 0 times\n  1:00:03.818  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  1:00:03.819  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times\n  1:00:03.820  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Final tip clipper\n  1:00:03.820  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Final tip clipper triggered 0 times\n  1:00:03.821  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  1:00:03.822  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times\n  1:00:03.823  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Thorn remover (meta)\n  1:00:03.824  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Thorn remover (meta) triggered 0 times\n  1:00:03.825  1167M / 5513M INFO    General                 (simplification.cpp        : 323)   Running Hidden EC remover (meta)\n  1:00:04.228  1167M / 5513M INFO    General                 (simplification.cpp        : 327)   Disrupting self-conjugate edges\n  1:00:05.242  1167M / 5513M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Removing isolated edges\n  1:00:06.049  1166M / 5513M INFO   Simplification           (parallel_processing.hpp   : 170)   Removing isolated edges triggered 8391 times\n  1:00:06.115  1166M / 5513M INFO    General                 (simplification.cpp        : 495)   After simplification:\n  1:00:06.116  1166M / 5513M INFO    General                 (simplification.cpp        : 496)     Average coverage = 2.15517\n  1:00:06.171  1166M / 5513M INFO    General                 (simplification.cpp        : 497)     Total length = 323494204\n  1:00:06.317  1166M / 5513M INFO    General                 (simplification.cpp        : 498)     Median edge length: 232\n  1:00:06.318  1166M / 5513M INFO    General                 (simplification.cpp        : 499)     Edges: 2708414\n  1:00:06.319  1166M / 5513M INFO    General                 (simplification.cpp        : 500)     Vertices: 4943028\n  1:00:06.320  1166M / 5513M INFO   StageManager             (stage.cpp                 : 185)   STAGE == Contig Output (id: contig_output)\n  1:00:06.329  1166M / 5513M INFO    General                 (read_converter.cpp        : 107)   Outputting contigs to /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K33/simplified_contigs\n  1:00:06.338  1169M / 5513M INFO    General                 (binary_converter.cpp      :  96)   16384 reads processed\n  1:00:06.340  1169M / 5513M INFO    General                 (binary_converter.cpp      :  96)   32768 reads processed\n  1:00:06.354  1169M / 5513M INFO    General                 (binary_converter.cpp      :  96)   65536 reads processed\n  1:00:06.371  1169M / 5513M INFO    General                 (binary_converter.cpp      :  96)   131072 reads processed\n  1:00:06.413  1169M / 5513M INFO    General                 (binary_converter.cpp      :  96)   262144 reads processed\n  1:00:06.487  1169M / 5513M INFO    General                 (binary_converter.cpp      :  96)   524288 reads processed\n  1:00:06.624  1169M / 5513M INFO    General                 (binary_converter.cpp      :  96)   1048576 reads processed\n  1:00:06.724  1169M / 5513M INFO    General                 (binary_converter.cpp      : 111)   1354284 reads written\n  1:00:06.839  1166M / 5513M INFO    General                 (pipeline.cpp              : 287)   SPAdes finished\n  1:00:07.670     1M / 5513M INFO    General                 (main.cpp                  : 136)   Assembling time: 1 hours 0 minutes 7 seconds\n\n===== K33 finished. \n\n\n===== K55 started. \n\n\n== Running: /opt/ohpc/pub/apps/spades/3.15.5/bin/spades-core /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K55/configs/config.info /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K55/configs/mda_mode.info /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K55/configs/meta_mode.info\n\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  :  99)   Loaded config from /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K55/configs/config.info\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  :  99)   Loaded config from /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K55/configs/mda_mode.info\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  :  99)   Loaded config from /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K55/configs/meta_mode.info\n  0:00:00.000     1M / 11M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 250 Gb\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  : 107)   Starting SPAdes, built from refs/heads/spades_3.15.5, git revision e757b8216f9a038fb616e9551a2d4891b2d19ad7\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  : 108)   Maximum k-mer length: 128\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  : 109)   Assembling dataset (/xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/dataset.info) with K=55\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  : 110)   Maximum # of threads to use (adjusted due to OMP capabilities): 1\n  0:00:00.000     1M / 11M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.000     1M / 11M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.000     1M / 11M   INFO    General                 (pipeline.cpp              : 231)   Two-step repeat resolution disabled\n  0:00:00.000     1M / 11M   INFO   GraphCore                (graph_core.hpp            : 672)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.000     1M / 11M   INFO   GraphCore                (graph_core.hpp            : 673)   Vertex size: 48, edge size: 40\n  0:00:00.000     1M / 11M   INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8\n  0:00:00.000     1M / 11M   INFO    General                 (pipeline.cpp              : 242)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     1M / 11M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.003     1M / 11M   INFO    General                 (read_converter.cpp        :  53)   Binary reads detected\n  0:00:00.003     1M / 11M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.003     1M / 11M   INFO    General                 (construction.cpp          : 118)   Contigs from previous K will be used: /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K33/simplified_contigs\n  0:00:00.013     1M / 11M   INFO    General                 (construction.cpp          : 153)   Max read length 151\n  0:00:00.013     1M / 11M   INFO    General                 (construction.cpp          : 159)   Average read length 145.179\n  0:00:00.013     1M / 11M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.013     1M / 11M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 10 files using 1 threads. This might take a while.\n  0:00:00.019     1M / 11M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 4096\n  0:00:00.019     1M / 11M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 83.3333 Gb\n  0:00:00.019     1M / 11M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 3355443\n  0:00:06.485   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 705225 reads\n  0:00:12.657   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 1449614 reads\n  0:00:18.869   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 2195642 reads\n  0:00:25.043   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 2940935 reads\n  0:00:31.210   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 3685414 reads\n  0:00:37.402   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 4430377 reads\n  0:00:43.613   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 5174725 reads\n  0:00:49.759   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 5918788 reads\n  0:01:14.356   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 8897539 reads\n  0:02:22.076   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 17090053 reads\n  0:03:42.234     1M / 577M  INFO    General                 (kmer_splitters.hpp        : 131)   Used 22913724 reads\n  0:03:42.235     1M / 577M  INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.\n  0:04:57.091     1M / 1652M INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 559165017 kmers in total.\n  0:04:57.092     1M / 1652M INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:04:57.104     1M / 1652M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 438)   Building kmer index\n  0:04:57.104     1M / 1652M INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 10 files using 1 threads. This might take a while.\n  0:04:57.106     1M / 1652M INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 4096\n  0:04:57.106     1M / 1652M INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 83.3333 Gb\n  0:04:57.106     1M / 1652M INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 3355443\n  0:04:59.856   601M / 1652M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 7297292 kmers\n  0:05:02.814   601M / 1652M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 15230824 kmers\n  0:05:06.268   601M / 1652M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 24473891 kmers\n  0:05:09.614   601M / 1652M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 33381509 kmers\n  0:05:12.993   601M / 1652M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 42420436 kmers\n  0:05:15.923   601M / 1652M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 50237854 kmers\n  0:05:19.938   601M / 1652M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 60976330 kmers\n  0:05:22.765   601M / 1652M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 68549073 kmers\n  0:05:26.186   601M / 1652M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 77691834 kmers\n  0:05:29.528   601M / 1652M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 86654583 kmers\n  0:05:32.953   601M / 1652M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 95797257 kmers\n  0:05:35.971   601M / 1652M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 103839328 kmers\n  0:05:38.899   601M / 1652M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 111578805 kmers\n  0:05:41.694   601M / 1652M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 119049240 kmers\n  0:05:44.658   601M / 1652M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 126981930 kmers\n  0:05:48.096   601M / 1652M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 136199673 kmers\n  0:05:51.395   601M / 1652M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 145084268 kmers\n  0:05:55.261   601M / 1652M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 154132739 kmers\n  0:06:40.064   601M / 1652M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 273706501 kmers\n  0:08:20.215   601M / 1652M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 541956920 kmers\n  0:08:26.644   601M / 1652M INFO    General                 (kmer_splitters.hpp        : 199)   Used 559165372 kmers.\n  0:08:26.644     1M / 1652M INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.\n  0:09:43.279     1M / 2065M INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 562221193 kmers in total.\n  0:09:43.279     1M / 2065M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices\n  0:12:35.455   395M / 2065M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 562221193 kmers, 406079488 bytes occupied (5.77822 bits per kmer).\n  0:12:35.455   395M / 2065M INFO    General                 (kmer_index_builder.hpp    : 169)   Merging final buckets.\n  0:12:46.225   935M / 2065M INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 100)   Building k-mer extensions from k+1-mers\n  0:19:04.408   935M / 2065M INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 105)   Building k-mer extensions from k+1-mers finished.\n  0:19:04.411   935M / 2065M INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:19:04.417   935M / 2065M INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 354)   Extracting unbranching paths\n  0:28:32.267  1378M / 2065M INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 373)   Extracting unbranching paths finished. 7243644 sequences extracted\n  0:31:40.896  1378M / 2068M INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 309)   Collecting perfect loops\n  0:34:31.232  1380M / 2068M INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 342)   Collecting perfect loops finished. 264 loops collected\n  0:34:31.472  1378M / 2068M INFO    General                 (debruijn_graph_constructor: 487)   Total 14487816 edges to create\n  0:34:31.472  1936M / 2068M INFO    General                 (debruijn_graph_constructor: 489)   Collecting link records\n  0:34:37.704  2160M / 2344M INFO    General                 (debruijn_graph_constructor: 491)   Ordering link records\n  0:34:39.085  2160M / 2344M INFO    General                 (debruijn_graph_constructor: 493)   Sorting done\n  0:34:39.158  2288M / 2534M INFO    General                 (debruijn_graph_constructor: 503)   Total 10300084 vertices to create\n  0:34:39.159  3239M / 3239M INFO    General                 (debruijn_graph_constructor: 506)   Connecting the graph\n  0:34:40.981  2774M / 3392M INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:34:40.981  2774M / 3392M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices\n  0:37:31.514  3168M / 3555M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 559165017 kmers, 403872120 bytes occupied (5.77822 bits per kmer).\n  0:37:31.830  5304M / 5625M INFO    General                 (coverage_hash_map_builder.:  47)   Collecting k-mer coverage information from reads, this takes a while.\n  0:41:43.281  5304M / 5625M INFO    General                 (construction.cpp          : 430)   Filling coverage and flanking coverage from PHM\n  0:42:08.455  5304M / 5625M INFO    General                 (coverage_filling.hpp      :  82)   Processed 1000000 edges\n  0:42:33.467  5304M / 5625M INFO    General                 (coverage_filling.hpp      :  82)   Processed 2000000 edges\n  0:42:58.538  5304M / 5625M INFO    General                 (coverage_filling.hpp      :  82)   Processed 3000000 edges\n  0:43:23.587  5304M / 5625M INFO    General                 (coverage_filling.hpp      :  82)   Processed 4000000 edges\n  0:43:48.534  5304M / 5625M INFO    General                 (coverage_filling.hpp      :  82)   Processed 5000000 edges\n  0:44:13.493  5304M / 5625M INFO    General                 (coverage_filling.hpp      :  82)   Processed 6000000 edges\n  0:44:38.584  5304M / 5625M INFO    General                 (coverage_filling.hpp      :  82)   Processed 7000000 edges\n  0:45:03.610  5304M / 5625M INFO    General                 (coverage_filling.hpp      :  82)   Processed 8000000 edges\n  0:45:28.704  5304M / 5625M INFO    General                 (coverage_filling.hpp      :  82)   Processed 9000000 edges\n  0:45:53.739  5304M / 5625M INFO    General                 (coverage_filling.hpp      :  82)   Processed 10000000 edges\n  0:46:18.806  5304M / 5625M INFO    General                 (coverage_filling.hpp      :  82)   Processed 11000000 edges\n  0:46:43.920  5304M / 5625M INFO    General                 (coverage_filling.hpp      :  82)   Processed 12000000 edges\n  0:47:09.005  5304M / 5625M INFO    General                 (coverage_filling.hpp      :  82)   Processed 13000000 edges\n  0:47:34.037  5304M / 5625M INFO    General                 (coverage_filling.hpp      :  82)   Processed 14000000 edges\n  0:47:48.233  1840M / 5625M INFO   StageManager             (stage.cpp                 : 185)   STAGE == Gap Closer (id: early_gapcloser)\n  0:47:48.242  1849M / 5625M INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8\n  0:47:58.659  2121M / 5625M INFO    General                 (gap_closer.cpp            : 101)   Total edges in tip neighborhood: 9897748 out of 14487677, length: 872417151\n  0:47:59.442  2217M / 5625M INFO    General                 (edge_index.hpp            : 167)   Using small index (max_id = 14560258)\n  0:48:20.603  2217M / 5625M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices\n  0:54:23.009  2573M / 5625M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 506584027 kmers, 365888256 bytes occupied (5.77813 bits per kmer).\n  0:54:23.585  6441M / 6923M INFO    General                 (edge_index_builders.hpp   : 265)   Collecting edge information from graph, this takes a while.\n  0:57:31.723  6361M / 6925M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 200000 reads\n  0:57:35.532  6382M / 6925M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 400000 reads\n  0:57:39.237  6392M / 6925M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 600000 reads\n  0:57:42.986  6403M / 6925M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 800000 reads\n  0:57:46.830  6433M / 6925M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 1000000 reads\n  0:57:50.589  6444M / 6925M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 1200000 reads\n  0:58:09.307  6535M / 6925M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 2200000 reads\n  0:58:55.877  6711M / 7077M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 4200000 reads\n  0:59:11.549  6743M / 7077M INFO    General                 (sequence_mapper_notifier.h:  95)   Total 4879083 reads processed\n  0:59:15.154  2493M / 7309M INFO    General                 (gap_closer.cpp            : 452)   Initializing gap closer\n  0:59:15.156  2493M / 7309M INFO   GapCloser                (gap_closer.cpp            : 359)   Closing short gaps\n  0:59:30.397  2494M / 7309M INFO   GapCloser                (gap_closer.cpp            : 391)   Closing short gaps complete: filled 33172 gaps after checking 852889 candidates\n  0:59:30.780  2492M / 7309M INFO    General                 (gap_closer.cpp            : 456)   Gap closer done\n  0:59:31.663  1839M / 7309M INFO   StageManager             (stage.cpp                 : 185)   STAGE == Raw Simplification (id: raw_simplification)\n  0:59:31.664  1839M / 7309M INFO    General                 (simplification.cpp        : 127)   PROCEDURE == Initial cleaning\n  0:59:31.665  1839M / 7309M INFO    General                 (graph_simplification.hpp  : 662)   Flanking coverage based disconnection disabled\n  0:59:31.666  1839M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Self conjugate edge remover\n  0:59:32.886  1839M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Self conjugate edge remover triggered 104 times\n  0:59:32.887  1839M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Initial tip clipper\n  0:59:46.958  1772M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Initial tip clipper triggered 1765438 times\n  0:59:47.004  1772M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Initial ec remover\n  0:59:48.760  1775M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Initial ec remover triggered 79670 times\n  0:59:48.790  1775M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Initial isolated edge remover\n  0:59:53.569  1693M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Initial isolated edge remover triggered 2174062 times\n  0:59:53.692  1615M / 7309M INFO   StageManager             (stage.cpp                 : 185)   STAGE == Simplification (id: simplification)\n  0:59:53.693  1615M / 7309M INFO    General                 (simplification.cpp        : 368)   Graph simplification started\n  0:59:53.694  1615M / 7309M INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:59:53.695  1615M / 7309M INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 1\n  0:59:53.697  1615M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  0:59:54.687  1613M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 41927 times\n  0:59:54.697  1613M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  1:00:03.597  1876M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 37936 times\n  1:00:03.606  1876M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover\n  1:00:04.096  1877M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 42 times\n  1:00:04.098  1877M / 7309M INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 2\n  1:00:04.100  1877M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  1:00:04.131  1875M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 1032 times\n  1:00:04.133  1875M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  1:00:04.149  1873M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 41 times\n  1:00:04.151  1873M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover\n  1:00:04.172  1874M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 2238 times\n  1:00:04.174  1874M / 7309M INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 3\n  1:00:04.176  1874M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  1:00:04.180  1874M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 192 times\n  1:00:04.182  1874M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  1:00:04.364  1877M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 411 times\n  1:00:04.368  1877M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover\n  1:00:04.436  1877M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 8304 times\n  1:00:04.440  1877M / 7309M INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 4\n  1:00:04.442  1877M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  1:00:05.120  1877M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 775 times\n  1:00:05.122  1877M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  1:00:06.488  1891M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 2054 times\n  1:00:06.499  1891M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover\n  1:00:06.958  1890M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times\n  1:00:06.960  1890M / 7309M INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 5\n  1:00:06.962  1890M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  1:00:06.967  1890M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 27 times\n  1:00:06.969  1890M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  1:00:06.975  1889M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 5 times\n  1:00:06.977  1889M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover\n  1:00:06.979  1889M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times\n  1:00:06.981  1889M / 7309M INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 6\n  1:00:06.983  1889M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  1:00:06.985  1889M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times\n  1:00:06.987  1889M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  1:00:06.989  1889M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times\n  1:00:06.991  1889M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover\n  1:00:06.993  1889M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times\n  1:00:07.163  1889M / 7309M INFO   StageManager             (stage.cpp                 : 185)   STAGE == Gap Closer (id: late_gapcloser)\n  1:00:07.174  1898M / 7309M INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8\n  1:00:08.243  1966M / 7309M INFO    General                 (gap_closer.cpp            : 101)   Total edges in tip neighborhood: 2026483 out of 2147966, length: 537241428\n  1:00:08.398  1982M / 7309M INFO    General                 (edge_index.hpp            : 167)   Using small index (max_id = 14560258)\n  1:00:18.111  1982M / 7309M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices\n  1:03:22.483  2174M / 7309M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 272012932 kmers, 196506356 bytes occupied (5.77932 bits per kmer).\n  1:03:22.802  4250M / 7309M INFO    General                 (edge_index_builders.hpp   : 265)   Collecting edge information from graph, this takes a while.\n  1:05:08.000  4241M / 7309M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 200000 reads\n  1:05:21.708  4252M / 7309M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 400000 reads\n  1:05:35.513  4257M / 7309M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 600000 reads\n  1:05:49.251  4272M / 7309M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 800000 reads\n  1:06:03.139  4276M / 7309M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 1000000 reads\n  1:06:16.932  4281M / 7309M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 1200000 reads\n  1:07:26.140  4321M / 7309M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 2200000 reads\n  1:09:44.720  4353M / 7309M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 4200000 reads\n  1:10:31.782  4403M / 7309M INFO    General                 (sequence_mapper_notifier.h:  95)   Total 4879083 reads processed\n  1:10:33.152  2160M / 7309M INFO    General                 (gap_closer.cpp            : 452)   Initializing gap closer\n  1:10:33.159  2160M / 7309M INFO   GapCloser                (gap_closer.cpp            : 359)   Closing short gaps\n  1:10:34.843  2160M / 7309M INFO   GapCloser                (gap_closer.cpp            : 391)   Closing short gaps complete: filled 661 gaps after checking 51751 candidates\n  1:10:35.017  2160M / 7309M INFO    General                 (gap_closer.cpp            : 456)   Gap closer done\n  1:10:35.358  1889M / 7309M INFO   StageManager             (stage.cpp                 : 185)   STAGE == Simplification Cleanup (id: simplification_cleanup)\n  1:10:35.366  1889M / 7309M INFO    General                 (simplification.cpp        : 176)   PROCEDURE == Post simplification\n  1:10:35.368  1889M / 7309M INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  1:10:35.370  1889M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Relative coverage component remover\n  1:10:36.557  1889M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Relative coverage component remover triggered 5641 times\n  1:10:36.560  1889M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Disconnecting edges with relatively low coverage\n  1:10:37.349  1888M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Disconnecting edges with relatively low coverage triggered 904 times\n  1:10:37.351  1888M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Complex tip clipper\n  1:10:39.244  1888M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Complex tip clipper triggered 337 times\n  1:10:39.246  1888M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Complex bulge remover\n  1:10:43.332  1905M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Complex bulge remover triggered 1017 times\n  1:10:43.344  1905M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  1:10:44.010  1905M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 511 times\n  1:10:44.012  1905M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Final tip clipper\n  1:10:44.692  1905M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Final tip clipper triggered 2301 times\n  1:10:44.694  1905M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  1:10:45.316  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 394 times\n  1:10:45.320  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Thorn remover (meta)\n  1:10:45.748  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Thorn remover (meta) triggered 0 times\n  1:10:45.750  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Relative coverage component remover\n  1:10:46.643  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Relative coverage component remover triggered 91 times\n  1:10:46.645  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Disconnecting edges with relatively low coverage\n  1:10:47.387  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Disconnecting edges with relatively low coverage triggered 50 times\n  1:10:47.389  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Complex tip clipper\n  1:10:49.290  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Complex tip clipper triggered 21 times\n  1:10:49.292  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Complex bulge remover\n  1:10:52.935  1909M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Complex bulge remover triggered 56 times\n  1:10:52.937  1909M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  1:10:53.587  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 87 times\n  1:10:53.589  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Final tip clipper\n  1:10:54.235  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Final tip clipper triggered 26 times\n  1:10:54.237  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  1:10:54.733  1909M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 23 times\n  1:10:54.735  1909M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Thorn remover (meta)\n  1:10:55.143  1909M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Thorn remover (meta) triggered 0 times\n  1:10:55.145  1909M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Relative coverage component remover\n  1:10:56.020  1909M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Relative coverage component remover triggered 11 times\n  1:10:56.022  1909M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Disconnecting edges with relatively low coverage\n  1:10:56.025  1909M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Disconnecting edges with relatively low coverage triggered 1 times\n  1:10:56.027  1909M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Complex tip clipper\n  1:10:57.894  1909M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Complex tip clipper triggered 0 times\n  1:10:57.896  1909M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Complex bulge remover\n  1:11:01.414  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Complex bulge remover triggered 6 times\n  1:11:01.416  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  1:11:01.418  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 2 times\n  1:11:01.420  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Final tip clipper\n  1:11:01.422  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Final tip clipper triggered 1 times\n  1:11:01.424  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  1:11:01.426  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times\n  1:11:01.428  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Thorn remover (meta)\n  1:11:01.430  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Thorn remover (meta) triggered 0 times\n  1:11:01.432  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Relative coverage component remover\n  1:11:02.314  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Relative coverage component remover triggered 0 times\n  1:11:02.316  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Disconnecting edges with relatively low coverage\n  1:11:02.318  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Disconnecting edges with relatively low coverage triggered 0 times\n  1:11:02.320  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Complex tip clipper\n  1:11:04.207  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Complex tip clipper triggered 0 times\n  1:11:04.209  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Complex bulge remover\n  1:11:07.766  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Complex bulge remover triggered 0 times\n  1:11:07.768  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  1:11:07.770  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times\n  1:11:07.771  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Final tip clipper\n  1:11:07.773  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Final tip clipper triggered 0 times\n  1:11:07.775  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  1:11:07.777  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times\n  1:11:07.779  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Thorn remover (meta)\n  1:11:07.781  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Thorn remover (meta) triggered 0 times\n  1:11:07.783  1908M / 7309M INFO    General                 (simplification.cpp        : 323)   Running Hidden EC remover (meta)\n  1:11:08.222  1908M / 7309M INFO    General                 (simplification.cpp        : 327)   Disrupting self-conjugate edges\n  1:11:08.981  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Removing isolated edges\n  1:11:09.704  1908M / 7309M INFO   Simplification           (parallel_processing.hpp   : 170)   Removing isolated edges triggered 2253 times\n  1:11:09.782  1908M / 7309M INFO    General                 (simplification.cpp        : 495)   After simplification:\n  1:11:09.784  1908M / 7309M INFO    General                 (simplification.cpp        : 496)     Average coverage = 1.83792\n  1:11:09.850  1908M / 7309M INFO    General                 (simplification.cpp        : 497)     Total length = 272845140\n  1:11:09.986  1908M / 7309M INFO    General                 (simplification.cpp        : 498)     Median edge length: 236\n  1:11:09.988  1908M / 7309M INFO    General                 (simplification.cpp        : 499)     Edges: 2083014\n  1:11:09.990  1908M / 7309M INFO    General                 (simplification.cpp        : 500)     Vertices: 4048326\n  1:11:09.992  1908M / 7309M INFO   StageManager             (stage.cpp                 : 185)   STAGE == Contig Output (id: contig_output)\n  1:11:10.000  1908M / 7309M INFO    General                 (read_converter.cpp        : 107)   Outputting contigs to /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K55/simplified_contigs\n  1:11:10.009  1911M / 7309M INFO    General                 (binary_converter.cpp      :  96)   16384 reads processed\n  1:11:10.013  1911M / 7309M INFO    General                 (binary_converter.cpp      :  96)   32768 reads processed\n  1:11:10.033  1911M / 7309M INFO    General                 (binary_converter.cpp      :  96)   65536 reads processed\n  1:11:10.056  1911M / 7309M INFO    General                 (binary_converter.cpp      :  96)   131072 reads processed\n  1:11:10.103  1911M / 7309M INFO    General                 (binary_converter.cpp      :  96)   262144 reads processed\n  1:11:10.191  1911M / 7309M INFO    General                 (binary_converter.cpp      :  96)   524288 reads processed\n  1:11:10.361  1911M / 7309M INFO    General                 (binary_converter.cpp      : 111)   1041510 reads written\n  1:11:10.450  1908M / 7309M INFO    General                 (pipeline.cpp              : 287)   SPAdes finished\n  1:11:12.226     1M / 7309M INFO    General                 (main.cpp                  : 136)   Assembling time: 1 hours 11 minutes 12 seconds\n\n===== K55 finished. \n\n\n===== K77 started. \n\n\n== Running: /opt/ohpc/pub/apps/spades/3.15.5/bin/spades-core /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K77/configs/config.info /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K77/configs/mda_mode.info /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K77/configs/meta_mode.info\n\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  :  99)   Loaded config from /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K77/configs/config.info\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  :  99)   Loaded config from /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K77/configs/mda_mode.info\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  :  99)   Loaded config from /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K77/configs/meta_mode.info\n  0:00:00.000     1M / 11M   INFO    General                 (memory_limit.cpp          :  54)   Memory limit set to 250 Gb\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  : 107)   Starting SPAdes, built from refs/heads/spades_3.15.5, git revision e757b8216f9a038fb616e9551a2d4891b2d19ad7\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  : 108)   Maximum k-mer length: 128\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  : 109)   Assembling dataset (/xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/dataset.info) with K=77\n  0:00:00.000     1M / 11M   INFO    General                 (main.cpp                  : 110)   Maximum # of threads to use (adjusted due to OMP capabilities): 1\n  0:00:00.000     1M / 11M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.000     1M / 11M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.000     1M / 11M   INFO    General                 (pipeline.cpp              : 231)   Two-step repeat resolution enabled\n  0:00:00.000     1M / 11M   INFO   GraphCore                (graph_core.hpp            : 672)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.000     1M / 11M   INFO   GraphCore                (graph_core.hpp            : 673)   Vertex size: 48, edge size: 40\n  0:00:00.000     1M / 11M   INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8\n  0:00:00.000     1M / 11M   INFO    General                 (pipeline.cpp              : 242)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     1M / 11M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.002     1M / 11M   INFO    General                 (read_converter.cpp        :  53)   Binary reads detected\n  0:00:00.002     1M / 11M   INFO   StageManager             (stage.cpp                 : 185)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.002     1M / 11M   INFO    General                 (construction.cpp          : 118)   Contigs from previous K will be used: /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K55/simplified_contigs\n  0:00:00.013     1M / 11M   INFO    General                 (construction.cpp          : 153)   Max read length 151\n  0:00:00.013     1M / 11M   INFO    General                 (construction.cpp          : 159)   Average read length 145.179\n  0:00:00.013     1M / 11M   INFO    General                 (stage.cpp                 : 117)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.013     1M / 11M   INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 10 files using 1 threads. This might take a while.\n  0:00:00.027     1M / 11M   INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 4096\n  0:00:00.027     1M / 11M   INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 83.3333 Gb\n  0:00:00.027     1M / 11M   INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 2236962\n  0:00:04.601   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 610616 reads\n  0:00:09.012   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 1259970 reads\n  0:00:13.415   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 1915865 reads\n  0:00:17.860   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 2571953 reads\n  0:00:22.273   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 3226172 reads\n  0:00:26.709   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 3881620 reads\n  0:00:31.123   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 4537266 reads\n  0:00:35.539   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 5192258 reads\n  0:00:57.570   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 8467092 reads\n  0:01:55.012   601M / 601M  INFO    General                 (kmer_splitters.hpp        : 125)   Processed 16987242 reads\n  0:03:05.579     1M / 577M  INFO    General                 (kmer_splitters.hpp        : 131)   Used 22288176 reads\n  0:03:05.580     1M / 577M  INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.\n  0:04:18.443     1M / 1979M INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 484899156 kmers in total.\n  0:04:18.443     1M / 1979M INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:04:18.456     1M / 1979M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 438)   Building kmer index\n  0:04:18.456     1M / 1979M INFO    General                 (kmer_index_builder.hpp    : 243)   Splitting kmer instances into 10 files using 1 threads. This might take a while.\n  0:04:18.459     1M / 1979M INFO    General                 (file_limit.hpp            :  42)   Open file limit set to 4096\n  0:04:18.459     1M / 1979M INFO    General                 (kmer_splitter.hpp         :  93)   Memory available for splitting buffers: 83.3333 Gb\n  0:04:18.459     1M / 1979M INFO    General                 (kmer_splitter.hpp         : 101)   Using cell size of 2236962\n  0:04:20.587   601M / 1979M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 5110489 kmers\n  0:04:22.818   601M / 1979M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 10463887 kmers\n  0:04:25.158   601M / 1979M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 16150372 kmers\n  0:04:27.565   601M / 1979M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 21937751 kmers\n  0:04:29.888   601M / 1979M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 27493720 kmers\n  0:04:32.304   601M / 1979M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 33277089 kmers\n  0:04:34.540   601M / 1979M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 38699765 kmers\n  0:04:36.843   601M / 1979M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 44214502 kmers\n  0:04:39.632   601M / 1979M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 51057427 kmers\n  0:04:41.923   601M / 1979M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 56592403 kmers\n  0:04:44.085   601M / 1979M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 61880073 kmers\n  0:04:46.494   601M / 1979M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 67707881 kmers\n  0:04:48.826   601M / 1979M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 73355874 kmers\n  0:04:51.218   601M / 1979M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 79107315 kmers\n  0:04:53.537   601M / 1979M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 84717305 kmers\n  0:04:55.729   601M / 1979M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 90003723 kmers\n  0:04:58.034   601M / 1979M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 95602300 kmers\n  0:05:14.385   601M / 1979M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 135185580 kmers\n  0:06:10.158   601M / 1979M INFO    General                 (kmer_splitters.hpp        : 194)   Processed 269905032 kmers\n  0:07:39.102   601M / 1979M INFO    General                 (kmer_splitters.hpp        : 199)   Used 484899625 kmers.\n  0:07:39.102     1M / 1979M INFO    General                 (kmer_index_builder.hpp    : 249)   Starting k-mer counting.\n  0:09:01.227     1M / 2581M INFO    General                 (kmer_index_builder.hpp    : 260)   K-mer counting done. There are 488357307 kmers in total.\n  0:09:01.227     1M / 2581M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices\n  0:11:34.306   349M / 2581M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 488357307 kmers, 352730256 bytes occupied (5.77823 bits per kmer).\n  0:11:34.306   349M / 2581M INFO    General                 (kmer_index_builder.hpp    : 169)   Merging final buckets.\n  0:11:48.737   817M / 2581M INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 100)   Building k-mer extensions from k+1-mers\n  0:17:21.928   817M / 2581M INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 105)   Building k-mer extensions from k+1-mers finished.\n  0:17:21.933   817M / 2581M INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:17:21.939   817M / 2581M INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 354)   Extracting unbranching paths\n  0:25:39.754  1238M / 2581M INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 373)   Extracting unbranching paths finished. 6354297 sequences extracted\n  0:28:27.469  1238M / 2581M INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 309)   Collecting perfect loops\n  0:30:53.752  1240M / 2581M INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 342)   Collecting perfect loops finished. 246 loops collected\n  0:30:53.986  1238M / 2581M INFO    General                 (debruijn_graph_constructor: 487)   Total 12709086 edges to create\n  0:30:53.986  1728M / 2581M INFO    General                 (debruijn_graph_constructor: 489)   Collecting link records\n  0:31:00.328  1924M / 2581M INFO    General                 (debruijn_graph_constructor: 491)   Ordering link records\n  0:31:01.515  1924M / 2581M INFO    General                 (debruijn_graph_constructor: 493)   Sorting done\n  0:31:01.570  2052M / 2581M INFO    General                 (debruijn_graph_constructor: 503)   Total 9812694 vertices to create\n  0:31:01.570  2959M / 2959M INFO    General                 (debruijn_graph_constructor: 506)   Connecting the graph\n  0:31:03.234  2534M / 3167M INFO    General                 (stage.cpp                 : 117)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:31:03.234  2534M / 3167M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices\n  0:33:33.774  2883M / 3351M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 484899156 kmers, 350232456 bytes occupied (5.77823 bits per kmer).\n  0:33:34.049  4735M / 5138M INFO    General                 (coverage_hash_map_builder.:  47)   Collecting k-mer coverage information from reads, this takes a while.\n  0:36:53.566  4735M / 5138M INFO    General                 (construction.cpp          : 430)   Filling coverage and flanking coverage from PHM\n  0:37:18.678  4735M / 5138M INFO    General                 (coverage_filling.hpp      :  82)   Processed 1000000 edges\n  0:37:43.680  4735M / 5138M INFO    General                 (coverage_filling.hpp      :  82)   Processed 2000000 edges\n  0:38:08.631  4735M / 5138M INFO    General                 (coverage_filling.hpp      :  82)   Processed 3000000 edges\n  0:38:33.631  4735M / 5138M INFO    General                 (coverage_filling.hpp      :  82)   Processed 4000000 edges\n  0:38:58.617  4735M / 5138M INFO    General                 (coverage_filling.hpp      :  82)   Processed 5000000 edges\n  0:39:23.569  4735M / 5138M INFO    General                 (coverage_filling.hpp      :  82)   Processed 6000000 edges\n  0:39:48.603  4735M / 5138M INFO    General                 (coverage_filling.hpp      :  82)   Processed 7000000 edges\n  0:40:13.574  4735M / 5138M INFO    General                 (coverage_filling.hpp      :  82)   Processed 8000000 edges\n  0:40:38.580  4735M / 5138M INFO    General                 (coverage_filling.hpp      :  82)   Processed 9000000 edges\n  0:41:03.605  4735M / 5138M INFO    General                 (coverage_filling.hpp      :  82)   Processed 10000000 edges\n  0:41:28.589  4735M / 5138M INFO    General                 (coverage_filling.hpp      :  82)   Processed 11000000 edges\n  0:41:53.577  4735M / 5138M INFO    General                 (coverage_filling.hpp      :  82)   Processed 12000000 edges\n  0:42:11.303  4735M / 5138M INFO    General                 (coverage_filling.hpp      :  82)   Processed 12709079 edges\n  0:42:14.072  1717M / 5138M INFO   StageManager             (stage.cpp                 : 185)   STAGE == Gap Closer (id: early_gapcloser)\n  0:42:14.082  1726M / 5138M INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8\n  0:42:24.036  1998M / 5138M INFO    General                 (gap_closer.cpp            : 101)   Total edges in tip neighborhood: 9799404 out of 12709079, length: 785751183\n  0:42:24.815  2087M / 5138M INFO    General                 (edge_index.hpp            : 167)   Using small index (max_id = 12772634)\n  0:42:45.365  2087M / 5138M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices\n  0:48:11.223  2400M / 5138M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 446661262 kmers, 322608200 bytes occupied (5.77813 bits per kmer).\n  0:48:11.728  5808M / 6301M INFO    General                 (edge_index_builders.hpp   : 265)   Collecting edge information from graph, this takes a while.\n  0:50:48.804  5737M / 6301M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 200000 reads\n  0:50:51.502  5758M / 6301M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 400000 reads\n  0:50:54.200  5769M / 6301M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 600000 reads\n  0:50:56.969  5800M / 6301M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 800000 reads\n  0:50:59.664  5810M / 6301M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 1000000 reads\n  0:51:02.364  5821M / 6301M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 1200000 reads\n  0:51:15.980  5914M / 6301M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 2200000 reads\n  0:51:43.189  6092M / 6458M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 4200000 reads\n  0:51:52.348  6125M / 6458M INFO    General                 (sequence_mapper_notifier.h:  95)   Total 4879083 reads processed\n  0:51:55.975  2383M / 6678M INFO    General                 (gap_closer.cpp            : 452)   Initializing gap closer\n  0:51:55.977  2383M / 6678M INFO   GapCloser                (gap_closer.cpp            : 359)   Closing short gaps\n  0:52:09.432  2383M / 6678M INFO   GapCloser                (gap_closer.cpp            : 391)   Closing short gaps complete: filled 9230 gaps after checking 674215 candidates\n  0:52:09.661  2383M / 6678M INFO    General                 (gap_closer.cpp            : 456)   Gap closer done\n  0:52:10.532  1717M / 6678M INFO   StageManager             (stage.cpp                 : 185)   STAGE == Raw Simplification (id: raw_simplification)\n  0:52:10.534  1717M / 6678M INFO    General                 (simplification.cpp        : 127)   PROCEDURE == Initial cleaning\n  0:52:10.535  1717M / 6678M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Self conjugate edge remover\n  0:52:11.569  1717M / 6678M INFO   Simplification           (parallel_processing.hpp   : 170)   Self conjugate edge remover triggered 3 times\n  0:52:11.570  1717M / 6678M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Initial tip clipper\n  0:52:22.177  1700M / 6678M INFO   Simplification           (parallel_processing.hpp   : 170)   Initial tip clipper triggered 755146 times\n  0:52:22.213  1700M / 6678M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Initial ec remover\n  0:52:24.188  1702M / 6678M INFO   Simplification           (parallel_processing.hpp   : 170)   Initial ec remover triggered 92131 times\n  0:52:24.224  1702M / 6678M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Disconnecting edges with low flanking coverage\n  0:52:27.587  1756M / 6678M INFO   Simplification           (parallel_processing.hpp   : 170)   Disconnecting edges with low flanking coverage triggered 245396 times\n  0:52:27.625  1756M / 6678M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Initial isolated edge remover\n  0:52:34.369  1607M / 6678M INFO   Simplification           (parallel_processing.hpp   : 170)   Initial isolated edge remover triggered 2980974 times\n  0:52:34.506  1496M / 6678M INFO   StageManager             (stage.cpp                 : 185)   STAGE == Preliminary Simplification (id: simplification_preliminary)\n  0:52:34.507  1496M / 6678M INFO    General                 (simplification.cpp        : 368)   Graph simplification started\n  0:52:34.509  1496M / 6678M INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:52:34.510  1496M / 6678M INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 1\n  0:52:34.511  1496M / 6678M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  0:52:36.552  1480M / 6678M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 212281 times\n  0:52:36.599  1480M / 6678M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  0:52:38.067  1542M / 6678M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 4938 times\n  0:52:38.069  1542M / 6678M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover\n  0:52:38.480  1543M / 6678M INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 2 times\n  0:52:38.481  1543M / 6678M INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 2\n  0:52:38.483  1543M / 6678M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  0:52:38.491  1543M / 6678M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 247 times\n  0:52:38.492  1543M / 6678M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  0:52:38.495  1542M / 6678M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 4 times\n  0:52:38.497  1542M / 6678M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover\n  0:52:38.572  1543M / 6678M INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 8531 times\n  0:52:38.576  1543M / 6678M INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 3\n  0:52:38.577  1543M / 6678M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  0:52:38.590  1543M / 6678M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 1778 times\n  0:52:38.592  1543M / 6678M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  0:52:38.888  1554M / 6678M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 986 times\n  0:52:38.891  1554M / 6678M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover\n  0:52:38.934  1554M / 6678M INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 4051 times\n  0:52:38.935  1554M / 6678M INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 4\n  0:52:38.936  1554M / 6678M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  0:52:39.511  1554M / 6678M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 413 times\n  0:52:39.512  1554M / 6678M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  0:52:40.093  1561M / 6678M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 562 times\n  0:52:40.096  1561M / 6678M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover\n  0:52:40.486  1560M / 6678M INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 1 times\n  0:52:40.488  1560M / 6678M INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 5\n  0:52:40.489  1560M / 6678M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  0:52:40.491  1560M / 6678M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 9 times\n  0:52:40.492  1560M / 6678M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  0:52:40.493  1560M / 6678M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 1 times\n  0:52:40.494  1560M / 6678M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover\n  0:52:40.496  1560M / 6678M INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times\n  0:52:40.497  1560M / 6678M INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 6\n  0:52:40.498  1560M / 6678M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  0:52:40.499  1560M / 6678M INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times\n  0:52:40.500  1560M / 6678M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  0:52:40.501  1560M / 6678M INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times\n  0:52:40.502  1560M / 6678M INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover\n  0:52:40.503  1560M / 6678M INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times\n  0:52:40.649  1560M / 6678M INFO   StageManager             (stage.cpp                 : 185)   STAGE == Gap Closer (id: prelim_gapcloser)\n  0:52:40.659  1569M / 6678M INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8\n  0:52:41.559  1605M / 6678M INFO    General                 (gap_closer.cpp            : 101)   Total edges in tip neighborhood: 1680167 out of 1735666, length: 406755990\n  0:52:41.674  1618M / 6678M INFO    General                 (edge_index.hpp            : 167)   Using small index (max_id = 12772634)\n  0:52:49.544  1618M / 6678M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices\n  0:55:06.066  1763M / 6678M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 205294713 kmers, 148395260 bytes occupied (5.78272 bits per kmer).\n  0:55:06.303  3331M / 6678M INFO    General                 (edge_index_builders.hpp   : 265)   Collecting edge information from graph, this takes a while.\n  0:56:25.479  3324M / 6678M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 200000 reads\n  0:56:36.556  3328M / 6678M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 400000 reads\n  0:56:47.731  3337M / 6678M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 600000 reads\n  0:56:58.804  3341M / 6678M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 800000 reads\n  0:57:10.013  3345M / 6678M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 1000000 reads\n  0:57:21.183  3358M / 6678M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 1200000 reads\n  0:58:16.983  3374M / 6678M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 2200000 reads\n  1:00:08.672  3420M / 6678M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 4200000 reads\n  1:00:46.622  3427M / 6678M INFO    General                 (sequence_mapper_notifier.h:  95)   Total 4879083 reads processed\n  1:00:47.513  1751M / 6678M INFO    General                 (gap_closer.cpp            : 452)   Initializing gap closer\n  1:00:47.518  1751M / 6678M INFO   GapCloser                (gap_closer.cpp            : 359)   Closing short gaps\n  1:00:48.837  1751M / 6678M INFO   GapCloser                (gap_closer.cpp            : 391)   Closing short gaps complete: filled 463 gaps after checking 40887 candidates\n  1:00:48.987  1751M / 6678M INFO    General                 (gap_closer.cpp            : 456)   Gap closer done\n  1:00:49.246  1560M / 6678M INFO   StageManager             (stage.cpp                 : 185)   STAGE == Preliminary Paired Information Counting (id: late_pair_info_count_preliminary)\n  1:00:55.686  2202M / 6678M INFO    General                 (graph_pack.cpp            :  67)   Index refill\n  1:00:55.687  2202M / 6678M INFO    General                 (edge_index.hpp            : 156)   Using small index (max_id = 12772634)\n  1:01:03.781  2202M / 6678M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices\n  1:03:25.027  2348M / 6678M INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 207189194 kmers, 149811930 bytes occupied (5.78455 bits per kmer).\n  1:03:25.264  3932M / 6678M INFO    General                 (edge_index_builders.hpp   : 252)   Collecting edge information from graph, this takes a while.\n  1:04:33.604  3932M / 6678M INFO    General                 (graph_pack.cpp            :  77)   Normalizing k-mer map. Total 1155362 kmers to process\n  1:04:34.274  3932M / 6678M INFO    General                 (graph_pack.cpp            :  79)   Normalizing done\n  1:04:34.276  3932M / 6678M INFO    General                 (pair_info_count.cpp       : 339)   Min edge length for estimation: 900\n  1:04:34.277  3932M / 6678M INFO    General                 (pair_info_count.cpp       : 350)   Estimating insert size for library #0\n  1:04:34.279  3932M / 6678M INFO    General                 (pair_info_count.cpp       : 202)   Estimating insert size (takes a while)\n  1:04:34.290  3964M / 6678M INFO    General                 (pair_info_count.cpp       :  48)   Selecting usual mapper\n  1:04:44.590  3964M / 6678M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 200000 reads\n  1:04:54.761  3964M / 6678M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 400000 reads\n  1:05:04.977  3964M / 6678M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 600000 reads\n  1:05:15.131  3964M / 6678M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 800000 reads\n  1:05:25.416  3964M / 6678M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 1000000 reads\n  1:05:35.609  3964M / 6678M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 1200000 reads\n  1:06:26.780  3964M / 6678M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 2200000 reads\n  1:08:09.305  3964M / 6678M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 4200000 reads\n  1:08:44.236  3964M / 6678M INFO    General                 (sequence_mapper_notifier.h:  95)   Total 4879083 reads processed\n  1:08:44.442  3964M / 6678M INFO    General                 (pair_info_count.cpp       : 220)   Edge pairs: 1578482\n  1:08:44.443  3964M / 6678M INFO    General                 (pair_info_count.cpp       : 222)   654204 paired reads (13.4083% of all) aligned to long edges\n  1:08:44.445  3932M / 6678M INFO    General                 (pair_info_count.cpp       : 369)     Insert size = 249.208, deviation = 93.9948, left quantile = 143, right quantile = 378, read length = 151\n  1:08:44.447  3937M / 6678M INFO    General                 (pair_info_count.cpp       : 390)   Filtering data for library #0\n  1:08:44.459  3937M / 6678M INFO    General                 (pair_info_count.cpp       :  48)   Selecting usual mapper\n  1:08:54.803  3937M / 6678M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 200000 reads\n  1:09:04.997  3937M / 6678M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 400000 reads\n  1:09:15.236  3937M / 6678M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 600000 reads\n  1:09:25.414  3937M / 6678M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 800000 reads\n  1:09:35.723  3937M / 6678M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 1000000 reads\n  1:09:45.943  3937M / 6678M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 1200000 reads\n  1:10:37.245  3937M / 6678M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 2200000 reads\n  1:12:19.968  3937M / 6678M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 4200000 reads\n  1:12:54.924  3937M / 6678M INFO    General                 (sequence_mapper_notifier.h:  95)   Total 4879083 reads processed\n  1:12:54.926  3937M / 6678M INFO    General                 (pair_info_count.cpp       : 402)   Mapping library #0\n  1:12:54.927  3937M / 6678M INFO    General                 (pair_info_count.cpp       : 404)   Mapping paired reads (takes a while)\n  1:12:54.929  3937M / 6678M INFO    General                 (pair_info_count.cpp       : 299)   Left insert size quantile 143, right insert size quantile 378, filtering threshold 1, rounding threshold 0\n  1:12:54.942  3946M / 6678M INFO    General                 (pair_info_count.cpp       :  48)   Selecting usual mapper\n  1:13:05.356  3955M / 6678M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 200000 reads\n  1:13:15.625  3961M / 6678M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 400000 reads\n  1:13:25.944  3966M / 6678M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 600000 reads\n  1:13:36.240  3976M / 6678M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 800000 reads\n  1:13:46.640  3980M / 6678M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 1000000 reads\n  1:13:56.957  3984M / 6678M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 1200000 reads\n  1:14:48.771  4001M / 6678M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 2200000 reads\n  1:16:32.716  4031M / 6678M INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 4200000 reads\n  1:17:08.102  4036M / 6678M INFO    General                 (sequence_mapper_notifier.h:  95)   Total 4879083 reads processed\n  1:17:08.233  4020M / 6678M INFO   StageManager             (stage.cpp                 : 185)   STAGE == Preliminary Distance Estimation (id: distance_estimation_preliminary)\n  1:17:08.235  4020M / 6678M INFO    General                 (distance_estimation.cpp   : 179)   Processing library #0\n  1:17:08.237  4020M / 6678M INFO    General                 (distance_estimation.cpp   : 150)   Weight Filter Done\n  1:17:08.238  4020M / 6678M INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  1:17:43.992  4050M / 6678M INFO    General                 (distance_estimation.cpp   :  37)   Filtering info\n  1:17:43.994  4050M / 6678M INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; library index size: 2840378\n  1:17:45.642  3985M / 6678M INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering; library index size: 819070\n  1:17:45.680  3921M / 6678M INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  1:17:45.929  3921M / 6678M INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  1:17:45.931  3921M / 6678M INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  1:17:50.198  3930M / 6678M INFO   PairInfoImprover         (pair_info_improver.hpp    : 104)   Paired info stats: missing = 87262; contradictional = 0\n  1:17:55.470  3931M / 6678M INFO   PairInfoImprover         (pair_info_improver.hpp    : 104)   Paired info stats: missing = 18496; contradictional = 0\n  1:17:55.472  3931M / 6678M INFO    General                 (distance_estimation.cpp   : 104)   Filling scaffolding index\n  1:17:55.475  3931M / 6678M INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  1:18:31.561  3933M / 6678M INFO    General                 (distance_estimation.cpp   :  37)   Filtering info\n  1:18:31.564  3933M / 6678M INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; library index size: 1769279\n  1:18:32.241  3965M / 6678M INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering; library index size: 1769279\n  1:18:32.244  3933M / 6678M INFO    General                 (distance_estimation.cpp   : 186)   Clearing raw paired index\n  1:18:32.362  3845M / 6678M INFO   StageManager             (stage.cpp                 : 185)   STAGE == Preliminary Repeat Resolving (id: repeat_resolving_preliminary)\n  1:18:32.371  3845M / 6678M INFO    General                 (repeat_resolving.cpp      :  74)   Setting up preliminary path extend settings\n  1:18:32.373  3845M / 6678M INFO    General                 (repeat_resolving.cpp      :  87)   Using Path-Extend repeat resolving\n  1:18:32.375  3845M / 6678M INFO    General                 (launcher.cpp              : 600)   ExSPAnder repeat resolving tool started\n  1:18:34.936  7311M / 7537M INFO    General                 (launcher.cpp              : 418)   Creating main extenders, unique edge length = 2000\n  1:18:34.940  7311M / 7537M INFO    General                 (extenders_logic.cpp       : 345)   Creating extender; library index size: 1030586\n  1:18:34.947  7379M / 7569M INFO    General                 (extenders_logic.cpp       : 345)   Creating extender; library index size: 1030586\n  1:18:35.127  7563M / 7731M INFO    General                 (extenders_logic.cpp       : 543)   Using 1 paired-end library\n  1:18:35.130  7563M / 7731M INFO    General                 (extenders_logic.cpp       : 544)   Using 1 paired-end scaffolding library\n  1:18:35.134  7563M / 7731M INFO    General                 (extenders_logic.cpp       : 545)   Using 0 single read libraries\n  1:18:35.138  7563M / 7731M INFO    General                 (launcher.cpp              : 447)   Total number of extenders is 3\n  1:18:35.141  7563M / 7731M INFO    General                 (path_extenders.cpp        :  36)   Processed 0 paths from 865717 (0%)\n  1:18:35.153  7564M / 7774M INFO    General                 (path_extenders.cpp        :  34)   Processed 128 paths from 865717 (0%)\n  1:18:35.162  7564M / 7816M INFO    General                 (path_extenders.cpp        :  34)   Processed 256 paths from 865717 (0%)\n  1:18:35.172  7565M / 7822M INFO    General                 (path_extenders.cpp        :  34)   Processed 512 paths from 865717 (0%)\n  1:18:35.190  7567M / 7826M INFO    General                 (path_extenders.cpp        :  34)   Processed 1024 paths from 865717 (0%)\n  1:18:35.219  7572M / 7830M INFO    General                 (path_extenders.cpp        :  34)   Processed 2048 paths from 865717 (0%)\n  1:18:35.267  7580M / 7844M INFO    General                 (path_extenders.cpp        :  34)   Processed 4096 paths from 865717 (0%)\n  1:18:35.362  7597M / 7844M INFO    General                 (path_extenders.cpp        :  34)   Processed 8192 paths from 865717 (0%)\n  1:18:35.531  7630M / 7866M INFO    General                 (path_extenders.cpp        :  34)   Processed 16384 paths from 865717 (1%)\n  1:18:35.803  7696M / 7944M INFO    General                 (path_extenders.cpp        :  34)   Processed 32768 paths from 865717 (3%)\n  1:18:36.205  7826M / 8082M INFO    General                 (path_extenders.cpp        :  34)   Processed 65536 paths from 865717 (7%)\n  1:18:36.332  7910M / 8166M INFO    General                 (path_extenders.cpp        :  36)   Processed 86572 paths from 865717 (10%)\n  1:18:36.584  8086M / 8342M INFO    General                 (path_extenders.cpp        :  34)   Processed 131072 paths from 865717 (15%)\n  1:18:36.813  8254M / 8510M INFO    General                 (path_extenders.cpp        :  36)   Processed 173144 paths from 865717 (20%)\n  1:18:37.264  8595M / 8852M INFO    General                 (path_extenders.cpp        :  36)   Processed 259716 paths from 865717 (30%)\n  1:18:37.279  8605M / 8862M INFO    General                 (path_extenders.cpp        :  34)   Processed 262144 paths from 865717 (30%)\n  1:18:37.676  8941M / 9196M INFO    General                 (path_extenders.cpp        :  36)   Processed 346288 paths from 865717 (40%)\n  1:18:38.083  9282M / 9544M INFO    General                 (path_extenders.cpp        :  36)   Processed 432860 paths from 865717 (50%)\n  1:18:38.477  9623M / 10G   INFO    General                 (path_extenders.cpp        :  36)   Processed 519432 paths from 865717 (60%)\n  1:18:38.505  9642M / 10G   INFO    General                 (path_extenders.cpp        :  34)   Processed 524288 paths from 865717 (60%)\n  1:18:38.881    10G / 10G   INFO    General                 (path_extenders.cpp        :  36)   Processed 606004 paths from 865717 (70%)\n  1:18:39.279    11G / 11G   INFO    General                 (path_extenders.cpp        :  36)   Processed 692576 paths from 865717 (80%)\n  1:18:39.681    11G / 11G   INFO    General                 (path_extenders.cpp        :  36)   Processed 779148 paths from 865717 (90%)\n  1:18:41.613    11G / 12G   INFO    General                 (launcher.cpp              : 250)   Finalizing paths\n  1:18:41.621    11G / 12G   INFO    General                 (launcher.cpp              : 252)   Deduplicating paths\n  1:18:41.969    11G / 12G   INFO    General                 (launcher.cpp              : 256)   Paths deduplicated\n  1:18:41.976    11G / 12G   INFO    General                 (launcher.cpp              : 263)   Overlaps will not be removed\n  1:18:42.711    11G / 12G   INFO    General                 (launcher.cpp              : 273)   Paths finalized\n  1:18:42.718    11G / 12G   INFO    General                 (launcher.cpp              : 454)   Closing gaps in paths\n  1:18:45.155    14G / 15G   INFO    General                 (launcher.cpp              : 484)   Gap closing completed\n  1:18:45.797    15G / 15G   INFO    General                 (launcher.cpp              : 302)   Traversing tandem repeats\n  1:18:50.155    15G / 15G   INFO    General                 (launcher.cpp              : 312)   Traversed 3 loops\n  1:18:50.163    15G / 15G   INFO    General                 (launcher.cpp              : 250)   Finalizing paths\n  1:18:50.171    15G / 15G   INFO    General                 (launcher.cpp              : 252)   Deduplicating paths\n  1:18:50.715    15G / 15G   INFO    General                 (launcher.cpp              : 256)   Paths deduplicated\n  1:18:50.723    15G / 15G   INFO    General                 (launcher.cpp              : 263)   Overlaps will not be removed\n  1:18:51.920    15G / 15G   INFO    General                 (launcher.cpp              : 273)   Paths finalized\n  1:18:51.928    15G / 15G   INFO    General                 (launcher.cpp              : 664)   ExSPAnder repeat resolving tool finished\n  1:18:54.180  7163M / 15G   INFO    General                 (repeat_resolving.cpp      :  93)   Restoring initial path extend settings\n  1:18:54.229  7163M / 15G   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Contig Output (id: contig_output)\n  1:18:54.236  7163M / 15G   INFO    General                 (contig_output_stage.cpp   : 151)   Writing GFA graph to /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K77/strain_graph.gfa\n  1:18:56.010  7163M / 15G   INFO    General                 (contig_output_stage.cpp   : 196)   Breaking scaffolds\n  1:19:02.313    11G / 15G   INFO    General                 (contig_output_stage.cpp   :  98)   Outputting contigs to /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K77/final_contigs.fasta\n  1:19:04.552  7163M / 15G   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Second Phase Setup (id: second_phase_setup)\n  1:19:04.559  7163M / 15G   INFO    General                 (second_phase_setup.cpp    :  18)   Preparing second phase\n  1:19:06.164  3305M / 15G   INFO    General                 (second_phase_setup.cpp    :  26)   Moving preliminary contigs from /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K77/final_contigs.fasta to /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K77/first_pe_contigs.fasta\n  1:19:06.258  3305M / 15G   INFO    General                 (second_phase_setup.cpp    :  38)   Ready to run second phase\n  1:19:06.259  3305M / 15G   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Simplification (id: simplification)\n  1:19:06.264  1576M / 15G   INFO    General                 (simplification.cpp        : 368)   Graph simplification started\n  1:19:06.266  1576M / 15G   INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  1:19:06.267  1576M / 15G   INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 1\n  1:19:06.268  1576M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  1:19:06.838  1576M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times\n  1:19:06.839  1576M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  1:19:08.086  1625M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 3333 times\n  1:19:08.090  1625M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover\n  1:19:08.478  1625M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times\n  1:19:08.479  1625M / 15G   INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 2\n  1:19:08.480  1625M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  1:19:08.483  1625M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 48 times\n  1:19:08.484  1625M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  1:19:08.486  1625M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times\n  1:19:08.487  1625M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover\n  1:19:08.488  1625M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times\n  1:19:08.489  1625M / 15G   INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 3\n  1:19:08.490  1625M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  1:19:08.491  1625M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times\n  1:19:08.492  1625M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  1:19:08.493  1625M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times\n  1:19:08.494  1625M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover\n  1:19:08.495  1625M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times\n  1:19:08.496  1625M / 15G   INFO    General                 (simplification.cpp        : 373)   PROCEDURE == Simplification cycle, iteration 4\n  1:19:08.498  1625M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  1:19:09.063  1625M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times\n  1:19:09.064  1625M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  1:19:09.471  1625M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times\n  1:19:09.472  1625M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Low coverage edge remover\n  1:19:09.859  1625M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Low coverage edge remover triggered 0 times\n  1:19:10.005  1625M / 15G   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Gap Closer (id: late_gapcloser)\n  1:19:10.014  1634M / 15G   INFO    General                 (edge_index.hpp            : 113)   Size of edge index entries: 12/8\n  1:19:10.920  1670M / 15G   INFO    General                 (gap_closer.cpp            : 101)   Total edges in tip neighborhood: 1675259 out of 1714782, length: 408019474\n  1:19:11.035  1683M / 15G   INFO    General                 (edge_index.hpp            : 167)   Using small index (max_id = 12772634)\n  1:19:18.910  1683M / 15G   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices\n  1:21:37.106  1828M / 15G   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 205357699 kmers, 148461940 bytes occupied (5.78355 bits per kmer).\n  1:21:37.340  3396M / 15G   INFO    General                 (edge_index_builders.hpp   : 265)   Collecting edge information from graph, this takes a while.\n  1:22:57.281  3389M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 200000 reads\n  1:23:08.731  3393M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 400000 reads\n  1:23:20.292  3402M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 600000 reads\n  1:23:31.755  3406M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 800000 reads\n  1:23:43.349  3410M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 1000000 reads\n  1:23:54.899  3423M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 1200000 reads\n  1:24:52.611  3439M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 2200000 reads\n  1:26:48.201  3485M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 4200000 reads\n  1:27:27.453  3492M / 15G   INFO    General                 (sequence_mapper_notifier.h:  95)   Total 4879083 reads processed\n  1:27:28.355  1816M / 15G   INFO    General                 (gap_closer.cpp            : 452)   Initializing gap closer\n  1:27:28.360  1816M / 15G   INFO   GapCloser                (gap_closer.cpp            : 359)   Closing short gaps\n  1:27:29.671  1816M / 15G   INFO   GapCloser                (gap_closer.cpp            : 391)   Closing short gaps complete: filled 0 gaps after checking 39363 candidates\n  1:27:29.817  1816M / 15G   INFO    General                 (gap_closer.cpp            : 456)   Gap closer done\n  1:27:30.072  1625M / 15G   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Simplification Cleanup (id: simplification_cleanup)\n  1:27:30.077  1625M / 15G   INFO    General                 (simplification.cpp        : 176)   PROCEDURE == Post simplification\n  1:27:30.078  1625M / 15G   INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  1:27:30.079  1625M / 15G   INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  1:27:30.080  1625M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Relative coverage component remover\n  1:27:30.649  1624M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Relative coverage component remover triggered 1141 times\n  1:27:30.650  1624M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Disconnecting edges with relatively low coverage\n  1:27:31.199  1624M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Disconnecting edges with relatively low coverage triggered 185 times\n  1:27:31.200  1624M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Complex tip clipper\n  1:27:33.093  1624M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Complex tip clipper triggered 110 times\n  1:27:33.094  1624M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Complex bulge remover\n  1:27:36.293  1632M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Complex bulge remover triggered 251 times\n  1:27:36.296  1632M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  1:27:36.860  1632M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 104 times\n  1:27:36.861  1632M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Final tip clipper\n  1:27:37.435  1632M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Final tip clipper triggered 1332 times\n  1:27:37.436  1632M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  1:27:37.884  1634M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 162 times\n  1:27:37.886  1634M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Final bulge remover\n  1:27:38.663  1641M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Final bulge remover triggered 161 times\n  1:27:38.665  1641M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Thorn remover (meta)\n  1:27:39.076  1641M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Thorn remover (meta) triggered 0 times\n  1:27:39.077  1641M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Relative coverage component remover\n  1:27:39.591  1641M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Relative coverage component remover triggered 25 times\n  1:27:39.592  1641M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Disconnecting edges with relatively low coverage\n  1:27:40.130  1641M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Disconnecting edges with relatively low coverage triggered 26 times\n  1:27:40.131  1641M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Complex tip clipper\n  1:27:41.998  1641M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Complex tip clipper triggered 8 times\n  1:27:41.999  1641M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Complex bulge remover\n  1:27:45.020  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Complex bulge remover triggered 46 times\n  1:27:45.022  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  1:27:45.584  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 41 times\n  1:27:45.585  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Final tip clipper\n  1:27:46.148  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Final tip clipper triggered 37 times\n  1:27:46.149  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  1:27:46.553  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 28 times\n  1:27:46.554  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Final bulge remover\n  1:27:46.973  1644M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Final bulge remover triggered 4 times\n  1:27:46.974  1644M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Thorn remover (meta)\n  1:27:47.385  1644M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Thorn remover (meta) triggered 0 times\n  1:27:47.386  1644M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Relative coverage component remover\n  1:27:47.885  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Relative coverage component remover triggered 2 times\n  1:27:47.886  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Disconnecting edges with relatively low coverage\n  1:27:47.887  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Disconnecting edges with relatively low coverage triggered 0 times\n  1:27:47.888  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Complex tip clipper\n  1:27:49.769  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Complex tip clipper triggered 0 times\n  1:27:49.770  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Complex bulge remover\n  1:27:52.792  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Complex bulge remover triggered 2 times\n  1:27:52.793  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  1:27:52.794  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 1 times\n  1:27:52.795  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Final tip clipper\n  1:27:52.796  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Final tip clipper triggered 0 times\n  1:27:52.797  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  1:27:52.798  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times\n  1:27:52.799  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Final bulge remover\n  1:27:52.800  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Final bulge remover triggered 0 times\n  1:27:52.802  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Thorn remover (meta)\n  1:27:52.803  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Thorn remover (meta) triggered 0 times\n  1:27:52.804  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Relative coverage component remover\n  1:27:53.302  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Relative coverage component remover triggered 0 times\n  1:27:53.304  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Disconnecting edges with relatively low coverage\n  1:27:53.305  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Disconnecting edges with relatively low coverage triggered 0 times\n  1:27:53.306  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Complex tip clipper\n  1:27:55.191  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Complex tip clipper triggered 0 times\n  1:27:55.192  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Complex bulge remover\n  1:27:58.221  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Complex bulge remover triggered 0 times\n  1:27:58.222  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Tip clipper\n  1:27:58.223  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Tip clipper triggered 0 times\n  1:27:58.224  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Final tip clipper\n  1:27:58.225  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Final tip clipper triggered 0 times\n  1:27:58.226  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Bulge remover\n  1:27:58.227  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Bulge remover triggered 0 times\n  1:27:58.228  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Final bulge remover\n  1:27:58.229  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Final bulge remover triggered 0 times\n  1:27:58.230  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Thorn remover (meta)\n  1:27:58.232  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Thorn remover (meta) triggered 0 times\n  1:27:58.233  1643M / 15G   INFO    General                 (simplification.cpp        : 323)   Running Hidden EC remover (meta)\n  1:27:58.622  1643M / 15G   INFO    General                 (simplification.cpp        : 327)   Disrupting self-conjugate edges\n  1:27:59.275  1643M / 15G   INFO   Simplification           (parallel_processing.hpp   : 167)   Running Removing isolated edges\n  1:27:59.947  1641M / 15G   INFO   Simplification           (parallel_processing.hpp   : 170)   Removing isolated edges triggered 51463 times\n  1:28:00.014  1641M / 15G   INFO    General                 (simplification.cpp        : 495)   After simplification:\n  1:28:00.016  1641M / 15G   INFO    General                 (simplification.cpp        : 496)     Average coverage = 1.57577\n  1:28:00.071  1641M / 15G   INFO    General                 (simplification.cpp        : 497)     Total length = 201574701\n  1:28:00.178  1641M / 15G   INFO    General                 (simplification.cpp        : 498)     Median edge length: 220\n  1:28:00.179  1641M / 15G   INFO    General                 (simplification.cpp        : 499)     Edges: 1592202\n  1:28:00.180  1641M / 15G   INFO    General                 (simplification.cpp        : 500)     Vertices: 3147808\n  1:28:00.181  1641M / 15G   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Mismatch Correction (id: mismatch_correction)\n  1:28:00.182  1641M / 15G   INFO    General                 (graph_pack.cpp            :  67)   Index refill\n  1:28:00.183  1641M / 15G   INFO    General                 (edge_index.hpp            : 156)   Using small index (max_id = 12772634)\n  1:28:07.997  1641M / 15G   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 395)   Building perfect hash indices\n  1:30:23.370  1786M / 15G   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 431)   Index built. Total 201574701 kmers, 145726672 bytes occupied (5.78353 bits per kmer).\n  1:30:23.600  3326M / 15G   INFO    General                 (edge_index_builders.hpp   : 252)   Collecting edge information from graph, this takes a while.\n  1:31:30.448  3326M / 15G   INFO    General                 (graph_pack.cpp            :  77)   Normalizing k-mer map. Total 2100908 kmers to process\n  1:31:31.795  3326M / 15G   INFO    General                 (graph_pack.cpp            :  79)   Normalizing done\n  1:31:31.796  3326M / 15G   INFO    General                 (mismatch_correction.cpp   : 400)   Collect potential mismatches\n  1:31:34.460  3328M / 15G   INFO    General                 (mismatch_correction.cpp   : 192)   Total 13532 edges (out of 1592202) with 161668 potential mismatch positions (11.9471 positions per edge)\n  1:31:34.461  3328M / 15G   INFO    General                 (mismatch_correction.cpp   : 402)   Potential mismatches collected\n  1:31:42.898  3328M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 200000 reads\n  1:31:51.305  3328M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 400000 reads\n  1:31:59.720  3329M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 600000 reads\n  1:32:05.903  3330M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 800000 reads\n  1:32:10.232  3333M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 1000000 reads\n  1:32:14.499  3334M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 1200000 reads\n  1:32:35.763  3340M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 2200000 reads\n  1:33:18.352  3343M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 4200000 reads\n  1:34:47.964  3346M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 8400000 reads\n  1:37:47.481  3348M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 16800000 reads\n  1:39:00.439  3348M / 15G   INFO    General                 (sequence_mapper_notifier.h:  95)   Total 20205156 reads processed\n  1:39:01.535  3348M / 15G   INFO    General                 (mismatch_correction.cpp   : 395)   All edges processed\n  1:39:01.541  3328M / 15G   INFO    General                 (mismatch_correction.cpp   : 450)   Corrected 192 nucleotides\n  1:39:01.542  3328M / 15G   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Contig Output (id: contig_output)\n  1:39:01.543  3328M / 15G   INFO    General                 (contig_output.hpp         :  16)   Outputting contigs to /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K77/before_rr.fasta\n  1:39:04.639  3328M / 15G   INFO    General                 (contig_output_stage.cpp   : 151)   Writing GFA graph to /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K77/assembly_graph_after_simplification.gfa\n  1:39:06.493  3328M / 15G   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Paired Information Counting (id: late_pair_info_count)\n  1:39:12.372  3918M / 15G   INFO    General                 (graph_pack.cpp            :  77)   Normalizing k-mer map. Total 2119416 kmers to process\n  1:39:13.705  3918M / 15G   INFO    General                 (graph_pack.cpp            :  79)   Normalizing done\n  1:39:13.706  3918M / 15G   INFO    General                 (pair_info_count.cpp       : 339)   Min edge length for estimation: 900\n  1:39:13.707  3918M / 15G   INFO    General                 (pair_info_count.cpp       : 350)   Estimating insert size for library #0\n  1:39:13.709  3918M / 15G   INFO    General                 (pair_info_count.cpp       : 202)   Estimating insert size (takes a while)\n  1:39:13.715  3950M / 15G   INFO    General                 (pair_info_count.cpp       :  48)   Selecting usual mapper\n  1:39:24.903  3950M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 200000 reads\n  1:39:35.927  3950M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 400000 reads\n  1:39:47.021  3950M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 600000 reads\n  1:39:58.022  3950M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 800000 reads\n  1:40:09.189  3950M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 1000000 reads\n  1:40:20.256  3950M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 1200000 reads\n  1:41:15.801  3950M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 2200000 reads\n  1:43:07.008  3950M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 4200000 reads\n  1:43:44.922  3950M / 15G   INFO    General                 (sequence_mapper_notifier.h:  95)   Total 4879083 reads processed\n  1:43:45.128  3950M / 15G   INFO    General                 (pair_info_count.cpp       : 220)   Edge pairs: 1154054\n  1:43:45.130  3950M / 15G   INFO    General                 (pair_info_count.cpp       : 222)   764483 paired reads (15.6686% of all) aligned to long edges\n  1:43:45.132  3918M / 15G   INFO    General                 (pair_info_count.cpp       : 369)     Insert size = 248.966, deviation = 93.9501, left quantile = 143, right quantile = 378, read length = 151\n  1:43:45.133  3922M / 15G   INFO    General                 (pair_info_count.cpp       : 390)   Filtering data for library #0\n  1:43:45.142  3922M / 15G   INFO    General                 (pair_info_count.cpp       :  48)   Selecting usual mapper\n  1:43:56.342  3922M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 200000 reads\n  1:44:07.368  3922M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 400000 reads\n  1:44:18.453  3922M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 600000 reads\n  1:44:29.447  3922M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 800000 reads\n  1:44:40.610  3922M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 1000000 reads\n  1:44:51.667  3922M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 1200000 reads\n  1:45:47.192  3922M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 2200000 reads\n  1:47:38.332  3922M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 4200000 reads\n  1:48:16.184  3922M / 15G   INFO    General                 (sequence_mapper_notifier.h:  95)   Total 4879083 reads processed\n  1:48:16.185  3922M / 15G   INFO    General                 (pair_info_count.cpp       : 402)   Mapping library #0\n  1:48:16.187  3922M / 15G   INFO    General                 (pair_info_count.cpp       : 404)   Mapping paired reads (takes a while)\n  1:48:16.188  3922M / 15G   INFO    General                 (pair_info_count.cpp       : 299)   Left insert size quantile 143, right insert size quantile 378, filtering threshold 1, rounding threshold 0\n  1:48:16.206  3931M / 15G   INFO    General                 (pair_info_count.cpp       :  48)   Selecting usual mapper\n  1:48:27.460  3936M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 200000 reads\n  1:48:38.538  3940M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 400000 reads\n  1:48:49.684  3943M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 600000 reads\n  1:49:00.752  3946M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 800000 reads\n  1:49:12.021  3954M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 1000000 reads\n  1:49:23.163  3957M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 1200000 reads\n  1:50:19.132  3968M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 2200000 reads\n  1:52:11.207  3991M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 4200000 reads\n  1:52:49.377  3994M / 15G   INFO    General                 (sequence_mapper_notifier.h:  95)   Total 4879083 reads processed\n  1:52:49.499  3979M / 15G   INFO    General                 (pair_info_count.cpp       : 346)   Mapping contigs library #1\n  1:52:49.501  3979M / 15G   INFO    General                 (pair_info_count.cpp       :  48)   Selecting usual mapper\n  1:52:53.676  4011M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 200000 reads\n  1:52:55.533  4043M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 400000 reads\n  1:52:57.220  4075M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 600000 reads\n  1:52:59.954  4105M / 15G   INFO    General                 (sequence_mapper_notifier.h:  77)   Processed 800000 reads\n  1:53:03.135  4106M / 15G   INFO    General                 (sequence_mapper_notifier.h:  95)   Total 845700 reads processed\n  1:53:03.136  4106M / 15G   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Distance Estimation (id: distance_estimation)\n  1:53:03.138  4106M / 15G   INFO    General                 (distance_estimation.cpp   : 179)   Processing library #0\n  1:53:03.140  4106M / 15G   INFO    General                 (distance_estimation.cpp   : 150)   Weight Filter Done\n  1:53:03.141  4106M / 15G   INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  1:53:14.323  4116M / 15G   INFO    General                 (distance_estimation.cpp   :  37)   Filtering info\n  1:53:14.325  4116M / 15G   INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; library index size: 1896679\n  1:53:15.623  4032M / 15G   INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering; library index size: 497111\n  1:53:15.657  4000M / 15G   INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  1:53:15.827  4000M / 15G   INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  1:53:15.829  4000M / 15G   INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  1:53:17.921  4004M / 15G   INFO   PairInfoImprover         (pair_info_improver.hpp    : 104)   Paired info stats: missing = 34528; contradictional = 0\n  1:53:20.262  4005M / 15G   INFO   PairInfoImprover         (pair_info_improver.hpp    : 104)   Paired info stats: missing = 7343; contradictional = 0\n  1:53:20.264  4005M / 15G   INFO    General                 (distance_estimation.cpp   : 104)   Filling scaffolding index\n  1:53:20.266  4005M / 15G   INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  1:53:31.085  4006M / 15G   INFO    General                 (distance_estimation.cpp   :  37)   Filtering info\n  1:53:31.087  4006M / 15G   INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; library index size: 1606342\n  1:53:31.697  4038M / 15G   INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering; library index size: 1606342\n  1:53:31.699  4005M / 15G   INFO    General                 (distance_estimation.cpp   : 186)   Clearing raw paired index\n  1:53:31.781  3945M / 15G   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Repeat Resolving (id: repeat_resolving)\n  1:53:31.787  3945M / 15G   INFO    General                 (repeat_resolving.cpp      :  87)   Using Path-Extend repeat resolving\n  1:53:31.789  3945M / 15G   INFO    General                 (launcher.cpp              : 600)   ExSPAnder repeat resolving tool started\n  1:53:34.158  7132M / 15G   INFO    General                 (launcher.cpp              : 418)   Creating main extenders, unique edge length = 2000\n  1:53:34.167  7268M / 15G   INFO    General                 (launcher.cpp              : 342)   filling path container\n  1:53:34.227  7297M / 15G   INFO    General                 (extenders_logic.cpp       : 345)   Creating extender; library index size: 580853\n  1:53:34.232  7365M / 15G   INFO    General                 (extenders_logic.cpp       : 345)   Creating extender; library index size: 580853\n  1:53:34.411  7549M / 15G   INFO    General                 (extenders_logic.cpp       :  47)   resolvable_repeat_length_bound set to 10000\n  1:53:34.792  7690M / 15G   INFO    General                 (extenders_logic.cpp       : 543)   Using 1 paired-end library\n  1:53:34.796  7690M / 15G   INFO    General                 (extenders_logic.cpp       : 544)   Using 1 paired-end scaffolding library\n  1:53:34.799  7690M / 15G   INFO    General                 (extenders_logic.cpp       : 545)   Using 1 single read library\n  1:53:35.101  7690M / 15G   INFO    General                 (launcher.cpp              : 385)   Filling backbone edges for long reads scaffolding...\n  1:53:35.104  7690M / 15G   INFO    General                 (launcher.cpp              : 387)    with long reads paths\n  1:53:35.108  7690M / 15G   INFO    General                 (launcher.cpp              : 396)   Removing fake unique with paired-end libs\n  1:53:35.111  7690M / 15G   INFO    General                 (launcher.cpp              : 407)   0 unique edges\n  1:53:35.115  7690M / 15G   INFO    General                 (extenders_logic.cpp       : 446)   Using 0 long reads scaffolding libraries\n  1:53:35.118  7690M / 15G   INFO    General                 (extenders_logic.cpp       : 456)   Using additional coordinated coverage extender\n  1:53:35.124  7758M / 15G   INFO    General                 (launcher.cpp              : 447)   Total number of extenders is 5\n  1:53:35.127  7758M / 15G   INFO    General                 (path_extenders.cpp        :  36)   Processed 0 paths from 794438 (0%)\n  1:53:35.146  7758M / 15G   INFO    General                 (path_extenders.cpp        :  34)   Processed 128 paths from 794438 (0%)\n  1:53:35.153  7759M / 15G   INFO    General                 (path_extenders.cpp        :  34)   Processed 256 paths from 794438 (0%)\n  1:53:35.166  7760M / 15G   INFO    General                 (path_extenders.cpp        :  34)   Processed 512 paths from 794438 (0%)\n  1:53:35.184  7762M / 15G   INFO    General                 (path_extenders.cpp        :  34)   Processed 1024 paths from 794438 (0%)\n  1:53:35.215  7766M / 15G   INFO    General                 (path_extenders.cpp        :  34)   Processed 2048 paths from 794438 (0%)\n  1:53:35.267  7775M / 15G   INFO    General                 (path_extenders.cpp        :  34)   Processed 4096 paths from 794438 (0%)\n  1:53:35.370  7792M / 15G   INFO    General                 (path_extenders.cpp        :  34)   Processed 8192 paths from 794438 (1%)\n  1:53:35.549  7825M / 15G   INFO    General                 (path_extenders.cpp        :  34)   Processed 16384 paths from 794438 (2%)\n  1:53:35.835  7890M / 15G   INFO    General                 (path_extenders.cpp        :  34)   Processed 32768 paths from 794438 (4%)\n  1:53:36.268  8020M / 15G   INFO    General                 (path_extenders.cpp        :  34)   Processed 65536 paths from 794438 (8%)\n  1:53:36.365  8075M / 15G   INFO    General                 (path_extenders.cpp        :  36)   Processed 79444 paths from 794438 (10%)\n  1:53:36.691  8278M / 15G   INFO    General                 (path_extenders.cpp        :  34)   Processed 131072 paths from 794438 (16%)\n  1:53:36.864  8390M / 15G   INFO    General                 (path_extenders.cpp        :  36)   Processed 158888 paths from 794438 (20%)\n  1:53:37.344  8702M / 15G   INFO    General                 (path_extenders.cpp        :  36)   Processed 238332 paths from 794438 (30%)\n  1:53:37.487  8796M / 15G   INFO    General                 (path_extenders.cpp        :  34)   Processed 262144 paths from 794438 (32%)\n  1:53:37.806  9019M / 15G   INFO    General                 (path_extenders.cpp        :  36)   Processed 317776 paths from 794438 (40%)\n  1:53:38.252  9331M / 15G   INFO    General                 (path_extenders.cpp        :  36)   Processed 397220 paths from 794438 (50%)\n  1:53:38.696  9644M / 15G   INFO    General                 (path_extenders.cpp        :  36)   Processed 476664 paths from 794438 (60%)\n  1:53:38.970    10G / 15G   INFO    General                 (path_extenders.cpp        :  34)   Processed 524288 paths from 794438 (65%)\n  1:53:39.154    10G / 15G   INFO    General                 (path_extenders.cpp        :  36)   Processed 556108 paths from 794438 (70%)\n  1:53:39.601    11G / 15G   INFO    General                 (path_extenders.cpp        :  36)   Processed 635552 paths from 794438 (80%)\n  1:53:40.043    11G / 15G   INFO    General                 (path_extenders.cpp        :  36)   Processed 714996 paths from 794438 (90%)\n  1:53:41.150    11G / 15G   INFO    General                 (launcher.cpp              : 250)   Finalizing paths\n  1:53:41.156    11G / 15G   INFO    General                 (launcher.cpp              : 252)   Deduplicating paths\n  1:53:41.440    11G / 15G   INFO    General                 (launcher.cpp              : 256)   Paths deduplicated\n  1:53:41.445    11G / 15G   INFO   PEResolver               (pe_resolver.cpp           :  60)   Removing overlaps\n  1:53:41.451    11G / 15G   INFO   PEResolver               (pe_resolver.cpp           :  70)   Marking overlaps\n  1:53:41.456    11G / 15G   INFO   OverlapRemover           (overlap_remover.hpp       : 116)   Marking start/end overlaps\n  1:53:42.016    11G / 15G   INFO   OverlapRemover           (overlap_remover.hpp       : 119)   Marking remaining overlaps\n  1:53:42.583    11G / 15G   INFO   PEResolver               (pe_resolver.cpp           :  73)   Splitting paths\n  1:53:42.662    11G / 15G   INFO   PEResolver               (pe_resolver.cpp           :  78)   Deduplicating paths\n  1:53:42.954    11G / 15G   INFO   PEResolver               (pe_resolver.cpp           :  80)   Overlaps removed\n  1:53:43.674    11G / 15G   INFO    General                 (launcher.cpp              : 273)   Paths finalized\n  1:53:43.680    11G / 15G   INFO    General                 (launcher.cpp              : 454)   Closing gaps in paths\n  1:53:45.941    14G / 15G   INFO    General                 (launcher.cpp              : 484)   Gap closing completed\n  1:53:46.523    14G / 15G   INFO    General                 (launcher.cpp              : 302)   Traversing tandem repeats\n  1:53:50.343    14G / 15G   INFO    General                 (launcher.cpp              : 312)   Traversed 16 loops\n  1:53:50.351    14G / 15G   INFO    General                 (launcher.cpp              : 250)   Finalizing paths\n  1:53:50.358    14G / 15G   INFO    General                 (launcher.cpp              : 252)   Deduplicating paths\n  1:53:50.843    14G / 15G   INFO    General                 (launcher.cpp              : 256)   Paths deduplicated\n  1:53:50.850    14G / 15G   INFO   PEResolver               (pe_resolver.cpp           :  60)   Removing overlaps\n  1:53:50.858    14G / 15G   INFO   PEResolver               (pe_resolver.cpp           :  70)   Marking overlaps\n  1:53:50.865    14G / 15G   INFO   OverlapRemover           (overlap_remover.hpp       : 116)   Marking start/end overlaps\n  1:53:51.809    14G / 15G   INFO   OverlapRemover           (overlap_remover.hpp       : 119)   Marking remaining overlaps\n  1:53:52.760    14G / 15G   INFO   PEResolver               (pe_resolver.cpp           :  73)   Splitting paths\n  1:53:52.833    14G / 15G   INFO   PEResolver               (pe_resolver.cpp           :  78)   Deduplicating paths\n  1:53:53.314    14G / 15G   INFO   PEResolver               (pe_resolver.cpp           :  80)   Overlaps removed\n  1:53:54.680    14G / 15G   INFO    General                 (launcher.cpp              : 273)   Paths finalized\n  1:53:54.688    14G / 15G   INFO    General                 (launcher.cpp              : 664)   ExSPAnder repeat resolving tool finished\n  1:53:56.803  7021M / 15G   INFO   StageManager             (stage.cpp                 : 185)   STAGE == Contig Output (id: contig_output)\n  1:53:56.865  7021M / 15G   INFO    General                 (contig_output.hpp         :  16)   Outputting contigs to /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K77/before_rr.fasta\n  1:53:59.895  7021M / 15G   INFO    General                 (contig_output_stage.cpp   : 151)   Writing GFA graph to /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K77/assembly_graph_with_scaffolds.gfa\n  1:54:01.553  7021M / 15G   INFO    General                 (contig_output_stage.cpp   : 165)   Outputting FastG graph to /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K77/assembly_graph.fastg\n  1:54:08.102  7021M / 15G   INFO    General                 (contig_output_stage.cpp   : 196)   Breaking scaffolds\n  1:54:13.774    11G / 15G   INFO    General                 (contig_output_stage.cpp   :  98)   Outputting contigs to /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K77/final_contigs.fasta\n  1:54:14.927    11G / 15G   INFO    General                 (contig_output_stage.cpp   : 104)   Outputting FastG paths to /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K77/final_contigs.paths\n  1:54:20.038  7421M / 15G   INFO    General                 (contig_output_stage.cpp   :  98)   Outputting contigs to /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K77/scaffolds.fasta\n  1:54:21.310  7421M / 15G   INFO    General                 (contig_output_stage.cpp   : 104)   Outputting FastG paths to /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K77/scaffolds.paths\n  1:54:22.348  7421M / 15G   INFO    General                 (contig_output_stage.cpp   : 111)   Populating GFA with scaffold paths\n  1:54:23.410  7021M / 15G   INFO    General                 (pipeline.cpp              : 287)   SPAdes finished\n  1:54:25.904     1M / 15G   INFO    General                 (main.cpp                  : 136)   Assembling time: 1 hours 54 minutes 25 seconds\n\n===== K77 finished. \n\n\n===== Copy files started. \n\n\n== Running: /bin/python /opt/ohpc/pub/apps/spades/3.15.5/share/spades/spades_pipeline/scripts/copy_files.py /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K77/before_rr.fasta /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/before_rr.fasta /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K77/assembly_graph_after_simplification.gfa /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/assembly_graph_after_simplification.gfa /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K77/final_contigs.fasta /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/contigs.fasta /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K77/first_pe_contigs.fasta /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/first_pe_contigs.fasta /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K77/strain_graph.gfa /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/strain_graph.gfa /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K77/scaffolds.fasta /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/scaffolds.fasta /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K77/scaffolds.paths /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/scaffolds.paths /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K77/assembly_graph_with_scaffolds.gfa /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/assembly_graph_with_scaffolds.gfa /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K77/assembly_graph.fastg /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/assembly_graph.fastg /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/K77/final_contigs.paths /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/contigs.paths\n\n\n===== Copy files finished. \n\n\n===== Assembling finished. \n\n\n===== Breaking scaffolds started. \n\n\n== Running: /bin/python /opt/ohpc/pub/apps/spades/3.15.5/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/scaffolds.fasta --misc_dir /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/misc --threshold_for_breaking_scaffolds 3\n\n\n===== Breaking scaffolds finished. \n\n\n===== Terminate started. \n\n\n===== Terminate finished. \n\n * Corrected reads are in /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/corrected/\n * Assembled contigs are in /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/contigs.fasta\n * Assembled scaffolds are in /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/scaffolds.paths\n * Assembly graph is in /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/assembly_graph.fastg\n * Assembly graph in GFA format is in /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/assembly_graph_with_scaffolds.gfa\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /xdisk/kcooper/caparicio/tree-fruit/02_assembly/peaches191/spades.log\n\nThank you for using SPAdes!\n</pre> In\u00a0[\u00a0]: Copied! <pre>files1=(01c_fastp_reads/*peaches*_1.trimmed.fastq)\n\nfor f1 in \"${files1[@]}\"; do\n    f2=\"${f1/_1.trimmed.fastq/_2.trimmed.fastq}\" # Constructs the path to the reverse read file\n    sample_name=$(basename \"$f1\" \"_1.trimmed.fastq\") # Extracts the sample name\n    output_dir=\"02_assembly/${sample_name}\" # Specifies the output directory based on the sample name\n\n    # Ensure a clean start by checking and cleaning any previous run data in the output directory\n    if [ \"$(ls -A $output_dir)\" ]; then\n        echo \"Output directory $output_dir is not empty. Cleaning up...\"\n        rm -rf ${output_dir:?}/{,.[!.],..?}* # This attempts to remove all files, including hidden ones\n        # Verify clean-up success\n        if [ \"$(ls -A $output_dir)\" ]; then\n            echo \"Failed to clean the directory, attempting again...\"\n            rm -rf ${output_dir:?}/{,.[!.],..?}*\n            # Final verification\n            if [ \"$(ls -A $output_dir)\" ]; then\n                echo \"Critical error: Output directory $output_dir cannot be cleaned.\"\n                exit 1 # Exit if still not clean to prevent SPAdes error\n            fi\n        fi\n    else\n        echo \"Creating output directory $output_dir\"\n        mkdir -p \"$output_dir\"\n    fi\n    \n    # Move or backup the old log file if not resuming\n    if [ -f \"${output_dir}/spades_peach.log\" ]; then\n        mv \"${output_dir}/spades_peach.log\" \"${output_dir}/spades_peach.log.backup\"\n    fi\n\n    # Creates the temporary directory only after successful cleaning verification\n    mkdir -p \"${output_dir}/tmp\" \n    temp_dir=\"${output_dir}/tmp\" # Specifies a temporary directory for SPAdes processing within the output directory\n\n    # Construct the initial SPAdes command\n    cmd=\"spades.py --meta -k 21,33,55,77 -o $output_dir --tmp-dir $temp_dir -1 $f1 -2 $f2\"\n    \n    # If a previous SPAdes log exists, modify the command to resume from the last checkpoint\n    if [ -f \"${output_dir}/spades_peach.log\" ]; then\n        echo \"Attempting to resume SPAdes assembly in $output_dir\"\n        cmd=\"spades.py -o $output_dir --restart-from last\"\n    else\n        echo \"Starting new SPAdes assembly in $output_dir\"\n    fi\n    \n    echo \"Running command: $cmd\"\n    eval $cmd\n    \n    # Check for successful completion and clean up temporary files\n    if [ -f \"${output_dir}/contigs.fasta\" ]; then\n        echo \"Assembly completed successfully for $sample_name. Cleaning up temporary files.\"\n        rm -rf \"$temp_dir\"\n    else\n        echo \"Assembly incomplete or failed for $sample_name. Temporary files retained for troubleshooting.\"\n    fi\ndone\n</pre> files1=(01c_fastp_reads/*peaches*_1.trimmed.fastq)  for f1 in \"${files1[@]}\"; do     f2=\"${f1/_1.trimmed.fastq/_2.trimmed.fastq}\" # Constructs the path to the reverse read file     sample_name=$(basename \"$f1\" \"_1.trimmed.fastq\") # Extracts the sample name     output_dir=\"02_assembly/${sample_name}\" # Specifies the output directory based on the sample name      # Ensure a clean start by checking and cleaning any previous run data in the output directory     if [ \"$(ls -A $output_dir)\" ]; then         echo \"Output directory $output_dir is not empty. Cleaning up...\"         rm -rf ${output_dir:?}/{,.[!.],..?}* # This attempts to remove all files, including hidden ones         # Verify clean-up success         if [ \"$(ls -A $output_dir)\" ]; then             echo \"Failed to clean the directory, attempting again...\"             rm -rf ${output_dir:?}/{,.[!.],..?}*             # Final verification             if [ \"$(ls -A $output_dir)\" ]; then                 echo \"Critical error: Output directory $output_dir cannot be cleaned.\"                 exit 1 # Exit if still not clean to prevent SPAdes error             fi         fi     else         echo \"Creating output directory $output_dir\"         mkdir -p \"$output_dir\"     fi          # Move or backup the old log file if not resuming     if [ -f \"${output_dir}/spades_peach.log\" ]; then         mv \"${output_dir}/spades_peach.log\" \"${output_dir}/spades_peach.log.backup\"     fi      # Creates the temporary directory only after successful cleaning verification     mkdir -p \"${output_dir}/tmp\"      temp_dir=\"${output_dir}/tmp\" # Specifies a temporary directory for SPAdes processing within the output directory      # Construct the initial SPAdes command     cmd=\"spades.py --meta -k 21,33,55,77 -o $output_dir --tmp-dir $temp_dir -1 $f1 -2 $f2\"          # If a previous SPAdes log exists, modify the command to resume from the last checkpoint     if [ -f \"${output_dir}/spades_peach.log\" ]; then         echo \"Attempting to resume SPAdes assembly in $output_dir\"         cmd=\"spades.py -o $output_dir --restart-from last\"     else         echo \"Starting new SPAdes assembly in $output_dir\"     fi          echo \"Running command: $cmd\"     eval $cmd          # Check for successful completion and clean up temporary files     if [ -f \"${output_dir}/contigs.fasta\" ]; then         echo \"Assembly completed successfully for $sample_name. Cleaning up temporary files.\"         rm -rf \"$temp_dir\"     else         echo \"Assembly incomplete or failed for $sample_name. Temporary files retained for troubleshooting.\"     fi done"},{"location":"assets/peach_assembly/#metaspades-peach-assembly-jupyter-notebook","title":"metaSPAdes Peach Assembly Jupyter Notebook\u00b6","text":""},{"location":"assets/peach_assembly/#change-working-directory","title":"Change working directory\u00b6","text":""},{"location":"assets/peach_assembly/#confirm-directory-change","title":"Confirm directory change\u00b6","text":""},{"location":"assets/peach_assembly/#to-test-run-the-first-sample-run-this-code","title":"To test-run the FIRST SAMPLE, run this code\u00b6","text":""},{"location":"assets/peach_assembly/#if-the-above-ran-normally-run-the-following-to-process-remaining","title":"If the above ran normally, run the following to PROCESS REMAINING\u00b6","text":""},{"location":"assets/python_push_debug/","title":"Python push debug","text":"In\u00a0[1]: Copied! <pre>!python -m pip list\n</pre> !python -m pip list <pre>Package                    Version\n-------------------------- -----------\naiohttp                    3.8.5\naiosignal                  1.3.1\nasttokens                  2.4.1\nasync-timeout              4.0.3\nattrs                      23.1.0\nBabel                      2.15.0\nbeautifulsoup4             4.12.3\nbleach                     6.1.0\ncertifi                    2023.7.22\ncffi                       1.16.0\ncharset-normalizer         3.2.0\nclick                      8.1.7\ncolorama                   0.4.6\ncomm                       0.2.2\ncryptography               42.0.7\ndataclasses-json           0.5.14\ndebugpy                    1.8.1\ndecorator                  5.1.1\ndefusedxml                 0.7.1\nDeprecated                 1.2.14\nexceptiongroup             1.2.1\nexecuting                  2.0.1\nfaiss-cpu                  1.7.4\nfastjsonschema             2.19.1\nfrozenlist                 1.4.0\nghp-import                 2.1.0\ngitdb                      4.0.11\nGitPython                  3.1.43\ngreenlet                   2.0.2\nhtml2text                  2020.1.16\nidna                       3.4\nipykernel                  6.29.4\nipython                    8.24.0\njedi                       0.19.1\nJinja2                     3.1.4\njsonschema                 4.22.0\njsonschema-specifications  2023.12.1\njupyter_client             8.6.1\njupyter_core               5.7.2\njupyterlab_pygments        0.3.0\njupytext                   1.16.2\nlangchain                  0.0.261\nlangsmith                  0.0.21\nMarkdown                   3.6\nmarkdown-it-py             3.0.0\nMarkupSafe                 2.1.5\nmarshmallow                3.20.1\nmatplotlib-inline          0.1.7\nmdit-py-plugins            0.4.0\nmdurl                      0.1.2\nmergedeep                  1.3.4\nmistune                    3.0.2\nmkdocs                     1.6.0\nmkdocs-get-deps            0.2.0\nmkdocs-glightbox           0.4.0\nmkdocs-jupyter             0.24.7\nmkdocs-material            9.5.21\nmkdocs-material-extensions 1.3.1\nmkdocs-table-reader-plugin 2.2.1\nmultidict                  6.0.4\nmypy-extensions            1.0.0\nnbclient                   0.10.0\nnbconvert                  7.16.4\nnbformat                   5.10.4\nnest-asyncio               1.6.0\nnumexpr                    2.8.5\nnumpy                      1.25.2\nopenai                     0.27.8\nopenapi-schema-pydantic    1.2.4\npackaging                  23.1\npaginate                   0.5.6\npandas                     2.2.2\npandocfilters              1.5.1\npaper-qa                   3.6.0\nparso                      0.8.4\npathspec                   0.12.1\npip                        24.0\nplatformdirs               4.2.1\nprompt-toolkit             3.0.43\npsutil                     5.9.8\npure-eval                  0.2.2\npycparser                  2.22\npycryptodome               3.18.0\npydantic                   1.10.12\nPyGithub                   2.3.0\nPygments                   2.18.0\nPyJWT                      2.8.0\npymdown-extensions         10.8.1\nPyMuPDF                    1.22.5\nPyNaCl                     1.5.0\npypdf                      3.15.0\npython-dateutil            2.9.0.post0\npytz                       2024.1\npywin32                    306\nPyYAML                     6.0.1\npyyaml_env_tag             0.1\npyzmq                      26.0.3\nreferencing                0.35.1\nregex                      2023.8.8\nrequests                   2.31.0\nrpds-py                    0.18.1\nsetuptools                 65.5.0\nsix                        1.16.0\nsmmap                      5.0.1\nsoupsieve                  2.5\nSQLAlchemy                 2.0.19\nstack-data                 0.6.3\ntabulate                   0.9.0\ntenacity                   8.2.2\ntiktoken                   0.4.0\ntinycss2                   1.3.0\ntomli                      2.0.1\ntornado                    6.4\ntqdm                       4.66.1\ntraitlets                  5.14.3\ntyping_extensions          4.7.1\ntyping-inspect             0.9.0\ntzdata                     2024.1\nurllib3                    2.0.4\nwatchdog                   4.0.0\nwcwidth                    0.2.13\nwebencodings               0.5.1\nwrapt                      1.16.0\nyarl                       1.9.2\n</pre> In\u00a0[2]: Copied! <pre>!python --version\n</pre> !python --version <pre>Python 3.10.11\n</pre>"},{"location":"assets/tree_fruit_kraken-biom/","title":"Tree Fruit kraken-biom Jupyter Notebook","text":"<p>The following Python command <code>python3 -m venv --system-site-packages /path/to/virtual/env</code> is used to create a new virtual environment for managing Python packages.</p> <ul> <li><p><code>python3</code>: Specifies which version of Python to use.</p> </li> <li><p><code>-m venv</code>: Tells Python to use the <code>venv</code> module to create a virtual environment. The <code>venv</code> module is a built-in module that comes with Python 3 and provides support for creating lightweight \"virtual environments\" with their own site directories, isolated from system site directories if desired.</p> </li> <li><p><code>--system-site-packages</code>: Allows the virtual environment to access packages installed system-wide and in the virtual environment. By default, a virtual environment is isolated and cannot access packages.</p> </li> <li><p><code>/path/to/virtual/env</code>: Directory where the virtual environment is created.</p> </li> </ul> In\u00a0[\u00a0]: Copied! <pre>module load python\n</pre> module load python In\u00a0[\u00a0]: Copied! <pre>python3 -m venv --system-site-packages ~/virtual/h5py_env/\n</pre> python3 -m venv --system-site-packages ~/virtual/h5py_env/  In\u00a0[\u00a0]: Copied! <pre>source ~/virtual/h5py_env/bin/activate\n</pre> source ~/virtual/h5py_env/bin/activate In\u00a0[\u00a0]: Copied! <pre>pip install --upgrade pip\n</pre> pip install --upgrade pip In\u00a0[\u00a0]: Copied! <pre>pip install h5py\n</pre> pip install h5py In\u00a0[\u00a0]: Copied! <pre>pip install jupyter --force-reinstall\n</pre> pip install jupyter --force-reinstall In\u00a0[\u00a0]: Copied! <pre>ipython kernel install --name h5py_env --user\n</pre> ipython kernel install --name h5py_env --user In\u00a0[\u00a0]: Copied! <pre>python -m ipykernel install --user --name=h5py_kernel --display-name=\"Python (h5py)\"\n</pre> python -m ipykernel install --user --name=h5py_kernel --display-name=\"Python (h5py)\" In\u00a0[\u00a0]: Copied! <pre>pip install h5py\n</pre> pip install h5py In\u00a0[\u00a0]: Copied! <pre>$HOME/.local/share/jupyter/kernels/h5py_env/kernel.json\n</pre> $HOME/.local/share/jupyter/kernels/h5py_env/kernel.json In\u00a0[\u00a0]: Copied! <pre># - Make a note of the (1) path\u00a0`&lt;/path/to/your/environment&gt;/bin/python` and (2) &lt;kernel_name&gt; to use in the edited file.\n# - Replace\u00a0`&lt;your_modules_here&gt;`\u00a0with the module(s) you would like to load.\n# - Replace the 'kernel.json' code after the '\"argv\": [' line with the following:\n{\n \"argv\": [\n \"bash\",\n \"-c\",\n \"module load &lt;your_modules_here&gt; ; &lt;/path/to/your/environment&gt;/bin/python -m ipykernel_launcher -f {connection_file}\"\n ],\n \"display_name\": \"&lt;kernel_name&gt;\",\n \"language\": \"python\",\n \"metadata\": {\n \"debugger\": true\n }\n}\n</pre> # - Make a note of the (1) path\u00a0`/bin/python` and (2)  to use in the edited file. # - Replace\u00a0``\u00a0with the module(s) you would like to load. # - Replace the 'kernel.json' code after the '\"argv\": [' line with the following: {  \"argv\": [  \"bash\",  \"-c\",  \"module load  ; /bin/python -m ipykernel_launcher -f {connection_file}\"  ],  \"display_name\": \"\",  \"language\": \"python\",  \"metadata\": {  \"debugger\": true  } } In\u00a0[\u00a0]: Copied! <pre># Example code\n \"bash\",\n \"-c\",\n \"module load python ; ~/virtual/h5py_env/bin/python3 -m ipykernel_launcher -f {connection_file}\"\n ],\n \"display_name\": \"h5py_env\",\n \"language\": \"python\",\n \"metadata\": {\n \"debugger\": true\n }\n}\n</pre> # Example code  \"bash\",  \"-c\",  \"module load python ; ~/virtual/h5py_env/bin/python3 -m ipykernel_launcher -f {connection_file}\"  ],  \"display_name\": \"h5py_env\",  \"language\": \"python\",  \"metadata\": {  \"debugger\": true  } } <p>Options used:</p> <ul> <li><p><code>--kraken_reports_fp</code>: Input file path. ENSURE THAT THIS DIRECTORY ONLY CONTAINS 'reports.txt' FILES.*</p> </li> <li><p><code>--max</code> and <code>--min</code>: Defines the maximum and minimum taxonomic ranks for which counts are recorded. By default, these are set to 'Order' (<code>O</code>) for <code>--max</code> and 'Species' (<code>S</code>) for <code>--min</code>. For our project, the default setting (<code>--max O --min S</code>) is useful for comprehensive microbial community analyses that require detail at the species level but also include higher taxonomic levels. This range ensures a detailed view of microbial diversity while preventing excessive granular data that may not be useful or could complicate analysis without adding informative value.</p> </li> <li><p><code>--output_fp</code>: Specifies the output file path for the BIOM-format table.</p> </li> <li><p><code>--fmt hdf5</code>: Phyloseq can import BIOM files using the <code>biomformat</code> package in R, which supports both BIOM 1.0 and 2.x formats. This format is advantageous due to its compact size and efficiency of handling large datasets.</p> </li> </ul> In\u00a0[18]: Copied! <pre>cd /xdisk/kcooper/caparicio/tree-fruit\n</pre> cd /xdisk/kcooper/caparicio/tree-fruit <pre>/xdisk/kcooper/caparicio/tree-fruit\n</pre> In\u00a0[19]: Copied! <pre>import os # Library to interact with operating system\nos.makedirs('04a_reads_kraken2_output', exist_ok=True)\n</pre> import os # Library to interact with operating system os.makedirs('04a_reads_kraken2_output', exist_ok=True) <p>Ensure executable permissions to move files</p> In\u00a0[22]: Copied! <pre>import stat # Module which provides constants and functions for interpreting the results of 'os'\n\ndir_path = \"/xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2\"\n\n# Ensure the directory path is absolute or adjust as necessary\nfor filename in os.listdir(dir_path):\n    file_path = os.path.join(dir_path, filename)\n    if os.path.isfile(file_path):  # Check if it's a file\n        # Add execute permissions for owner, group, and others\n        os.chmod(file_path, os.stat(file_path).st_mode | stat.S_IXUSR | stat.S_IXGRP | stat.S_IXOTH)\n</pre> import stat # Module which provides constants and functions for interpreting the results of 'os'  dir_path = \"/xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2\"  # Ensure the directory path is absolute or adjust as necessary for filename in os.listdir(dir_path):     file_path = os.path.join(dir_path, filename)     if os.path.isfile(file_path):  # Check if it's a file         # Add execute permissions for owner, group, and others         os.chmod(file_path, os.stat(file_path).st_mode | stat.S_IXUSR | stat.S_IXGRP | stat.S_IXOTH) <p>Move 'output.txt' files from '/04a_reads_kraken2' to '/04a_reads_kraken2_output'</p> In\u00a0[25]: Copied! <pre>import shutil  # Shell utilities module\n\nsource_dir = \"/xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2\"\ntarget_dir = \"/xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\"\n\n# Iterate through files in the source directory\nfor filename in os.listdir(source_dir):\n    if filename.endswith('output.txt'):  # Check if the file ends with 'output.txt'\n        source_path = os.path.join(source_dir, filename)\n        target_path = os.path.join(target_dir, filename)\n        \n        # Move the file\n        shutil.move(source_path, target_path)\n        print(f\"Moved: {filename} to {target_dir}\")\n</pre> import shutil  # Shell utilities module  source_dir = \"/xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2\" target_dir = \"/xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\"  # Iterate through files in the source directory for filename in os.listdir(source_dir):     if filename.endswith('output.txt'):  # Check if the file ends with 'output.txt'         source_path = os.path.join(source_dir, filename)         target_path = os.path.join(target_dir, filename)                  # Move the file         shutil.move(source_path, target_path)         print(f\"Moved: {filename} to {target_dir}\") <pre>Moved: k2_oranges415_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_oranges368_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_oranges412_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_apples340_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_oranges363_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_peaches289_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_peaches202_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_oranges378_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_oranges407_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_apples335_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_oranges422_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_peaches191_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_apples313_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_oranges379_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_oranges424_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_oranges426_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_oranges347_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_oranges417_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_oranges419_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_apples322_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_apples337_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_oranges400_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_apples341_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_oranges420_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_oranges369_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_peaches244_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_peaches204_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_peaches302_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_peaches253_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_peaches241_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_oranges367_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_peaches252_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_oranges409_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_peaches303_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_oranges410_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_oranges365_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_peaches263_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_oranges386_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_peaches304_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_oranges354_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_oranges373_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_apples320_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_oranges371_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_peaches274_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_oranges401_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_oranges356_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_peaches290_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_oranges366_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_oranges370_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_oranges372_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_peaches288_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_oranges416_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_peaches254_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_oranges358_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_peaches283_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_oranges402_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_apples321_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_oranges425_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_oranges382_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_peaches262_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_peaches284_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_peaches279_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_peaches192_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_apples315_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_peaches264_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_oranges418_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_oranges421_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_oranges427_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_oranges403_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_peaches203_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_peaches273_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_oranges364_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_apples338_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_peaches205_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\nMoved: k2_peaches234_output.txt to /xdisk/kcooper/caparicio/tree-fruit/04a_reads_kraken2_output\n</pre> In\u00a0[4]: Copied! <pre>%%bash\napptainer pull --name kraken-biom.sif docker://quay.io/biocontainers/kraken-biom:1.2.0--pyh5e36f6f_0\n</pre> %%bash apptainer pull --name kraken-biom.sif docker://quay.io/biocontainers/kraken-biom:1.2.0--pyh5e36f6f_0 <pre>INFO:    Converting OCI blobs to SIF format\nINFO:    Starting build...\nGetting image source signatures\nCopying blob sha256:581f44a8dfce1bf79f4da15b1397143379bf83612ad2a68f417a2e8e9f9bbcdd\nCopying blob sha256:c1a16a04cedd950c541fa85e64b62b17eb3b73a7f7e29ea3db23dc9b83dfcade\nCopying blob sha256:4ca545ee6d5db5c1170386eeb39b2ffe3bd46e5d4a73a9acbebc805f19607eb3\nCopying config sha256:f2b8ab953b50f8d8932f214ab7c5cd9208cc8e2a1365bfd0556de6a2cb7a51f8\nWriting manifest to image destination\n2024/05/08 11:28:52  info unpack layer: sha256:c1a16a04cedd950c541fa85e64b62b17eb3b73a7f7e29ea3db23dc9b83dfcade\n2024/05/08 11:28:52  info unpack layer: sha256:4ca545ee6d5db5c1170386eeb39b2ffe3bd46e5d4a73a9acbebc805f19607eb3\n2024/05/08 11:28:52  info unpack layer: sha256:581f44a8dfce1bf79f4da15b1397143379bf83612ad2a68f417a2e8e9f9bbcdd\nINFO:    Creating SIF file...\n</pre> In\u00a0[27]: Copied! <pre>%%bash\napptainer exec kraken-biom.sif kraken-biom \\\n  --kraken_reports_fp 04a_reads_kraken2/ \\\n  --output_fp 05_kraken-biom/tree-fruit_reads.biom \\\n  --max O --min S --fmt hdf5\n\n# Check if the file was created and echo a confirmation\nif [ -f \"05_kraken-biom/tree-fruit_reads.biom\" ]; then\n    echo \"BIOM file was successfully produced: 05_kraken-biom/tree-fruit_reads.biom\"\nelse\n    echo \"Failed to produce BIOM file.\"\nfi\n</pre> %%bash apptainer exec kraken-biom.sif kraken-biom \\   --kraken_reports_fp 04a_reads_kraken2/ \\   --output_fp 05_kraken-biom/tree-fruit_reads.biom \\   --max O --min S --fmt hdf5  # Check if the file was created and echo a confirmation if [ -f \"05_kraken-biom/tree-fruit_reads.biom\" ]; then     echo \"BIOM file was successfully produced: 05_kraken-biom/tree-fruit_reads.biom\" else     echo \"Failed to produce BIOM file.\" fi   <pre>BIOM file was successfully produced: 05_kraken-biom/tree-fruit_reads.biom\n</pre>"},{"location":"assets/tree_fruit_kraken-biom/#fruit-tree-kraken-biom-jupyter-notebook","title":"Fruit Tree kraken-biom Jupyter Notebook\u00b6","text":""},{"location":"assets/tree_fruit_kraken-biom/#install-the-jupyter-h5py-custom-kernel-in-an-interactive-terminal-session","title":"Install the Jupyter 'h5py' custom kernel in an Interactive Terminal Session\u00b6","text":"<ul> <li>Python Modules https://hpcdocs.static.arizona.edu/software/popular_software/python</li> <li>Open On Demand-Jupyter\u00a0https://uarizona.atlassian.net/wiki/x/bIaHB</li> <li>Using Python &amp; Python Packages\u00a0https://uarizona.atlassian.net/wiki/x/N4eHB</li> <li>HPC Containers\u00a0https://uarizona.atlassian.net/wiki/x/QoaHB</li> </ul> <p>Run Time = 24 ; Core count on a single node = 62 ; Memory per core = 20</p>"},{"location":"assets/tree_fruit_kraken-biom/#in-the-interactive-terminal","title":"In the interactive terminal:\u00b6","text":""},{"location":"assets/tree_fruit_kraken-biom/#create-h5py-virtual-environment","title":"Create 'h5py' virtual environment\u00b6","text":""},{"location":"assets/tree_fruit_kraken-biom/#activate-the-h5py_env-environment","title":"Activate the 'h5py_env' environment\u00b6","text":""},{"location":"assets/tree_fruit_kraken-biom/#update-package-installer-for-python","title":"Update package installer for Python\u00b6","text":""},{"location":"assets/tree_fruit_kraken-biom/#install-the-h5py-package-in-this-virtual-environment","title":"Install the <code>h5py</code> package in this virtual environment:\u00b6","text":""},{"location":"assets/tree_fruit_kraken-biom/#install-the-jupyter-package-in-the-virtual-environment","title":"Install the <code>jupyter</code>\u00a0package in the virtual environment\u00b6","text":""},{"location":"assets/tree_fruit_kraken-biom/#install-the-ipython-kernel-in-the-h5py_env-virtual-environment","title":"Install the ipython kernel in the 'h5py_env' virtual environment\u00b6","text":""},{"location":"assets/tree_fruit_kraken-biom/#create-a-new-kernel-linked-to-the-virtual-environment","title":"Create a new kernel linked to the virtual environment\u00b6","text":""},{"location":"assets/tree_fruit_kraken-biom/#install-h5py-or-other-packages-needed-in-this-virtual-environment","title":"Install <code>h5py</code> or other packages needed in this virtual environment\u00b6","text":""},{"location":"assets/tree_fruit_kraken-biom/#open-the-hidden-kernel-configuration-file-kerneljson-which-is-what-sets-up-the-virtual-environment-at-runtime","title":"Open the hidden kernel configuration file\u00a0<code>kernel.json</code>\u00a0which is what sets up the virtual environment at runtime\u00b6","text":""},{"location":"assets/tree_fruit_kraken-biom/#save-the-kerneljson-file-and-restart-the-jupyter-notebook-session","title":"Save the\u00a0<code>kernel.json</code>\u00a0file and restart the Jupyter notebook session.\u00b6","text":"<p>'Kernel' menu &gt; 'Change kernel' &gt; 'h5py_env'</p>"},{"location":"assets/tree_fruit_kraken-biom/#run-kraken-biom","title":"Run kraken-biom\u00b6","text":"<ul> <li>kraken-biom github\u00a0https://github.com/smdabdoub/kraken-biom</li> <li>kraken-biom biocontainers\u00a0https://biocontainers.pro/tools/kraken-biom</li> <li>Pulling Docker Containers https://hpcdocs.static.arizona.edu/software/containers/pulling_containers/#pulling-docker-containers</li> </ul>"},{"location":"assets/tree_fruit_kraken-biom/#navigate-to-working-directory","title":"Navigate to working directory\u00b6","text":""},{"location":"assets/tree_fruit_kraken-biom/#move-outputtxt-files","title":"*MOVE 'output.txt' files\u00b6","text":"<p>Create '04a_reads_kraken2_output' directory</p>"},{"location":"assets/tree_fruit_kraken-biom/#pull-the-latest-kraken-biom-container-image","title":"Pull the latest kraken-biom container image\u00b6","text":""},{"location":"assets/tree_fruit_kraken-biom/#run-kraken-biom-using-the-pulled-container","title":"Run kraken-biom using the pulled container\u00b6","text":""}]}